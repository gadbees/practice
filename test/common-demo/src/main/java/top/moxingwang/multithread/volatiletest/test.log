/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/bin/java -agentlib:jdwp=transport=dt_socket,address=127.0.0.1:62431,suspend=y,server=n -XX:+UnlockDiagnosticVMOptions -XX:+TraceClassLoading -XX:+LogCompilation -XX:+PrintAssembly -Dfile.encoding=UTF-8 -classpath "/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/lib/packager.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/lib/tools.jar:/Users/M/work/mine/collection/target/classes:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar" main.java.Bar
[Opened /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Object from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Serializable from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Comparable from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.CharSequence from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.String from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.AnnotatedElement from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.GenericDeclaration from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Type from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Cloneable from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.System from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Throwable from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Error from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadDeath from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Java HotSpot(TM) 64-Bit Server VM warning: PrintAssembly is enabled; turning on DebugNonSafepoints to gain additional output
[Loaded java.lang.Exception from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.RuntimeException from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.SecurityManager from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.AccessControlContext from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.SecureClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ReflectiveOperationException from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassNotFoundException from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.LinkageError from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.NoClassDefFoundError from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassCastException from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ArrayStoreException from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.VirtualMachineError from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.OutOfMemoryError from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StackOverflowError from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.IllegalMonitorStateException from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.SoftReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.WeakReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.FinalReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.PhantomReference from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Cleaner from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Finalizer from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Runnable from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Thread from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Thread$UncaughtExceptionHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadGroup from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Map from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Dictionary from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Hashtable from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Properties from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.AccessibleObject from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Member from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Field from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Parameter from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Executable from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Method from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Constructor from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.MagicAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessor from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.MethodAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ConstructorAccessor from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ConstructorAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ConstantPool from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.FieldAccessor from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.FieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeFieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.UnsafeStaticFieldAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.annotation.Annotation from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.CallerSensitive from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandle from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.DirectMethodHandle from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MemberName from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleNatives from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.LambdaForm from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodType from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.BootstrapMethodError from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.CallSite from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.ConstantCallSite from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MutableCallSite from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.VolatileCallSite from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Appendable from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.AbstractStringBuilder from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringBuilder from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Unsafe from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.AutoCloseable from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Closeable from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.InputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ByteArrayInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.File from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URL from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.Manifest from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.CodeSource from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StackTraceElement from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.Buffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Boolean from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Character from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Number from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Float from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Double from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Byte from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Short from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Integer from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Long from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.NullPointerException from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ArithmeticException from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ObjectStreamField from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Comparator from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.String$CaseInsensitiveComparator from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Guard from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Permission from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.BasicPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.RuntimePermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.AccessController from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.ReflectPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.PrivilegedAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory$GetReflectionFactoryAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.cert.Certificate from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Iterable from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collection from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.List from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.RandomAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractList from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Vector from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Stack from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$Lock from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$ReferenceHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.InterruptedException from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.ArrayList from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Set from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptyList from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$EmptyMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableList from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$UnmodifiableRandomAccessList from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Null from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.ReferenceQueue$Lock from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaLangRefAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Reference$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.SharedSecrets from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.IncompatibleClassChangeError from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.NoSuchMethodError from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.Reflection from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Map$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.VM from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Hashtable$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Math from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ref.Finalizer$FinalizerThread from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.Charset from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.spi.CharsetProvider from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.FastCharsetProvider from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.PreHashedMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Aliases from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Classes from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StandardCharsets$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicInteger from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$ReflectionData from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$Atomic from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.AbstractRepository from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.GenericDeclRepository from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.generics.repository.ClassRepository from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$AnnotationData from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.annotation.AnnotationType from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$ClassValueMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Modifier from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.LangReflectAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.ReflectAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Arrays from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.HistoricallyNamedCharset from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.Unicode from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.ReflectionFactory$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.NativeConstructorAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.DelegatingConstructorAccessorImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringCoding from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ThreadLocal$ThreadLocalMap$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringCoding$StringDecoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.ArrayDecoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CharsetDecoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8$Decoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CodingErrorAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Hashtable$EntrySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$SynchronizedCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$SynchronizedSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Objects from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Enumeration from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Iterator from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Hashtable$Enumerator from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Runtime from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Version from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileDescriptor from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaIOFileDescriptorAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileDescriptor$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Flushable from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.OutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilterInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.BufferedInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.PrivilegedExceptionAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.reflect.misc.ReflectUtil from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilterOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.PrintStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.BufferedOutputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Writer from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.OutputStreamWriter from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StreamEncoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.action.GetPropertyAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.ArrayEncoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CharsetEncoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_8$Encoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.ByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.HeapByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.Bits from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.ByteOrder from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicLong from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaNioAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.Bits$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.BufferedWriter from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.DefaultFileSystem from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileSystem from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.UnixFileSystem from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Enum from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.File$PathStatus from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.file.Watchable from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.file.Path from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.StringCoding$StringEncoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.ExpiringCache$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedHashMap$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$NativeLibrary from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Terminator from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.SignalHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Terminator$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Signal from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.NativeSignalHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Integer$IntegerCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.OSEnvironment from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaLangAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.System$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.IllegalArgumentException from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Compiler from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Compiler$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLStreamHandlerFactory from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$Factory from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.security.util.Debug from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassLoader$ParallelLoaders from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Collections$SetFromMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.WeakHashMap$KeySet from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaNetAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader$7 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.StringTokenizer from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$ExtClassLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.MetaIndex from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Readable from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.Reader from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.BufferedReader from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.InputStreamReader from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileReader from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.StreamDecoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.CharBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.HeapCharBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.CoderResult$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.reflect.Array from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashMap$TreeNode from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FileInputStream$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.ParseUtil from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.BitSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Locale from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleObjectCache from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Locale$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.Lock from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.locks.ReentrantLock from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Segment from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CounterCell from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$CollectionView from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$KeySetView from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$ValuesView from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.ConcurrentHashMap$EntrySetView from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale$Cache from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.BaseLocale$Key from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleObjectCache$CacheEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Locale$LocaleKey from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.util.locale.LocaleUtils from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.CharacterData from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.CharacterDataLatin1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.Parts from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLStreamHandler from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.file.Handler from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaSecurityAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$JavaSecurityAccessImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaSecurityProtectionDomainAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.ProtectionDomain$Key from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Principal from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.HashSet from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.jar.Handler from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Launcher$AppClassLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.SystemClassLoaderAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.VMSupport from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Connected to the target VM, address: '127.0.0.1:62431', transport: 'socket'
[Loaded java.lang.invoke.MethodHandleImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.function.Function from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$2 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleImpl$4 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Entry from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Identity from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.ClassValue$Version from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MemberName$Factory from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleStatics from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.invoke.MethodHandleStatics$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Loaded disassembler from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/hsdis-amd64.dylib
Decoding compiled method 0x00000001030ff3d0:
Code:
[Disassembling for mach='i386:x86-64']
[Entry Point]
[Constants]
  # {method} {0x0000000116e71098} 'hashCode' '()I' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x00000001030ff540: mov    0x8(%rsi),%r10d
  0x00000001030ff544: shl    $0x3,%r10
  0x00000001030ff548: cmp    %rax,%r10
  0x00000001030ff54b: jne    0x0000000103045e20  ;   {runtime_call}
  0x00000001030ff551: data32 data32 nopw 0x0(%rax,%rax,1)
  0x00000001030ff55c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x00000001030ff560: mov    %eax,-0x14000(%rsp)
  0x00000001030ff567: push   %rbp
  0x00000001030ff568: sub    $0x30,%rsp
  0x00000001030ff56c: movabs $0x11703ae08,%rax  ;   {metadata(method data for {method} {0x0000000116e71098} 'hashCode' '()I' in 'java/lang/String')}
  0x00000001030ff576: mov    0xdc(%rax),%edi
  0x00000001030ff57c: add    $0x8,%edi
  0x00000001030ff57f: mov    %edi,0xdc(%rax)
  0x00000001030ff585: movabs $0x116e71098,%rax  ;   {metadata({method} {0x0000000116e71098} 'hashCode' '()I' in 'java/lang/String')}
  0x00000001030ff58f: and    $0x1ff8,%edi
  0x00000001030ff595: cmp    $0x0,%edi
  0x00000001030ff598: je     0x00000001030ff6d1  ;*aload_0
                                                ; - java.lang.String::hashCode@0 (line 1466)

  0x00000001030ff59e: mov    0x10(%rsi),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x00000001030ff5a1: cmp    $0x0,%eax
  0x00000001030ff5a4: movabs $0x11703ae08,%rdi  ;   {metadata(method data for {method} {0x0000000116e71098} 'hashCode' '()I' in 'java/lang/String')}
  0x00000001030ff5ae: movabs $0x108,%rbx
  0x00000001030ff5b8: jne    0x00000001030ff5c8
  0x00000001030ff5be: movabs $0x118,%rbx
  0x00000001030ff5c8: mov    (%rdi,%rbx,1),%rdx
  0x00000001030ff5cc: lea    0x1(%rdx),%rdx
  0x00000001030ff5d0: mov    %rdx,(%rdi,%rbx,1)
  0x00000001030ff5d4: jne    0x00000001030ff6c5  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x00000001030ff5da: mov    0xc(%rsi),%edi
  0x00000001030ff5dd: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x00000001030ff5e1: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x00000001030ff6e8
  0x00000001030ff5e4: cmp    $0x0,%ebx
  0x00000001030ff5e7: movabs $0x11703ae08,%rdx  ;   {metadata(method data for {method} {0x0000000116e71098} 'hashCode' '()I' in 'java/lang/String')}
  0x00000001030ff5f1: movabs $0x128,%rcx
  0x00000001030ff5fb: jle    0x00000001030ff60b
  0x00000001030ff601: movabs $0x138,%rcx
  0x00000001030ff60b: mov    (%rdx,%rcx,1),%r8
  0x00000001030ff60f: lea    0x1(%r8),%r8
  0x00000001030ff613: mov    %r8,(%rdx,%rcx,1)
  0x00000001030ff617: jle    0x00000001030ff6c5  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x00000001030ff61d: mov    $0x0,%edx
  0x00000001030ff622: jmpq   0x00000001030ff68a  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x00000001030ff627: nop
  0x00000001030ff628: movslq %edx,%rcx
  0x00000001030ff62b: movzwl 0x10(%rdi,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x00000001030ff630: mov    %rax,%r8
  0x00000001030ff633: shl    $0x5,%eax
  0x00000001030ff636: sub    %r8d,%eax
  0x00000001030ff639: add    %ecx,%eax
  0x00000001030ff63b: inc    %edx
  0x00000001030ff63d: movabs $0x11703ae08,%rcx  ;   {metadata(method data for {method} {0x0000000116e71098} 'hashCode' '()I' in 'java/lang/String')}
  0x00000001030ff647: mov    0xe0(%rcx),%r8d
  0x00000001030ff64e: add    $0x8,%r8d
  0x00000001030ff652: mov    %r8d,0xe0(%rcx)
  0x00000001030ff659: movabs $0x116e71098,%rcx  ;   {metadata({method} {0x0000000116e71098} 'hashCode' '()I' in 'java/lang/String')}
  0x00000001030ff663: and    $0xfff8,%r8d
  0x00000001030ff66a: cmp    $0x0,%r8d
  0x00000001030ff66e: je     0x00000001030ff6ed  ; OopMap{rdi=Oop rsi=Oop off=308}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x00000001030ff674: test   %eax,-0xa0a57a(%rip)        # 0x00000001026f5100
                                                ;   {poll}
  0x00000001030ff67a: movabs $0x11703ae08,%rcx  ;   {metadata(method data for {method} {0x0000000116e71098} 'hashCode' '()I' in 'java/lang/String')}
  0x00000001030ff684: incl   0x168(%rcx)        ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x00000001030ff68a: cmp    %ebx,%edx
  0x00000001030ff68c: movabs $0x11703ae08,%rcx  ;   {metadata(method data for {method} {0x0000000116e71098} 'hashCode' '()I' in 'java/lang/String')}
  0x00000001030ff696: movabs $0x148,%r8
  0x00000001030ff6a0: jge    0x00000001030ff6b0
  0x00000001030ff6a6: movabs $0x158,%r8
  0x00000001030ff6b0: mov    (%rcx,%r8,1),%r9
  0x00000001030ff6b4: lea    0x1(%r9),%r9
  0x00000001030ff6b8: mov    %r9,(%rcx,%r8,1)
  0x00000001030ff6bc: jl     0x00000001030ff628  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x00000001030ff6c2: mov    %eax,0x10(%rsi)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x00000001030ff6c5: add    $0x30,%rsp
  0x00000001030ff6c9: pop    %rbp
  0x00000001030ff6ca: test   %eax,-0xa0a5d0(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x00000001030ff6d0: retq
  0x00000001030ff6d1: mov    %rax,0x8(%rsp)
  0x00000001030ff6d6: movq   $0xffffffffffffffff,(%rsp)
  0x00000001030ff6de: callq  0x00000001030fe020  ; OopMap{rsi=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)
                                                ;   {runtime_call}
  0x00000001030ff6e3: jmpq   0x00000001030ff59e
  0x00000001030ff6e8: callq  0x000000010306db40  ; OopMap{rsi=Oop rdi=Oop off=429}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x00000001030ff6ed: mov    %rcx,0x8(%rsp)
  0x00000001030ff6f2: movq   $0x2d,(%rsp)
  0x00000001030ff6fa: callq  0x00000001030fe020  ; OopMap{rdi=Oop rsi=Oop off=447}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)
                                                ;   {runtime_call}
  0x00000001030ff6ff: jmpq   0x00000001030ff674
  0x00000001030ff704: nop
  0x00000001030ff705: nop
  0x00000001030ff706: mov    0x2a8(%r15),%rax
  0x00000001030ff70d: movabs $0x0,%r10
  0x00000001030ff717: mov    %r10,0x2a8(%r15)
  0x00000001030ff71e: movabs $0x0,%r10
  0x00000001030ff728: mov    %r10,0x2b0(%r15)
  0x00000001030ff72f: add    $0x30,%rsp
  0x00000001030ff733: pop    %rbp
  0x00000001030ff734: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x00000001030ff739: hlt
  0x00000001030ff73a: hlt
  0x00000001030ff73b: hlt
  0x00000001030ff73c: hlt
  0x00000001030ff73d: hlt
  0x00000001030ff73e: hlt
  0x00000001030ff73f: hlt
[Exception Handler]
[Stub Code]
  0x00000001030ff740: callq  0x00000001030fb9a0  ;   {no_reloc}
  0x00000001030ff745: mov    %rsp,-0x28(%rsp)
  0x00000001030ff74a: sub    $0x80,%rsp
  0x00000001030ff751: mov    %rax,0x78(%rsp)
  0x00000001030ff756: mov    %rcx,0x70(%rsp)
  0x00000001030ff75b: mov    %rdx,0x68(%rsp)
  0x00000001030ff760: mov    %rbx,0x60(%rsp)
  0x00000001030ff765: mov    %rbp,0x50(%rsp)
  0x00000001030ff76a: mov    %rsi,0x48(%rsp)
  0x00000001030ff76f: mov    %rdi,0x40(%rsp)
  0x00000001030ff774: mov    %r8,0x38(%rsp)
  0x00000001030ff779: mov    %r9,0x30(%rsp)
  0x00000001030ff77e: mov    %r10,0x28(%rsp)
  0x00000001030ff783: mov    %r11,0x20(%rsp)
  0x00000001030ff788: mov    %r12,0x18(%rsp)
  0x00000001030ff78d: mov    %r13,0x10(%rsp)
  0x00000001030ff792: mov    %r14,0x8(%rsp)
  0x00000001030ff797: mov    %r15,(%rsp)
  0x00000001030ff79b: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x00000001030ff7a5: movabs $0x1030ff745,%rsi  ;   {internal_word}
  0x00000001030ff7af: mov    %rsp,%rdx
  0x00000001030ff7b2: and    $0xfffffffffffffff0,%rsp
  0x00000001030ff7b6: callq  0x0000000101b0f196  ;   {runtime_call}
  0x00000001030ff7bb: hlt
[Deopt Handler Code]
  0x00000001030ff7bc: movabs $0x1030ff7bc,%r10  ;   {section_word}
  0x00000001030ff7c6: push   %r10
  0x00000001030ff7c8: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x00000001030ff7cd: hlt
  0x00000001030ff7ce: hlt
  0x00000001030ff7cf: hlt
[Loaded sun.misc.PostVMInitHook from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.usagetracker.UsageTrackerClient from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.concurrent.atomic.AtomicBoolean from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.usagetracker.UsageTrackerClient$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.usagetracker.UsageTrackerClient$4 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x0000000103107b10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000116e6fcf8} 'length' '()I' in 'java/lang/String'
  #           [sp+0x40]  (sp of caller)
  0x0000000103107c80: mov    0x8(%rsi),%r10d
  0x0000000103107c84: shl    $0x3,%r10
  0x0000000103107c88: cmp    %rax,%r10
  0x0000000103107c8b: jne    0x0000000103045e20  ;   {runtime_call}
  0x0000000103107c91: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000103107c9c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000103107ca0: mov    %eax,-0x14000(%rsp)
  0x0000000103107ca7: push   %rbp
  0x0000000103107ca8: sub    $0x30,%rsp
  0x0000000103107cac: movabs $0x1170450c0,%rax  ;   {metadata(method data for {method} {0x0000000116e6fcf8} 'length' '()I' in 'java/lang/String')}
  0x0000000103107cb6: mov    0xdc(%rax),%edi
  0x0000000103107cbc: add    $0x8,%edi
  0x0000000103107cbf: mov    %edi,0xdc(%rax)
  0x0000000103107cc5: movabs $0x116e6fcf8,%rax  ;   {metadata({method} {0x0000000116e6fcf8} 'length' '()I' in 'java/lang/String')}
  0x0000000103107ccf: and    $0x1ff8,%edi
  0x0000000103107cd5: cmp    $0x0,%edi
  0x0000000103107cd8: je     0x0000000103107cf4  ;*aload_0
                                                ; - java.lang.String::length@0 (line 623)

  0x0000000103107cde: mov    0xc(%rsi),%eax
  0x0000000103107ce1: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x0000000103107ce5: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; implicit exception: dispatches to 0x0000000103107d08
  0x0000000103107ce8: add    $0x30,%rsp
  0x0000000103107cec: pop    %rbp
  0x0000000103107ced: test   %eax,-0xa12bf3(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x0000000103107cf3: retq
  0x0000000103107cf4: mov    %rax,0x8(%rsp)
  0x0000000103107cf9: movq   $0xffffffffffffffff,(%rsp)
  0x0000000103107d01: callq  0x00000001030fe020  ; OopMap{rsi=Oop off=134}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ;   {runtime_call}
  0x0000000103107d06: jmp    0x0000000103107cde
  0x0000000103107d08: callq  0x000000010306db40  ; OopMap{rsi=Oop off=141}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x0000000103107d0d: nop
  0x0000000103107d0e: nop
  0x0000000103107d0f: mov    0x2a8(%r15),%rax
  0x0000000103107d16: movabs $0x0,%r10
  0x0000000103107d20: mov    %r10,0x2a8(%r15)
  0x0000000103107d27: movabs $0x0,%r10
  0x0000000103107d31: mov    %r10,0x2b0(%r15)
  0x0000000103107d38: add    $0x30,%rsp
  0x0000000103107d3c: pop    %rbp
  0x0000000103107d3d: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x0000000103107d42: hlt
  0x0000000103107d43: hlt
  0x0000000103107d44: hlt
  0x0000000103107d45: hlt
  0x0000000103107d46: hlt
  0x0000000103107d47: hlt
  0x0000000103107d48: hlt
  0x0000000103107d49: hlt
  0x0000000103107d4a: hlt
  0x0000000103107d4b: hlt
  0x0000000103107d4c: hlt
  0x0000000103107d4d: hlt
  0x0000000103107d4e: hlt
  0x0000000103107d4f: hlt
  0x0000000103107d50: hlt
  0x0000000103107d51: hlt
  0x0000000103107d52: hlt
  0x0000000103107d53: hlt
  0x0000000103107d54: hlt
  0x0000000103107d55: hlt
  0x0000000103107d56: hlt
  0x0000000103107d57: hlt
  0x0000000103107d58: hlt
  0x0000000103107d59: hlt
  0x0000000103107d5a: hlt
  0x0000000103107d5b: hlt
  0x0000000103107d5c: hlt
  0x0000000103107d5d: hlt
  0x0000000103107d5e: hlt
  0x0000000103107d5f: hlt
[Exception Handler]
[Stub Code]
  0x0000000103107d60: callq  0x00000001030fb9a0  ;   {no_reloc}
  0x0000000103107d65: mov    %rsp,-0x28(%rsp)
  0x0000000103107d6a: sub    $0x80,%rsp
  0x0000000103107d71: mov    %rax,0x78(%rsp)
  0x0000000103107d76: mov    %rcx,0x70(%rsp)
  0x0000000103107d7b: mov    %rdx,0x68(%rsp)
  0x0000000103107d80: mov    %rbx,0x60(%rsp)
  0x0000000103107d85: mov    %rbp,0x50(%rsp)
  0x0000000103107d8a: mov    %rsi,0x48(%rsp)
  0x0000000103107d8f: mov    %rdi,0x40(%rsp)
  0x0000000103107d94: mov    %r8,0x38(%rsp)
  0x0000000103107d99: mov    %r9,0x30(%rsp)
  0x0000000103107d9e: mov    %r10,0x28(%rsp)
  0x0000000103107da3: mov    %r11,0x20(%rsp)
  0x0000000103107da8: mov    %r12,0x18(%rsp)
  0x0000000103107dad: mov    %r13,0x10(%rsp)
  0x0000000103107db2: mov    %r14,0x8(%rsp)
  0x0000000103107db7: mov    %r15,(%rsp)
  0x0000000103107dbb: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x0000000103107dc5: movabs $0x103107d65,%rsi  ;   {internal_word}
  0x0000000103107dcf: mov    %rsp,%rdx
  0x0000000103107dd2: and    $0xfffffffffffffff0,%rsp
  0x0000000103107dd6: callq  0x0000000101b0f196  ;   {runtime_call}
  0x0000000103107ddb: hlt
[Deopt Handler Code]
  0x0000000103107ddc: movabs $0x103107ddc,%r10  ;   {section_word}
  0x0000000103107de6: push   %r10
  0x0000000103107de8: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x0000000103107ded: hlt
  0x0000000103107dee: hlt
  0x0000000103107def: hlt
Decoding compiled method 0x0000000103107ed0:
Code:
[Entry Point]
  # {method} {0x0000000116e85f00} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = 'java/lang/Object'
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x0000000103108040: mov    0x8(%rsi),%r10d
  0x0000000103108044: shl    $0x3,%r10
  0x0000000103108048: cmp    %r10,%rax
  0x000000010310804b: je     0x0000000103108058
  0x0000000103108051: jmpq   0x0000000103045e20  ;   {runtime_call}
  0x0000000103108056: xchg   %ax,%ax
[Verified Entry Point]
  0x0000000103108058: mov    %eax,-0x14000(%rsp)
  0x000000010310805f: push   %rbp
  0x0000000103108060: mov    %rsp,%rbp
  0x0000000103108063: sub    $0x50,%rsp
  0x0000000103108067: mov    %r9,(%rsp)
  0x000000010310806b: mov    %r8,%r9
  0x000000010310806e: mov    %rcx,0x18(%rsp)
  0x0000000103108073: cmp    $0x0,%rcx
  0x0000000103108077: lea    0x18(%rsp),%r8
  0x000000010310807c: cmove  0x18(%rsp),%r8
  0x0000000103108082: mov    %rdx,%rcx
  0x0000000103108085: mov    %rsi,0x8(%rsp)
  0x000000010310808a: cmp    $0x0,%rsi
  0x000000010310808e: lea    0x8(%rsp),%rdx
  0x0000000103108093: cmove  0x8(%rsp),%rdx
  0x0000000103108099: movabs $0x795580c78,%r14  ;   {oop(a 'java/lang/Class' = 'java/lang/System')}
  0x00000001031080a3: mov    %r14,0x38(%rsp)
  0x00000001031080a8: lea    0x38(%rsp),%r14
  0x00000001031080ad: mov    %r14,%rsi          ; OopMap{[24]=Oop [8]=Oop [56]=Oop off=112}
  0x00000001031080b0: movabs $0x1031080b0,%r10  ;   {section_word}
  0x00000001031080ba: mov    %r10,0x1e0(%r15)
  0x00000001031080c1: mov    %rsp,0x1d8(%r15)
  0x00000001031080c8: cmpb   $0x0,-0x1114ca5(%rip)        # 0x0000000101ff342a
                                                ;   {external_word}
  0x00000001031080cf: je     0x0000000103108113
  0x00000001031080d5: push   %rsi
  0x00000001031080d6: push   %rdx
  0x00000001031080d7: push   %rcx
  0x00000001031080d8: push   %r8
  0x00000001031080da: push   %r9
  0x00000001031080dc: movabs $0x116e85f00,%rsi  ;   {metadata({method} {0x0000000116e85f00} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x00000001031080e6: mov    %r15,%rdi
  0x00000001031080e9: test   $0xf,%esp
  0x00000001031080ef: je     0x0000000103108107
  0x00000001031080f5: sub    $0x8,%rsp
  0x00000001031080f9: callq  0x0000000101bf3488  ;   {runtime_call}
  0x00000001031080fe: add    $0x8,%rsp
  0x0000000103108102: jmpq   0x000000010310810c
  0x0000000103108107: callq  0x0000000101bf3488  ;   {runtime_call}
  0x000000010310810c: pop    %r9
  0x000000010310810e: pop    %r8
  0x0000000103108110: pop    %rcx
  0x0000000103108111: pop    %rdx
  0x0000000103108112: pop    %rsi
  0x0000000103108113: lea    0x1f8(%r15),%rdi
  0x000000010310811a: movl   $0x4,0x270(%r15)
  0x0000000103108125: callq  0x0000000101a4f5f0  ;   {runtime_call}
  0x000000010310812a: vzeroupper
  0x000000010310812d: movl   $0x5,0x270(%r15)
  0x0000000103108138: lock addl $0x0,(%rsp)
  0x000000010310813d: cmpl   $0x0,-0x110a377(%rip)        # 0x0000000101ffddd0
                                                ;   {external_word}
  0x0000000103108147: jne    0x000000010310815b
  0x000000010310814d: cmpl   $0x0,0x30(%r15)
  0x0000000103108155: je     0x0000000103108174
  0x000000010310815b: mov    %r15,%rdi
  0x000000010310815e: mov    %rsp,%r12
  0x0000000103108161: sub    $0x0,%rsp
  0x0000000103108165: and    $0xfffffffffffffff0,%rsp
  0x0000000103108169: callq  0x0000000101c75b30  ;   {runtime_call}
  0x000000010310816e: mov    %r12,%rsp
  0x0000000103108171: xor    %r12,%r12
  0x0000000103108174: movl   $0x8,0x270(%r15)
  0x000000010310817f: cmpl   $0x1,0x29c(%r15)
  0x000000010310818a: je     0x0000000103108212
  0x0000000103108190: cmpb   $0x0,-0x1114d6d(%rip)        # 0x0000000101ff342a
                                                ;   {external_word}
  0x0000000103108197: je     0x00000001031081cd
  0x000000010310819d: movabs $0x116e85f00,%rsi  ;   {metadata({method} {0x0000000116e85f00} 'arraycopy' '(Ljava/lang/Object;ILjava/lang/Object;II)V' in 'java/lang/System')}
  0x00000001031081a7: mov    %r15,%rdi
  0x00000001031081aa: test   $0xf,%esp
  0x00000001031081b0: je     0x00000001031081c8
  0x00000001031081b6: sub    $0x8,%rsp
  0x00000001031081ba: callq  0x0000000101bf33fa  ;   {runtime_call}
  0x00000001031081bf: add    $0x8,%rsp
  0x00000001031081c3: jmpq   0x00000001031081cd
  0x00000001031081c8: callq  0x0000000101bf33fa  ;   {runtime_call}
  0x00000001031081cd: movabs $0x0,%r10
  0x00000001031081d7: mov    %r10,0x1d8(%r15)
  0x00000001031081de: movabs $0x0,%r10
  0x00000001031081e8: mov    %r10,0x1e0(%r15)
  0x00000001031081ef: mov    0x38(%r15),%rcx
  0x00000001031081f3: movl   $0x0,0x100(%rcx)
  0x00000001031081fd: leaveq
  0x00000001031081fe: cmpq   $0x0,0x8(%r15)
  0x0000000103108206: jne    0x000000010310820d
  0x000000010310820c: retq
  0x000000010310820d: jmpq   Stub::forward exception  ;   {runtime_call}
  0x0000000103108212: mov    %rsp,%r12
  0x0000000103108215: sub    $0x0,%rsp
  0x0000000103108219: and    $0xfffffffffffffff0,%rsp
  0x000000010310821d: callq  0x0000000101bf1260  ;   {runtime_call}
  0x0000000103108222: mov    %r12,%rsp
  0x0000000103108225: xor    %r12,%r12
  0x0000000103108228: jmpq   0x0000000103108190
  0x000000010310822d: hlt
  0x000000010310822e: hlt
  0x000000010310822f: hlt
[Loaded sun.usagetracker.UsageTrackerClient$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x0000000103108250:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000116e6fe48} 'charAt' '(I)C' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x00000001031083e0: mov    0x8(%rsi),%r10d
  0x00000001031083e4: shl    $0x3,%r10
  0x00000001031083e8: [Loaded java.io.FileOutputStream$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
cmp    %rax,%r10
  0x00000001031083eb: jne    0x0000000103045e20  ;   {runtime_call}
  0x00000001031083f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x00000001031083fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000103108400: mov    %eax,-0x14000(%rsp)
  0x0000000103108407: push   %rbp
  0x0000000103108408: sub    $0x40,%rsp
  0x000000010310840c: movabs $0x116ff5b08,%rax  ;   {metadata(method data for {method} {0x0000000116e6fe48} 'charAt' '(I)C' in 'java/lang/String')}
  0x0000000103108416: mov    0xdc(%rax),%edi
  0x000000010310841c: add    $0x8,%edi
  0x000000010310841f: mov    %edi,0xdc(%rax)
  0x0000000103108425: movabs $0x116e6fe48,%rax  ;   {metadata({method} {0x0000000116e6fe48} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010310842f: and    $0x1ff8,%edi
  0x0000000103108435: cmp    $0x0,%edi
  0x0000000103108438: je     0x0000000103108531  ;*iload_1
                                                ; - java.lang.String::charAt@0 (line 657)

  0x000000010310843e: cmp    $0x0,%edx
  0x0000000103108441: movabs $0x116ff5b08,%rax  ;   {metadata(method data for {method} {0x0000000116e6fe48} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010310844b: movabs $0x108,%rdi
  0x0000000103108455: jl     0x0000000103108465
  0x000000010310845b: movabs $0x118,%rdi
  0x0000000103108465: mov    (%rax,%rdi,1),%rbx
  0x0000000103108469: lea    0x1(%rbx),%rbx
  0x000000010310846d: mov    %rbx,(%rax,%rdi,1)
  0x0000000103108471: jl     0x00000001031084d3  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x0000000103108477: mov    0xc(%rsi),%eax
  0x000000010310847a: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x000000010310847e: mov    0xc(%rax),%edi     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x0000000103108548
  0x0000000103108481: cmp    %edi,%edx
  0x0000000103108483: movabs $0x116ff5b08,%rdi  ;   {metadata(method data for {method} {0x0000000116e6fe48} 'charAt' '(I)C' in 'java/lang/String')}
  0x000000010310848d: movabs $0x128,%rbx
  0x0000000103108497: jl     0x00000001031084a7
  0x000000010310849d: movabs $0x138,%rbx
  0x00000001031084a7: mov    (%rdi,%rbx,1),%rcx
  0x00000001031084ab: lea    0x1(%rcx),%rcx
  0x00000001031084af: mov    %rcx,(%rdi,%rbx,1)
  0x00000001031084b3: jge    0x00000001031084d3  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x00000001031084b9: movslq %edx,%rdx
  0x00000001031084bc: movzwl 0x10(%rax,%rdx,2),%eax  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x00000001031084c1: and    $0xffff,%eax
  0x00000001031084c7: add    $0x40,%rsp
  0x00000001031084cb: pop    %rbp
  0x00000001031084cc: test   %eax,-0xa133d2(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x00000001031084d2: retq                      ;*ireturn
                                                ; - java.lang.String::charAt@28 (line 660)

  0x00000001031084d3: mov    %rsi,0x28(%rsp)
  0x00000001031084d8: mov    %rdx,%rdi
  0x00000001031084db: nopl   0x0(%rax,%rax,1)
  0x00000001031084e0: jmpq   0x000000010310855c  ;   {no_reloc}
  0x00000001031084e5: add    %al,(%rax)
  0x00000001031084e7: add    %al,(%rax)
  0x00000001031084e9: add    %ch,%cl
  0x00000001031084eb: ja     0x00000001031084ed
  0x00000001031084ed: add    %al,(%rax)         ;*new  ; - java.lang.String::charAt@13 (line 658)

  0x00000001031084ef: mov    %rax,%rdx
  0x00000001031084f2: movabs $0x116ff5b08,%rbx  ;   {metadata(method data for {method} {0x0000000116e6fe48} 'charAt' '(I)C' in 'java/lang/String')}
  0x00000001031084fc: addq   $0x1,0x148(%rbx)
  0x0000000103108504: mov    %rdi,%rdx
  0x0000000103108507: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)

  0x000000010310850a: mov    %edi,0x30(%rsp)
  0x000000010310850e: mov    %rax,0x20(%rsp)
  0x0000000103108513: nop
  0x0000000103108514: nop
  0x0000000103108515: nop
  0x0000000103108516: nop
  0x0000000103108517: callq  0x0000000103046020  ; OopMap{[40]=Oop [32]=Oop off=316}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ;   {optimized virtual_call}
  0x000000010310851c: mov    0x20(%rsp),%rax    ; OopMap{[40]=Oop rax=Oop off=321}
                                                ;*athrow
                                                ; - java.lang.String::charAt@21 (line 658)

  0x0000000103108521: movabs $0x103108521,%rdx  ;   {section_word}
  0x000000010310852b: callq  0x000000010306bfa0  ;   {runtime_call}
  0x0000000103108530: nop
  0x0000000103108531: mov    %rax,0x8(%rsp)
  0x0000000103108536: movq   $0xffffffffffffffff,(%rsp)
  0x000000010310853e: callq  0x00000001030fe020  ; OopMap{rsi=Oop off=355}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ;   {runtime_call}
  0x0000000103108543: jmpq   0x000000010310843e
  0x0000000103108548: callq  0x000000010306db40  ; OopMap{rsi=Oop rax=Oop off=365}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000010310854d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000103108557: mov    $0xa050f00,%eax
  0x000000010310855c: callq  0x00000001030fd020  ; OopMap{[40]=Oop off=385}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ;   {runtime_call}
  0x0000000103108561: jmpq   0x00000001031084e0
  0x0000000103108566: mov    %rdx,%rdx
  0x0000000103108569: callq  0x000000010306d620  ; OopMap{[40]=Oop off=398}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ;   {runtime_call}
  0x000000010310856e: jmpq   0x00000001031084ef
  0x0000000103108573: nop
  0x0000000103108574: nop
  0x0000000103108575: mov    0x2a8(%r15),%rax
  0x000000010310857c: movabs $0x0,%r10
  0x0000000103108586: mov    %r10,0x2a8(%r15)
  0x000000010310858d: movabs $0x0,%r10
  0x0000000103108597: mov    %r10,0x2b0(%r15)
  0x000000010310859e: add    $0x40,%rsp
  0x00000001031085a2: pop    %rbp
  0x00000001031085a3: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x00000001031085a8: hlt
  0x00000001031085a9: hlt
  0x00000001031085aa: hlt
  0x00000001031085ab: hlt
  0x00000001031085ac: hlt
  0x00000001031085ad: hlt
  0x00000001031085ae: hlt
  0x00000001031085af: hlt
  0x00000001031085b0: hlt
  0x00000001031085b1: hlt
  0x00000001031085b2: hlt
  0x00000001031085b3: hlt
  0x00000001031085b4: hlt
  0x00000001031085b5: hlt
  0x00000001031085b6: hlt
  0x00000001031085b7: hlt
  0x00000001031085b8: hlt
  0x00000001031085b9: hlt
  0x00000001031085ba: hlt
  0x00000001031085bb: hlt
  0x00000001031085bc: hlt
  0x00000001031085bd: hlt
  0x00000001031085be: hlt
  0x00000001031085bf: hlt
[Stub Code]
  0x00000001031085c0: nop                       ;   {no_reloc}
  0x00000001031085c1: nop
  0x00000001031085c2: nop
  0x00000001031085c3: nop
  0x00000001031085c4: nop
  0x00000001031085c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00000001031085cf: jmpq   0x00000001031085cf  ;   {runtime_call}
[Exception Handler]
  0x00000001031085d4: callq  0x00000001030fb9a0  ;   {runtime_call}
  0x00000001031085d9: mov    %rsp,-0x28(%rsp)
  0x00000001031085de: sub    $0x80,%rsp
  0x00000001031085e5: mov    %rax,0x78(%rsp)
  0x00000001031085ea: mov    %rcx,0x70(%rsp)
  0x00000001031085ef: mov    %rdx,0x68(%rsp)
  0x00000001031085f4: mov    %rbx,0x60(%rsp)
  0x00000001031085f9: mov    %rbp,0x50(%rsp)
  0x00000001031085fe: mov    %rsi,0x48(%rsp)
  0x0000000103108603: mov    %rdi,0x40(%rsp)
  0x0000000103108608: mov    %r8,0x38(%rsp)
  0x000000010310860d: mov    %r9,0x30(%rsp)
  0x0000000103108612: mov    %r10,0x28(%rsp)
  0x0000000103108617: mov    %r11,0x20(%rsp)
  0x000000010310861c: mov    %r12,0x18(%rsp)
  0x0000000103108621: mov    %r13,0x10(%rsp)
  0x0000000103108626: mov    %r14,0x8(%rsp)
  0x000000010310862b: mov    %r15,(%rsp)
  0x000000010310862f: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x0000000103108639: movabs $0x1031085d9,%rsi  ;   {internal_word}
  0x0000000103108643: mov    %rsp,%rdx
  0x0000000103108646: and    $0xfffffffffffffff0,%rsp
  0x000000010310864a: callq  0x0000000101b0f196  ;   {runtime_call}
  0x000000010310864f: hlt
[Deopt Handler Code]
  0x0000000103108650: movabs $0x103108650,%r10  ;   {section_word}
  0x000000010310865a: push   %r10
  0x000000010310865c: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x0000000103108661: hlt
  0x0000000103108662: hlt
  0x0000000103108663: hlt
  0x0000000103108664: hlt
  0x0000000103108665: hlt
  0x0000000103108666: hlt
  0x0000000103108667: hlt
Decoding compiled method 0x0000000103108850:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000116e6f238} '<init>' '([CII)V' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = '[C'
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x80]  (sp of caller)
  0x0000000103108a40: mov    0x8(%rsi),%r10d
  0x0000000103108a44: shl    $0x3,%r10
  0x0000000103108a48: cmp    %rax,%r10
  0x0000000103108a4b: jne    0x0000000103045e20  ;   {runtime_call}
  0x0000000103108a51: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000103108a5c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000103108a60: mov    %eax,-0x14000(%rsp)
  0x0000000103108a67: push   %rbp
  0x0000000103108a68: sub    $0x70,%rsp
  0x0000000103108a6c: mov    %rsi,0x38(%rsp)
  0x0000000103108a71: mov    %rdx,0x48(%rsp)
  0x0000000103108a76: mov    %ecx,0x44(%rsp)
  0x0000000103108a7a: mov    %r8d,0x40(%rsp)
  0x0000000103108a7f: movabs $0x117061678,%rdi  ;   {metadata(method data for {method} {0x0000000116e6f238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000103108a89: mov    0xdc(%rdi),%ebx
  0x0000000103108a8f: add    $0x8,%ebx
  0x0000000103108a92: mov    %ebx,0xdc(%rdi)
  0x0000000103108a98: movabs $0x116e6f238,%rdi  ;   {metadata({method} {0x0000000116e6f238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000103108aa2: and    $0x1ff8,%ebx
  0x0000000103108aa8: cmp    $0x0,%ebx
  0x0000000103108aab: je     0x0000000103108db1  ;*aload_0
                                                ; - java.lang.String::<init>@0 (line 190)

  0x0000000103108ab1: mov    %rsi,%rdi
  0x0000000103108ab4: movabs $0x117061678,%rbx  ;   {metadata(method data for {method} {0x0000000116e6f238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000103108abe: addq   $0x1,0x108(%rbx)
  0x0000000103108ac6: movabs $0x116fe7460,%rdi  ;   {metadata(method data for {method} {0x0000000116e6c480} '<init>' '()V' in 'java/lang/Object')}
  0x0000000103108ad0: mov    0xdc(%rdi),%ebx
  0x0000000103108ad6: add    $0x8,%ebx
  0x0000000103108ad9: mov    %ebx,0xdc(%rdi)
  0x0000000103108adf: movabs $0x116e6c480,%rdi  ;   {metadata({method} {0x0000000116e6c480} '<init>' '()V' in 'java/lang/Object')}
  0x0000000103108ae9: and    $0x7ffff8,%ebx
  0x0000000103108aef: cmp    $0x0,%ebx
  0x0000000103108af2: je     0x0000000103108dc8
  0x0000000103108af8: cmp    $0x0,%ecx
  0x0000000103108afb: movabs $0x117061678,%rdi  ;   {metadata(method data for {method} {0x0000000116e6f238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000103108b05: movabs $0x118,%rbx
  0x0000000103108b0f: jge    0x0000000103108b1f
  0x0000000103108b15: movabs $0x128,%rbx
  0x0000000103108b1f: mov    (%rdi,%rbx,1),%rax
  0x0000000103108b23: lea    0x1(%rax),%rax
  0x0000000103108b27: mov    %rax,(%rdi,%rbx,1)
  0x0000000103108b2b: jl     0x0000000103108d61  ;*ifge
                                                ; - java.lang.String::<init>@5 (line 191)

  0x0000000103108b31: cmp    $0x0,%r8d
  0x0000000103108b35: movabs $0x117061678,%rdi  ;   {metadata(method data for {method} {0x0000000116e6f238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000103108b3f: movabs $0x148,%rbx
  0x0000000103108b49: jg     0x0000000103108b59
  0x0000000103108b4f: movabs $0x158,%rbx
  0x0000000103108b59: mov    (%rdi,%rbx,1),%rax
  0x0000000103108b5d: lea    0x1(%rax),%rax
  0x0000000103108b61: mov    %rax,(%rdi,%rbx,1)
  0x0000000103108b65: jg     0x0000000103108be0  ;*ifgt
                                                ; - java.lang.String::<init>@18 (line 194)

  0x0000000103108b6b: cmp    $0x0,%r8d
  0x0000000103108b6f: movabs $0x117061678,%rdi  ;   {metadata(method data for {method} {0x0000000116e6f238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000103108b79: movabs $0x168,%rbx
  0x0000000103108b83: jge    0x0000000103108b93
  0x0000000103108b89: movabs $0x178,%rbx
  0x0000000103108b93: mov    (%rdi,%rbx,1),%rax
  0x0000000103108b97: lea    0x1(%rax),%rax
  0x0000000103108b9b: mov    %rax,(%rdi,%rbx,1)
  0x0000000103108b9f: jl     0x0000000103108d09  ;*ifge
                                                ; - java.lang.String::<init>@22 (line 195)

  0x0000000103108ba5: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::<init>@36 (line 198)
                                                ; implicit exception: dispatches to 0x0000000103108ddf
  0x0000000103108ba8: cmp    %edi,%ecx
  0x0000000103108baa: movabs $0x117061678,%rdi  ;   {metadata(method data for {method} {0x0000000116e6f238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000103108bb4: movabs $0x198,%rbx
  0x0000000103108bbe: jg     0x0000000103108bce
  0x0000000103108bc4: movabs $0x1a8,%rbx
  0x0000000103108bce: mov    (%rdi,%rbx,1),%rax
  0x0000000103108bd2: lea    0x1(%rax),%rax
  0x0000000103108bd6: mov    %rax,(%rdi,%rbx,1)
  0x0000000103108bda: jle    0x0000000103108c72  ;*if_icmpgt
                                                ; - java.lang.String::<init>@37 (line 198)

  0x0000000103108be0: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::<init>@52 (line 204)
                                                ; implicit exception: dispatches to 0x0000000103108de4
  0x0000000103108be3: sub    %r8d,%edi
  0x0000000103108be6: cmp    %edi,%ecx
  0x0000000103108be8: movabs $0x117061678,%rdi  ;   {metadata(method data for {method} {0x0000000116e6f238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000103108bf2: movabs $0x1b8,%rbx
  0x0000000103108bfc: jle    0x0000000103108c0c
  0x0000000103108c02: movabs $0x1c8,%rbx
  0x0000000103108c0c: mov    (%rdi,%rbx,1),%rax
  0x0000000103108c10: lea    0x1(%rax),%rax
  0x0000000103108c14: mov    %rax,(%rdi,%rbx,1)
  0x0000000103108c18: jg     0x0000000103108cac  ;*if_icmple
                                                ; - java.lang.String::<init>@55 (line 204)

  0x0000000103108c1e: movabs $0x117061678,%rdi  ;   {metadata(method data for {method} {0x0000000116e6f238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000103108c28: addq   $0x1,0x1e8(%rdi)
  0x0000000103108c30: mov    %r8,%rdi
  0x0000000103108c33: add    %ecx,%edi
  0x0000000103108c35: mov    %rdx,%rsi
  0x0000000103108c38: mov    %rcx,%rdx
  0x0000000103108c3b: mov    %rdi,%rcx          ;*invokestatic copyOfRange
                                                ; - java.lang.String::<init>@75 (line 207)

  0x0000000103108c3e: nop
  0x0000000103108c3f: callq  0x0000000103046420  ; OopMap{[56]=Oop [72]=Oop off=516}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::<init>@75 (line 207)
                                                ;   {static_call}
  0x0000000103108c44: mov    0x38(%rsp),%rsi
  0x0000000103108c49: mov    %rax,%r10
  0x0000000103108c4c: shr    $0x3,%r10
  0x0000000103108c50: mov    %r10d,0xc(%rsi)
  0x0000000103108c54: shr    $0x9,%rsi
  0x0000000103108c58: movabs $0x10e9c0000,%rdx
  0x0000000103108c62: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::<init>@78 (line 207)

  0x0000000103108c66: add    $0x70,%rsp
  0x0000000103108c6a: pop    %rbp
  0x0000000103108c6b: test   %eax,-0xa13b71(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x0000000103108c71: retq                      ;*return
                                                ; - java.lang.String::<init>@81 (line 208)

  0x0000000103108c72: movabs $0x79558a678,%rdx  ;   {oop("")}
  0x0000000103108c7c: mov    0xc(%rdx),%edx     ; implicit exception: dispatches to 0x0000000103108de9
  0x0000000103108c7f: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::<init>@43 (line 199)

  0x0000000103108c83: mov    %rdx,%r10
  0x0000000103108c86: shr    $0x3,%r10
  0x0000000103108c8a: mov    %r10d,0xc(%rsi)
  0x0000000103108c8e: shr    $0x9,%rsi
  0x0000000103108c92: movabs $0x10e9c0000,%rdx
  0x0000000103108c9c: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::<init>@46 (line 199)

  0x0000000103108ca0: add    $0x70,%rsp
  0x0000000103108ca4: pop    %rbp
  0x0000000103108ca5: test   %eax,-0xa13bab(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x0000000103108cab: retq                      ;*return
                                                ; - java.lang.String::<init>@49 (line 200)

  0x0000000103108cac: nopl   0x0(%rax)
  0x0000000103108cb0: jmpq   0x0000000103108dfd  ;   {no_reloc}
  0x0000000103108cb5: add    %al,(%rax)
  0x0000000103108cb7: add    %al,(%rax)
  0x0000000103108cb9: add    %ch,%cl
  0x0000000103108cbb: add    %rax,(%rax)
  0x0000000103108cbe: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::<init>@58 (line 205)

  0x0000000103108cc1: rorb   -0x41(%rax)        ;   {metadata(method data for {method} {0x0000000116e6f238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000103108cc4: js     0x0000000103108cdc
  0x0000000103108cc6: (bad)
  0x0000000103108cc7: (bad)
  0x0000000103108cc8: add    %eax,(%rax)
  0x0000000103108cca: add    %al,(%rax)
  0x0000000103108ccc: addq   $0x1,0x1d8(%rdi)
  0x0000000103108cd4: mov    0x40(%rsp),%r8d
  0x0000000103108cd9: add    0x44(%rsp),%r8d
  0x0000000103108cde: mov    %r8,%rdx
  0x0000000103108ce1: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::<init>@65 (line 205)

  0x0000000103108ce4: mov    %rax,0x50(%rsp)
  0x0000000103108ce9: nop
  0x0000000103108cea: nop
  0x0000000103108ceb: nop
  0x0000000103108cec: nop
  0x0000000103108ced: nop
  0x0000000103108cee: nop
  0x0000000103108cef: callq  0x0000000103046020  ; OopMap{[72]=Oop [56]=Oop [80]=Oop off=692}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::<init>@65 (line 205)
                                                ;   {optimized virtual_call}
  0x0000000103108cf4: mov    0x50(%rsp),%rax    ; OopMap{[72]=Oop [56]=Oop rax=Oop off=697}
                                                ;*athrow
                                                ; - java.lang.String::<init>@68 (line 205)

  0x0000000103108cf9: movabs $0x103108cf9,%rdx  ;   {section_word}
  0x0000000103108d03: callq  0x000000010306bfa0  ;   {runtime_call}
  0x0000000103108d08: nop                       ;*athrow
                                                ; - java.lang.String::<init>@68 (line 205)

  0x0000000103108d09: nopl   0x0(%rax)
  0x0000000103108d10: jmpq   0x0000000103108e23  ;   {no_reloc}
  0x0000000103108d15: add    %al,(%rax)
  0x0000000103108d17: add    %al,(%rax)
  0x0000000103108d19: add    %ch,%cl
  0x0000000103108d1b: (bad)
  0x0000000103108d1c: add    %eax,(%rax)
  0x0000000103108d1e: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::<init>@25 (line 196)

  0x0000000103108d21: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x0000000116e6f238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000103108d24: js     0x0000000103108d3c
  0x0000000103108d26: (bad)
  0x0000000103108d27: (bad)
  0x0000000103108d28: add    %eax,(%rax)
  0x0000000103108d2a: add    %al,(%rax)
  0x0000000103108d2c: addq   $0x1,0x188(%rsi)
  0x0000000103108d34: mov    0x40(%rsp),%edx
  0x0000000103108d38: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::<init>@30 (line 196)

  0x0000000103108d3b: mov    %rax,0x58(%rsp)
  0x0000000103108d40: nop
  0x0000000103108d41: nop
  0x0000000103108d42: nop
  0x0000000103108d43: nop
  0x0000000103108d44: nop
  0x0000000103108d45: nop
  0x0000000103108d46: nop
  0x0000000103108d47: callq  0x0000000103046020  ; OopMap{[56]=Oop [72]=Oop [88]=Oop off=780}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::<init>@30 (line 196)
                                                ;   {optimized virtual_call}
  0x0000000103108d4c: mov    0x58(%rsp),%rax    ; OopMap{[56]=Oop [72]=Oop rax=Oop off=785}
                                                ;*athrow
                                                ; - java.lang.String::<init>@33 (line 196)

  0x0000000103108d51: movabs $0x103108d51,%rdx  ;   {section_word}
  0x0000000103108d5b: callq  0x000000010306bfa0  ;   {runtime_call}
  0x0000000103108d60: nop                       ;*athrow
                                                ; - java.lang.String::<init>@33 (line 196)

  0x0000000103108d61: nopl   0x0(%rax)
  0x0000000103108d68: jmpq   0x0000000103108e49  ;   {no_reloc}
  0x0000000103108d6d: add    %al,(%rax)
  0x0000000103108d6f: add    %al,(%rax)
  0x0000000103108d71: add    %ch,%cl
  0x0000000103108d73: faddl  (%rax)
  0x0000000103108d75: add    %al,(%rax)         ;*new  ; - java.lang.String::<init>@8 (line 192)

  0x0000000103108d77: mov    %rax,%rdx
  0x0000000103108d7a: movabs $0x117061678,%rbx  ;   {metadata(method data for {method} {0x0000000116e6f238} '<init>' '([CII)V' in 'java/lang/String')}
  0x0000000103108d84: addq   $0x1,0x138(%rbx)
  0x0000000103108d8c: mov    %rcx,%rdx
  0x0000000103108d8f: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::<init>@13 (line 192)

  0x0000000103108d92: mov    %rax,0x60(%rsp)
  0x0000000103108d97: callq  0x0000000103046020  ; OopMap{[56]=Oop [96]=Oop [72]=Oop off=860}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::<init>@13 (line 192)
                                                ;   {optimized virtual_call}
  0x0000000103108d9c: mov    0x60(%rsp),%rax    ; OopMap{[56]=Oop [72]=Oop rax=Oop off=865}
                                                ;*athrow
                                                ; - java.lang.String::<init>@16 (line 192)

  0x0000000103108da1: movabs $0x103108da1,%rdx  ;   {section_word}
  0x0000000103108dab: callq  0x000000010306bfa0  ;   {runtime_call}
  0x0000000103108db0: nop
  0x0000000103108db1: mov    %rdi,0x8(%rsp)
  0x0000000103108db6: movq   $0xffffffffffffffff,(%rsp)
  0x0000000103108dbe: callq  0x00000001030fe020  ; OopMap{rsi=Oop [56]=Oop rdx=Oop [72]=Oop off=899}
                                                ;*synchronization entry
                                                ; - java.lang.String::<init>@-1 (line 190)
                                                ;   {runtime_call}
  0x0000000103108dc3: jmpq   0x0000000103108ab1
  0x0000000103108dc8: mov    %rdi,0x8(%rsp)
  0x0000000103108dcd: movq   $0xffffffffffffffff,(%rsp)
  0x0000000103108dd5: callq  0x00000001030fe020  ; OopMap{rsi=Oop [56]=Oop rdx=Oop [72]=Oop off=922}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.String::<init>@1 (line 190)
                                                ;   {runtime_call}
  0x0000000103108dda: jmpq   0x0000000103108af8
  0x0000000103108ddf: callq  0x000000010306db40  ; OopMap{rsi=Oop [56]=Oop rdx=Oop [72]=Oop off=932}
                                                ;*arraylength
                                                ; - java.lang.String::<init>@36 (line 198)
                                                ;   {runtime_call}
  0x0000000103108de4: callq  0x000000010306db40  ; OopMap{rsi=Oop [56]=Oop rdx=Oop [72]=Oop off=937}
                                                ;*arraylength
                                                ; - java.lang.String::<init>@52 (line 204)
                                                ;   {runtime_call}
  0x0000000103108de9: callq  0x000000010306db40  ; OopMap{[72]=Oop rsi=Oop [56]=Oop off=942}
                                                ;*getfield value
                                                ; - java.lang.String::<init>@43 (line 199)
                                                ;   {runtime_call}
  0x0000000103108dee: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000103108df8: mov    $0xa050f00,%eax
  0x0000000103108dfd: callq  0x00000001030fd020  ; OopMap{[56]=Oop [72]=Oop off=962}
                                                ;*new  ; - java.lang.String::<init>@58 (line 205)
                                                ;   {runtime_call}
  0x0000000103108e02: jmpq   0x0000000103108cb0
  0x0000000103108e07: mov    %rdx,%rdx
  0x0000000103108e0a: callq  0x000000010306d620  ; OopMap{[56]=Oop [72]=Oop off=975}
                                                ;*new  ; - java.lang.String::<init>@58 (line 205)
                                                ;   {runtime_call}
  0x0000000103108e0f: jmpq   0x0000000103108cbf
  0x0000000103108e14: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000103108e1e: mov    $0xa050f00,%eax
  0x0000000103108e23: callq  0x00000001030fd020  ; OopMap{[56]=Oop [72]=Oop off=1000}
                                                ;*new  ; - java.lang.String::<init>@25 (line 196)
                                                ;   {runtime_call}
  0x0000000103108e28: jmpq   0x0000000103108d10
  0x0000000103108e2d: mov    %rdx,%rdx
  0x0000000103108e30: callq  0x000000010306d620  ; OopMap{[56]=Oop [72]=Oop off=1013}
                                                ;*new  ; - java.lang.String::<init>@25 (line 196)
                                                ;   {runtime_call}
  0x0000000103108e35: jmpq   0x0000000103108d1f
  0x0000000103108e3a: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000103108e44: mov    $0xa050f00,%eax
  0x0000000103108e49: callq  0x00000001030fd020  ; OopMap{[56]=Oop [72]=Oop off=1038}
                                                ;*new  ; - java.lang.String::<init>@8 (line 192)
                                                ;   {runtime_call}
  0x0000000103108e4e: jmpq   0x0000000103108d68
  0x0000000103108e53: mov    %rdx,%rdx
  0x0000000103108e56: callq  0x000000010306d620  ; OopMap{[56]=Oop [72]=Oop off=1051}
                                                ;*new  ; - java.lang.String::<init>@8 (line 192)
                                                ;   {runtime_call}
  0x0000000103108e5b: jmpq   0x0000000103108d77
  0x0000000103108e60: nop
  0x0000000103108e61: nop
  0x0000000103108e62: mov    0x2a8(%r15),%rax
  0x0000000103108e69: movabs $0x0,%r10
  0x0000000103108e73: mov    %r10,0x2a8(%r15)
  0x0000000103108e7a: movabs $0x0,%r10
  0x0000000103108e84: mov    %r10,0x2b0(%r15)
  0x0000000103108e8b: add    $0x70,%rsp
  0x0000000103108e8f: pop    %rbp
  0x0000000103108e90: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x0000000103108e95: hlt
  0x0000000103108e96: hlt
  0x0000000103108e97: hlt
  0x0000000103108e98: hlt
  0x0000000103108e99: hlt
  0x0000000103108e9a: hlt
  0x0000000103108e9b: hlt
  0x0000000103108e9c: hlt
  0x0000000103108e9d: hlt
  0x0000000103108e9e: hlt
  0x0000000103108e9f: hlt
[Stub Code]
  0x0000000103108ea0: nop                       ;   {no_reloc}
  0x0000000103108ea1: nop
  0x0000000103108ea2: nop
  0x0000000103108ea3: nop
  0x0000000103108ea4: nop
  0x0000000103108ea5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000103108eaf: jmpq   0x0000000103108eaf  ;   {runtime_call}
  0x0000000103108eb4: nop
  0x0000000103108eb5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000103108ebf: jmpq   0x0000000103108ebf  ;   {runtime_call}
  0x0000000103108ec4: nop
  0x0000000103108ec5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000103108ecf: jmpq   0x0000000103108ecf  ;   {runtime_call}
  0x0000000103108ed4: nop
  0x0000000103108ed5: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000103108edf: jmpq   0x0000000103108edf  ;   {runtime_call}
[Exception Handler]
  0x0000000103108ee4: callq  0x00000001030fb9a0  ;   {runtime_call}
  0x0000000103108ee9: mov    %rsp,-0x28(%rsp)
  0x0000000103108eee: sub    $0x80,%rsp
  0x0000000103108ef5: mov    %rax,0x78(%rsp)
  0x0000000103108efa: mov    %rcx,0x70(%rsp)
  0x0000000103108eff: mov    %rdx,0x68(%rsp)
  0x0000000103108f04: mov    %rbx,0x60(%rsp)
  0x0000000103108f09: mov    %rbp,0x50(%rsp)
  0x0000000103108f0e: mov    %rsi,0x48(%rsp)
  0x0000000103108f13: mov    %rdi,0x40(%rsp)
  0x0000000103108f18: mov    %r8,0x38(%rsp)
  0x0000000103108f1d: mov    %r9,0x30(%rsp)
  0x0000000103108f22: mov    %r10,0x28(%rsp)
  0x0000000103108f27: mov    %r11,0x20(%rsp)
  0x0000000103108f2c: mov    %r12,0x18(%rsp)
  0x0000000103108f31: mov    %r13,0x10(%rsp)
  0x0000000103108f36: mov    %r14,0x8(%rsp)
  0x0000000103108f3b: mov    %r15,(%rsp)
  0x0000000103108f3f: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x0000000103108f49: movabs $0x103108ee9,%rsi  ;   {internal_word}
  0x0000000103108f53: mov    %rsp,%rdx
  0x0000000103108f56: and    $0xfffffffffffffff0,%rsp
  0x0000000103108f5a: callq  0x0000000101b0f196  ;   {runtime_call}
  0x0000000103108f5f: hlt
[Deopt Handler Code]
  0x0000000103108f60: movabs $0x103108f60,%r10  ;   {section_word}
  0x0000000103108f6a: push   %r10
  0x0000000103108f6c: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x0000000103108f71: hlt
  0x0000000103108f72: hlt
  0x0000000103108f73: hlt
  0x0000000103108f74: hlt
  0x0000000103108f75: hlt
  0x0000000103108f76: hlt
  0x0000000103108f77: hlt
Decoding compiled method 0x00000001031093d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000116f8a4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays'
  # parm0:    rsi:rsi   = '[C'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0xc0]  (sp of caller)
  0x0000000103109600: mov    %eax,-0x14000(%rsp)
  0x0000000103109607: push   %rbp
  0x0000000103109608: sub    $0xb0,%rsp
  0x000000010310960f: mov    %rsi,0x88(%rsp)
  0x0000000103109617: mov    %edx,0x78(%rsp)
  0x000000010310961b: mov    %ecx,0x7c(%rsp)
  0x000000010310961f: movabs $0x1170618c8,%rbx  ;   {metadata(method data for {method} {0x0000000116f8a4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000103109629: mov    0xdc(%rbx),%edi
  0x000000010310962f: add    $0x8,%edi
  0x0000000103109632: mov    %edi,0xdc(%rbx)
  0x0000000103109638: movabs $0x116f8a4f8,%rbx  ;   {metadata({method} {0x0000000116f8a4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000103109642: and    $0x1ff8,%edi
  0x0000000103109648: cmp    $0x0,%edi
  0x000000010310964b: je     0x0000000103109ed4  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x0000000103109651: mov    %rcx,%r11
  0x0000000103109654: sub    %edx,%r11d
  0x0000000103109657: mov    %r11d,0x80(%rsp)
  0x000000010310965f: cmp    $0x0,%r11d
  0x0000000103109663: movabs $0x1170618c8,%rbx  ;   {metadata(method data for {method} {0x0000000116f8a4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010310966d: movabs $0x108,%rdi
  0x0000000103109677: jge    0x0000000103109687
  0x000000010310967d: movabs $0x118,%rdi
  0x0000000103109687: mov    (%rbx,%rdi,1),%rax
  0x000000010310968b: lea    0x1(%rax),%rax
  0x000000010310968f: mov    %rax,(%rbx,%rdi,1)
  0x0000000103109693: jl     0x000000010310985c  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x0000000103109699: mov    %r11,%rbx
  0x000000010310969c: mov    %rdx,%r13
  0x000000010310969f: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000001031096a9: mov    %rsi,%r14
  0x00000001031096ac: movslq %ebx,%rbx
  0x00000001031096af: mov    %rbx,%rdi
  0x00000001031096b2: cmp    $0xffffff,%rbx
  0x00000001031096b9: ja     0x0000000103109eeb
  0x00000001031096bf: movabs $0x17,%rsi
  0x00000001031096c9: lea    (%rsi,%rbx,2),%rsi
  0x00000001031096cd: and    $0xfffffffffffffff8,%rsi
  0x00000001031096d1: mov    0x60(%r15),%rax
  0x00000001031096d5: lea    (%rax,%rsi,1),%rsi
  0x00000001031096d9: cmp    0x70(%r15),%rsi
  0x00000001031096dd: ja     0x0000000103109eeb
  0x00000001031096e3: mov    %rsi,0x60(%r15)
  0x00000001031096e7: sub    %rax,%rsi
  0x00000001031096ea: movq   $0x1,(%rax)
  0x00000001031096f1: mov    %rdx,%rcx
  0x00000001031096f4: shr    $0x3,%rcx
  0x00000001031096f8: mov    %ecx,0x8(%rax)
  0x00000001031096fb: mov    %ebx,0xc(%rax)
  0x00000001031096fe: sub    $0x10,%rsi
  0x0000000103109702: je     0x0000000103109719
  0x0000000103109708: xor    %rbx,%rbx
  0x000000010310970b: shr    $0x3,%rsi
  0x000000010310970f: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000103109714: dec    %rsi
  0x0000000103109717: jne    0x000000010310970f  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x0000000103109719: mov    0xc(%r14),%esi     ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x0000000103109ef5
  0x000000010310971d: sub    %r13d,%esi
  0x0000000103109720: movabs $0x1170618c8,%rdx  ;   {metadata(method data for {method} {0x0000000116f8a4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x000000010310972a: addq   $0x1,0x208(%rdx)
  0x0000000103109732: movabs $0x11703afa0,%rdx  ;   {metadata(method data for {method} {0x0000000116f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010310973c: mov    0xdc(%rdx),%ecx
  0x0000000103109742: add    $0x8,%ecx
  0x0000000103109745: mov    %ecx,0xdc(%rdx)
  0x000000010310974b: movabs $0x116f64fd8,%rdx  ;   {metadata({method} {0x0000000116f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000103109755: and    $0x7ffff8,%ecx
  0x000000010310975b: cmp    $0x0,%ecx
  0x000000010310975e: je     0x0000000103109efa
  0x0000000103109764: cmp    %r11d,%esi
  0x0000000103109767: movabs $0x11703afa0,%rdx  ;   {metadata(method data for {method} {0x0000000116f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000103109771: movabs $0x108,%rcx
  0x000000010310977b: jg     0x000000010310978b
  0x0000000103109781: movabs $0x118,%rcx
  0x000000010310978b: mov    (%rdx,%rcx,1),%r8
  0x000000010310978f: lea    0x1(%r8),%r8
  0x0000000103109793: mov    %r8,(%rdx,%rcx,1)
  0x0000000103109797: jg     0x00000001031097b5  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x000000010310979d: movabs $0x11703afa0,%rdx  ;   {metadata(method data for {method} {0x0000000116f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x00000001031097a7: incl   0x128(%rdx)
  0x00000001031097ad: mov    %rsi,%rdi
  0x00000001031097b0: jmpq   0x00000001031097b8  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00000001031097b5: mov    %r11,%rdi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00000001031097b8: movabs $0x1170618c8,%rsi  ;   {metadata(method data for {method} {0x0000000116f8a4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x00000001031097c2: addq   $0x1,0x218(%rsi)
  0x00000001031097ca: mov    %r14,%rsi
  0x00000001031097cd: mov    %r13,%rdx
  0x00000001031097d0: mov    %rax,%rcx
  0x00000001031097d3: mov    $0x0,%r8d
  0x00000001031097d9: mov    %rdi,%r9
  0x00000001031097dc: mov    %rax,0x70(%rsp)
  0x00000001031097e1: test   %edx,%edx
  0x00000001031097e3: jl     0x0000000103109f11
  0x00000001031097e9: lea    (%rdx,%r9,1),%rdi
  0x00000001031097ed: cmp    0xc(%rsi),%edi
  0x00000001031097f0: ja     0x0000000103109f11
  0x00000001031097f6: lea    (%r8,%r9,1),%rdi
  0x00000001031097fa: cmp    0xc(%rcx),%edi
  0x00000001031097fd: ja     0x0000000103109f11
  0x0000000103109803: test   %r9d,%r9d
  0x0000000103109806: jl     0x0000000103109f11
  0x000000010310980c: je     0x0000000103109848
  0x0000000103109812: movslq %edx,%rdx
  0x0000000103109815: movslq %r8d,%r8
  0x0000000103109818: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000010310981d: lea    0x10(%rcx,%r8,2),%rsi
  0x0000000103109822: mov    %r9,%rdx
  0x0000000103109825: test   $0xf,%esp
  0x000000010310982b: je     0x0000000103109843
  0x0000000103109831: sub    $0x8,%rsp
  0x0000000103109835: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000010310983a: add    $0x8,%rsp
  0x000000010310983e: jmpq   0x0000000103109848
  0x0000000103109843: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {runtime_call}
  0x0000000103109848: mov    0x70(%rsp),%rax
  0x000000010310984d: add    $0xb0,%rsp
  0x0000000103109854: pop    %rbp
  0x0000000103109855: test   %eax,-0xa1475b(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010310985b: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x000000010310985c: mov    %rdx,%r8
  0x000000010310985f: nop
  0x0000000103109860: jmpq   0x0000000103109f30  ;   {no_reloc}
  0x0000000103109865: add    %al,(%rax)
  0x0000000103109867: add    %al,(%rax)
  0x0000000103109869: add    %cl,-0x75(%rcx)
  0x000000010310986c: rex.RXB (bad)
  0x000000010310986e: lea    0x20(%rax),%rdi
  0x0000000103109872: cmp    0x70(%r15),%rdi
  0x0000000103109876: ja     0x0000000103109f3a
  0x000000010310987c: mov    %rdi,0x60(%r15)
  0x0000000103109880: mov    0xa8(%rdx),%rcx
  0x0000000103109887: mov    %rcx,(%rax)
  0x000000010310988a: mov    %rdx,%rcx
  0x000000010310988d: shr    $0x3,%rcx
  0x0000000103109891: mov    %ecx,0x8(%rax)
  0x0000000103109894: xor    %rcx,%rcx
  0x0000000103109897: mov    %ecx,0xc(%rax)
  0x000000010310989a: xor    %rcx,%rcx
  0x000000010310989d: mov    %rcx,0x10(%rax)
  0x00000001031098a1: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x00000001031098a5: data32 xchg %ax,%ax
  0x00000001031098a8: jmpq   0x0000000103109f56  ;   {no_reloc}
  0x00000001031098ad: add    %al,(%rax)
  0x00000001031098af: add    %al,(%rax)
  0x00000001031098b1: add    %cl,-0x77(%rax)
  0x00000001031098b4: test   %ah,(%rax,%rbx,4)
  0x00000001031098b7: add    %al,(%rax)
  0x00000001031098b9: add    %cl,-0x75(%rcx)
  0x00000001031098bc: rex.RXB (bad)
  0x00000001031098be: lea    0x18(%rax),%rdi
  0x00000001031098c2: cmp    0x70(%r15),%rdi
  0x00000001031098c6: ja     0x0000000103109f60
  0x00000001031098cc: mov    %rdi,0x60(%r15)
  0x00000001031098d0: mov    0xa8(%rdx),%rcx
  0x00000001031098d7: mov    %rcx,(%rax)
  0x00000001031098da: mov    %rdx,%rcx
  0x00000001031098dd: shr    $0x3,%rcx
  0x00000001031098e1: mov    %ecx,0x8(%rax)
  0x00000001031098e4: xor    %rcx,%rcx
  0x00000001031098e7: mov    %ecx,0xc(%rax)
  0x00000001031098ea: xor    %rcx,%rcx
  0x00000001031098ed: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x00000001031098f1: mov    %rax,0x90(%rsp)
  0x00000001031098f9: mov    %rax,%rbx
  0x00000001031098fc: movabs $0x1170618c8,%rdx  ;   {metadata(method data for {method} {0x0000000116f8a4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000103109906: addq   $0x1,0x128(%rdx)
  0x000000010310990e: movabs $0x117061b40,%rbx  ;   {metadata(method data for {method} {0x0000000116ee5ea8} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x0000000103109918: mov    0xdc(%rbx),%edx
  0x000000010310991e: add    $0x8,%edx
  0x0000000103109921: mov    %edx,0xdc(%rbx)
  0x0000000103109927: movabs $0x116ee5ea8,%rbx  ;   {metadata({method} {0x0000000116ee5ea8} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x0000000103109931: and    $0x7ffff8,%edx
  0x0000000103109937: cmp    $0x0,%edx
  0x000000010310993a: je     0x0000000103109f6d
  0x0000000103109940: mov    %rax,%rbx
  0x0000000103109943: movabs $0x117061b40,%rdx  ;   {metadata(method data for {method} {0x0000000116ee5ea8} '<init>' '()V' in 'java/lang/StringBuilder')}
  0x000000010310994d: addq   $0x1,0x108(%rdx)
  0x0000000103109955: movabs $0x117061c70,%rbx  ;   {metadata(method data for {method} {0x0000000116ee1f60} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010310995f: mov    0xdc(%rbx),%edx
  0x0000000103109965: add    $0x8,%edx
  0x0000000103109968: mov    %edx,0xdc(%rbx)
  0x000000010310996e: movabs $0x116ee1f60,%rbx  ;   {metadata({method} {0x0000000116ee1f60} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x0000000103109978: and    $0x7ffff8,%edx
  0x000000010310997e: cmp    $0x0,%edx
  0x0000000103109981: je     0x0000000103109f84
  0x0000000103109987: mov    %rax,%rbx
  0x000000010310998a: movabs $0x117061c70,%rdx  ;   {metadata(method data for {method} {0x0000000116ee1f60} '<init>' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x0000000103109994: addq   $0x1,0x108(%rdx)
  0x000000010310999c: movabs $0x116fe7460,%rbx  ;   {metadata(method data for {method} {0x0000000116e6c480} '<init>' '()V' in 'java/lang/Object')}
  0x00000001031099a6: mov    0xdc(%rbx),%edx
  0x00000001031099ac: add    $0x8,%edx
  0x00000001031099af: mov    %edx,0xdc(%rbx)
  0x00000001031099b5: movabs $0x116e6c480,%rbx  ;   {metadata({method} {0x0000000116e6c480} '<init>' '()V' in 'java/lang/Object')}
  0x00000001031099bf: and    $0x7ffff8,%edx
  0x00000001031099c5: cmp    $0x0,%edx
  0x00000001031099c8: je     0x0000000103109f9b
  0x00000001031099ce: mov    $0x10,%ebx
  0x00000001031099d3: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00000001031099dd: mov    %rax,%r9
  0x00000001031099e0: movslq %ebx,%rbx
  0x00000001031099e3: mov    %rbx,%rdi
  0x00000001031099e6: cmp    $0xffffff,%rbx
  0x00000001031099ed: ja     0x0000000103109fb2
  0x00000001031099f3: movabs $0x17,%rsi
  0x00000001031099fd: lea    (%rsi,%rbx,2),%rsi
  0x0000000103109a01: and    $0xfffffffffffffff8,%rsi
  0x0000000103109a05: mov    0x60(%r15),%rax
  0x0000000103109a09: lea    (%rax,%rsi,1),%rsi
  0x0000000103109a0d: cmp    0x70(%r15),%rsi
  0x0000000103109a11: ja     0x0000000103109fb2
  0x0000000103109a17: mov    %rsi,0x60(%r15)
  0x0000000103109a1b: sub    %rax,%rsi
  0x0000000103109a1e: movq   $0x1,(%rax)
  0x0000000103109a25: mov    %rdx,%rcx
  0x0000000103109a28: shr    $0x3,%rcx
  0x0000000103109a2c: mov    %ecx,0x8(%rax)
  0x0000000103109a2f: mov    %ebx,0xc(%rax)
  0x0000000103109a32: sub    $0x10,%rsi
  0x0000000103109a36: je     0x0000000103109a4d
  0x0000000103109a3c: xor    %rbx,%rbx
  0x0000000103109a3f: shr    $0x3,%rsi
  0x0000000103109a43: mov    %rbx,0x8(%rax,%rsi,8)
  0x0000000103109a48: dec    %rsi
  0x0000000103109a4b: jne    0x0000000103109a43  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000103109a4d: mov    %rax,%r10
  0x0000000103109a50: shr    $0x3,%r10
  0x0000000103109a54: mov    %r10d,0x10(%r9)
  0x0000000103109a58: mov    %r9,%rax
  0x0000000103109a5b: shr    $0x9,%rax
  0x0000000103109a5f: movabs $0x10e9c0000,%rdx
  0x0000000103109a69: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::<init>@8 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x0000000103109a6d: mov    %r9,%rax
  0x0000000103109a70: movabs $0x1170618c8,%rdx  ;   {metadata(method data for {method} {0x0000000116f8a4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000103109a7a: mov    0x8(%rax),%eax
  0x0000000103109a7d: shl    $0x3,%rax
  0x0000000103109a81: cmp    0x140(%rdx),%rax
  0x0000000103109a88: jne    0x0000000103109a97
  0x0000000103109a8a: addq   $0x1,0x148(%rdx)
  0x0000000103109a92: jmpq   0x0000000103109afd
  0x0000000103109a97: cmp    0x150(%rdx),%rax
  0x0000000103109a9e: jne    0x0000000103109aad
  0x0000000103109aa0: addq   $0x1,0x158(%rdx)
  0x0000000103109aa8: jmpq   0x0000000103109afd
  0x0000000103109aad: cmpq   $0x0,0x140(%rdx)
  0x0000000103109ab8: jne    0x0000000103109ad1
  0x0000000103109aba: mov    %rax,0x140(%rdx)
  0x0000000103109ac1: movq   $0x1,0x148(%rdx)
  0x0000000103109acc: jmpq   0x0000000103109afd
  0x0000000103109ad1: cmpq   $0x0,0x150(%rdx)
  0x0000000103109adc: jne    0x0000000103109af5
  0x0000000103109ade: mov    %rax,0x150(%rdx)
  0x0000000103109ae5: movq   $0x1,0x158(%rdx)
  0x0000000103109af0: jmpq   0x0000000103109afd
  0x0000000103109af5: addq   $0x1,0x138(%rdx)
  0x0000000103109afd: movabs $0x117061da8,%rdx  ;   {metadata(method data for {method} {0x0000000116ee6680} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000103109b07: mov    0xdc(%rdx),%esi
  0x0000000103109b0d: add    $0x8,%esi
  0x0000000103109b10: mov    %esi,0xdc(%rdx)
  0x0000000103109b16: movabs $0x116ee6680,%rdx  ;   {metadata({method} {0x0000000116ee6680} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000103109b20: and    $0x7ffff8,%esi
  0x0000000103109b26: cmp    $0x0,%esi
  0x0000000103109b29: je     0x0000000103109fbc
  0x0000000103109b2f: mov    %r9,%rax
  0x0000000103109b32: movabs $0x117061da8,%rdx  ;   {metadata(method data for {method} {0x0000000116ee6680} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000103109b3c: addq   $0x1,0x108(%rdx)
  0x0000000103109b44: mov    %r8,%rdx
  0x0000000103109b47: mov    %r9,%rsi           ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x0000000103109b4a: nop
  0x0000000103109b4b: nop
  0x0000000103109b4c: nop
  0x0000000103109b4d: nop
  0x0000000103109b4e: nop
  0x0000000103109b4f: callq  0x0000000103046020  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=1364}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000103109b54: mov    0x90(%rsp),%rax
  0x0000000103109b5c: movabs $0x1170618c8,%rdx  ;   {metadata(method data for {method} {0x0000000116f8a4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000103109b66: mov    0x8(%rax),%eax
  0x0000000103109b69: shl    $0x3,%rax
  0x0000000103109b6d: cmp    0x170(%rdx),%rax
  0x0000000103109b74: jne    0x0000000103109b83
  0x0000000103109b76: addq   $0x1,0x178(%rdx)
  0x0000000103109b7e: jmpq   0x0000000103109be9
  0x0000000103109b83: cmp    0x180(%rdx),%rax
  0x0000000103109b8a: jne    0x0000000103109b99
  0x0000000103109b8c: addq   $0x1,0x188(%rdx)
  0x0000000103109b94: jmpq   0x0000000103109be9
  0x0000000103109b99: cmpq   $0x0,0x170(%rdx)
  0x0000000103109ba4: jne    0x0000000103109bbd
  0x0000000103109ba6: mov    %rax,0x170(%rdx)
  0x0000000103109bad: movq   $0x1,0x178(%rdx)
  0x0000000103109bb8: jmpq   0x0000000103109be9
  0x0000000103109bbd: cmpq   $0x0,0x180(%rdx)
  0x0000000103109bc8: jne    0x0000000103109be1
  0x0000000103109bca: mov    %rax,0x180(%rdx)
  0x0000000103109bd1: movq   $0x1,0x188(%rdx)
  0x0000000103109bdc: jmpq   0x0000000103109be9
  0x0000000103109be1: addq   $0x1,0x168(%rdx)
  0x0000000103109be9: movabs $0x1170620f8,%rdx  ;   {metadata(method data for {method} {0x0000000116ee61c0} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000103109bf3: mov    0xdc(%rdx),%esi
  0x0000000103109bf9: add    $0x8,%esi
  0x0000000103109bfc: mov    %esi,0xdc(%rdx)
  0x0000000103109c02: movabs $0x116ee61c0,%rdx  ;   {metadata({method} {0x0000000116ee61c0} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000103109c0c: and    $0x7ffff8,%esi
  0x0000000103109c12: cmp    $0x0,%esi
  0x0000000103109c15: je     0x0000000103109fd3
  0x0000000103109c1b: mov    0x90(%rsp),%rax
  0x0000000103109c23: movabs $0x1170620f8,%rdx  ;   {metadata(method data for {method} {0x0000000116ee61c0} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000103109c2d: addq   $0x1,0x108(%rdx)
  0x0000000103109c35: movabs $0x7956ccce8,%rdx  ;   {oop(" > ")}
  0x0000000103109c3f: mov    0x90(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x0000000103109c47: callq  0x0000000103046020  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=1612}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000103109c4c: mov    0x90(%rsp),%rax
  0x0000000103109c54: movabs $0x1170618c8,%rdx  ;   {metadata(method data for {method} {0x0000000116f8a4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000103109c5e: mov    0x8(%rax),%eax
  0x0000000103109c61: shl    $0x3,%rax
  0x0000000103109c65: cmp    0x1a0(%rdx),%rax
  0x0000000103109c6c: jne    0x0000000103109c7b
  0x0000000103109c6e: addq   $0x1,0x1a8(%rdx)
  0x0000000103109c76: jmpq   0x0000000103109ce1
  0x0000000103109c7b: cmp    0x1b0(%rdx),%rax
  0x0000000103109c82: jne    0x0000000103109c91
  0x0000000103109c84: addq   $0x1,0x1b8(%rdx)
  0x0000000103109c8c: jmpq   0x0000000103109ce1
  0x0000000103109c91: cmpq   $0x0,0x1a0(%rdx)
  0x0000000103109c9c: jne    0x0000000103109cb5
  0x0000000103109c9e: mov    %rax,0x1a0(%rdx)
  0x0000000103109ca5: movq   $0x1,0x1a8(%rdx)
  0x0000000103109cb0: jmpq   0x0000000103109ce1
  0x0000000103109cb5: cmpq   $0x0,0x1b0(%rdx)
  0x0000000103109cc0: jne    0x0000000103109cd9
  0x0000000103109cc2: mov    %rax,0x1b0(%rdx)
  0x0000000103109cc9: movq   $0x1,0x1b8(%rdx)
  0x0000000103109cd4: jmpq   0x0000000103109ce1
  0x0000000103109cd9: addq   $0x1,0x198(%rdx)
  0x0000000103109ce1: movabs $0x117061da8,%rdx  ;   {metadata(method data for {method} {0x0000000116ee6680} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000103109ceb: mov    0xdc(%rdx),%esi
  0x0000000103109cf1: add    $0x8,%esi
  0x0000000103109cf4: mov    %esi,0xdc(%rdx)
  0x0000000103109cfa: movabs $0x116ee6680,%rdx  ;   {metadata({method} {0x0000000116ee6680} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000103109d04: and    $0x7ffff8,%esi
  0x0000000103109d0a: cmp    $0x0,%esi
  0x0000000103109d0d: je     0x0000000103109fea
  0x0000000103109d13: mov    0x90(%rsp),%rax
  0x0000000103109d1b: movabs $0x117061da8,%rdx  ;   {metadata(method data for {method} {0x0000000116ee6680} 'append' '(I)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x0000000103109d25: addq   $0x1,0x108(%rdx)
  0x0000000103109d2d: mov    0x7c(%rsp),%edx
  0x0000000103109d31: mov    0x90(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x0000000103109d39: nop
  0x0000000103109d3a: nop
  0x0000000103109d3b: nop
  0x0000000103109d3c: nop
  0x0000000103109d3d: nop
  0x0000000103109d3e: nop
  0x0000000103109d3f: callq  0x0000000103046020  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=1860}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000103109d44: mov    0x90(%rsp),%rax
  0x0000000103109d4c: movabs $0x1170618c8,%rdx  ;   {metadata(method data for {method} {0x0000000116f8a4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000103109d56: mov    0x8(%rax),%eax
  0x0000000103109d59: shl    $0x3,%rax
  0x0000000103109d5d: cmp    0x1d0(%rdx),%rax
  0x0000000103109d64: jne    0x0000000103109d73
  0x0000000103109d66: addq   $0x1,0x1d8(%rdx)
  0x0000000103109d6e: jmpq   0x0000000103109dd9
  0x0000000103109d73: cmp    0x1e0(%rdx),%rax
  0x0000000103109d7a: jne    0x0000000103109d89
  0x0000000103109d7c: addq   $0x1,0x1e8(%rdx)
  0x0000000103109d84: jmpq   0x0000000103109dd9
  0x0000000103109d89: cmpq   $0x0,0x1d0(%rdx)
  0x0000000103109d94: jne    0x0000000103109dad
  0x0000000103109d96: mov    %rax,0x1d0(%rdx)
  0x0000000103109d9d: movq   $0x1,0x1d8(%rdx)
  0x0000000103109da8: jmpq   0x0000000103109dd9
  0x0000000103109dad: cmpq   $0x0,0x1e0(%rdx)
  0x0000000103109db8: jne    0x0000000103109dd1
  0x0000000103109dba: mov    %rax,0x1e0(%rdx)
  0x0000000103109dc1: movq   $0x1,0x1e8(%rdx)
  0x0000000103109dcc: jmpq   0x0000000103109dd9
  0x0000000103109dd1: addq   $0x1,0x1c8(%rdx)
  0x0000000103109dd9: movabs $0x117062420,%rdx  ;   {metadata(method data for {method} {0x0000000116ee7570} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x0000000103109de3: mov    0xdc(%rdx),%esi
  0x0000000103109de9: add    $0x8,%esi
  0x0000000103109dec: mov    %esi,0xdc(%rdx)
  0x0000000103109df2: movabs $0x116ee7570,%rdx  ;   {metadata({method} {0x0000000116ee7570} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x0000000103109dfc: and    $0x7ffff8,%esi
  0x0000000103109e02: cmp    $0x0,%esi
  0x0000000103109e05: je     0x000000010310a001
  0x0000000103109e0b: movabs $0x7c00016d0,%rdx  ;   {metadata('java/lang/String')}
  0x0000000103109e15: mov    0x60(%r15),%rax
  0x0000000103109e19: lea    0x18(%rax),%rdi
  0x0000000103109e1d: cmp    0x70(%r15),%rdi
  0x0000000103109e21: ja     0x000000010310a018
  0x0000000103109e27: mov    %rdi,0x60(%r15)
  0x0000000103109e2b: mov    0xa8(%rdx),%rcx
  0x0000000103109e32: mov    %rcx,(%rax)
  0x0000000103109e35: mov    %rdx,%rcx
  0x0000000103109e38: shr    $0x3,%rcx
  0x0000000103109e3c: mov    %ecx,0x8(%rax)
  0x0000000103109e3f: xor    %rcx,%rcx
  0x0000000103109e42: mov    %ecx,0xc(%rax)
  0x0000000103109e45: xor    %rcx,%rcx
  0x0000000103109e48: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000103109e4c: mov    0x90(%rsp),%rdi
  0x0000000103109e54: mov    0x10(%rdi),%edx
  0x0000000103109e57: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000103109e5b: mov    0xc(%rdi),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000103109e5f: mov    %rax,%rcx
  0x0000000103109e62: movabs $0x117062420,%rsi  ;   {metadata(method data for {method} {0x0000000116ee7570} 'toString' '()Ljava/lang/String;' in 'java/lang/StringBuilder')}
  0x0000000103109e6c: addq   $0x1,0x108(%rsi)
  0x0000000103109e74: mov    $0x0,%ecx
  0x0000000103109e79: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x0000000103109e7c: mov    %rax,0xa0(%rsp)
  0x0000000103109e84: nop
  0x0000000103109e85: nop
  0x0000000103109e86: nop
  0x0000000103109e87: callq  0x0000000103046020  ; OopMap{[152]=Oop [136]=Oop [144]=Oop [160]=Oop off=2188}
                                                ;*invokespecial <init>
                                                ; - java.lang.StringBuilder::toString@13 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000103109e8c: mov    0x98(%rsp),%rax
  0x0000000103109e94: movabs $0x1170618c8,%rdx  ;   {metadata(method data for {method} {0x0000000116f8a4f8} 'copyOfRange' '([CII)[C' in 'java/util/Arrays')}
  0x0000000103109e9e: addq   $0x1,0x1f8(%rdx)
  0x0000000103109ea6: mov    0xa0(%rsp),%rdx
  0x0000000103109eae: mov    0x98(%rsp),%rsi    ;*invokespecial <init>
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x0000000103109eb6: nop
  0x0000000103109eb7: callq  0x0000000103046020  ; OopMap{[152]=Oop [136]=Oop off=2236}
                                                ;*invokespecial <init>
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x0000000103109ebc: mov    0x98(%rsp),%rax    ; OopMap{[136]=Oop rax=Oop off=2244}
                                                ;*athrow
                                                ; - java.util.Arrays::copyOfRange@38 (line 3663)

  0x0000000103109ec4: movabs $0x103109ec4,%rdx  ;   {section_word}
  0x0000000103109ece: callq  0x000000010306bfa0  ;   {runtime_call}
  0x0000000103109ed3: nop
  0x0000000103109ed4: mov    %rbx,0x8(%rsp)
  0x0000000103109ed9: movq   $0xffffffffffffffff,(%rsp)
  0x0000000103109ee1: callq  0x00000001030fe020  ; OopMap{rsi=Oop [136]=Oop off=2278}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x0000000103109ee6: jmpq   0x0000000103109651
  0x0000000103109eeb: callq  0x000000010306c8a0  ; OopMap{r14=Oop [136]=Oop off=2288}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x0000000103109ef0: jmpq   0x0000000103109719
  0x0000000103109ef5: callq  0x000000010306db40  ; OopMap{r14=Oop [136]=Oop rax=Oop off=2298}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x0000000103109efa: mov    %rdx,0x8(%rsp)
  0x0000000103109eff: movq   $0xffffffffffffffff,(%rsp)
  0x0000000103109f07: callq  0x00000001030fe020  ; OopMap{r14=Oop [136]=Oop rax=Oop off=2316}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x0000000103109f0c: jmpq   0x0000000103109764
  0x0000000103109f11: nop
  0x0000000103109f12: nop
  0x0000000103109f13: nop
  0x0000000103109f14: nop
  0x0000000103109f15: nop
  0x0000000103109f16: nop
  0x0000000103109f17: callq  0x0000000103046420  ; OopMap{[112]=Oop [136]=Oop off=2332}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x0000000103109f1c: jmpq   0x0000000103109848
  0x0000000103109f21: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000103109f2b: mov    $0xa050f00,%eax
  0x0000000103109f30: callq  0x00000001030fd020  ; OopMap{[136]=Oop off=2357}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x0000000103109f35: jmpq   0x0000000103109860
  0x0000000103109f3a: mov    %rdx,%rdx
  0x0000000103109f3d: callq  0x000000010306d1e0  ; OopMap{[136]=Oop off=2370}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x0000000103109f42: jmpq   0x00000001031098a5
  0x0000000103109f47: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000103109f51: mov    $0xa050f00,%eax
  0x0000000103109f56: callq  0x00000001030fd020  ; OopMap{[136]=Oop rax=Oop off=2395}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x0000000103109f5b: jmpq   0x00000001031098a8
  0x0000000103109f60: mov    %rdx,%rdx
  0x0000000103109f63: callq  0x000000010306d1e0  ; OopMap{[136]=Oop [152]=Oop off=2408}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x0000000103109f68: jmpq   0x00000001031098f1
  0x0000000103109f6d: mov    %rbx,0x8(%rsp)
  0x0000000103109f72: movq   $0xffffffffffffffff,(%rsp)
  0x0000000103109f7a: callq  0x00000001030fe020  ; OopMap{[136]=Oop [152]=Oop rax=Oop [144]=Oop off=2431}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::<init>@-1 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000103109f7f: jmpq   0x0000000103109940
  0x0000000103109f84: mov    %rbx,0x8(%rsp)
  0x0000000103109f89: movq   $0xffffffffffffffff,(%rsp)
  0x0000000103109f91: callq  0x00000001030fe020  ; OopMap{[136]=Oop [152]=Oop rax=Oop [144]=Oop off=2454}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::<init>@-1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000103109f96: jmpq   0x0000000103109987
  0x0000000103109f9b: mov    %rbx,0x8(%rsp)
  0x0000000103109fa0: movq   $0xffffffffffffffff,(%rsp)
  0x0000000103109fa8: callq  0x00000001030fe020  ; OopMap{[136]=Oop [152]=Oop rax=Oop [144]=Oop off=2477}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::<init>@1 (line 67)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000103109fad: jmpq   0x00000001031099ce
  0x0000000103109fb2: callq  0x000000010306c8a0  ; OopMap{[136]=Oop [152]=Oop r9=Oop [144]=Oop off=2487}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::<init>@6 (line 68)
                                                ; - java.lang.StringBuilder::<init>@3 (line 89)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x0000000103109fb7: jmpq   0x0000000103109a4d
  0x0000000103109fbc: mov    %rdx,0x8(%rsp)
  0x0000000103109fc1: movq   $0xffffffffffffffff,(%rsp)
  0x0000000103109fc9: callq  0x00000001030fe020  ; OopMap{[136]=Oop [152]=Oop r9=Oop [144]=Oop off=2510}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x0000000103109fce: jmpq   0x0000000103109b2f
  0x0000000103109fd3: mov    %rdx,0x8(%rsp)
  0x0000000103109fd8: movq   $0xffffffffffffffff,(%rsp)
  0x0000000103109fe0: callq  0x00000001030fe020  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=2533}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x0000000103109fe5: jmpq   0x0000000103109c1b
  0x0000000103109fea: mov    %rdx,0x8(%rsp)
  0x0000000103109fef: movq   $0xffffffffffffffff,(%rsp)
  0x0000000103109ff7: callq  0x00000001030fe020  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=2556}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 208)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x0000000103109ffc: jmpq   0x0000000103109d13
  0x000000010310a001: mov    %rdx,0x8(%rsp)
  0x000000010310a006: movq   $0xffffffffffffffff,(%rsp)
  0x000000010310a00e: callq  0x00000001030fe020  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=2579}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x000000010310a013: jmpq   0x0000000103109e0b
  0x000000010310a018: mov    %rdx,%rdx
  0x000000010310a01b: callq  0x000000010306d1e0  ; OopMap{[144]=Oop [152]=Oop [136]=Oop off=2592}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 407)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x000000010310a020: jmpq   0x0000000103109e4c
  0x000000010310a025: nop
  0x000000010310a026: nop
  0x000000010310a027: mov    0x2a8(%r15),%rax
  0x000000010310a02e: movabs $0x0,%r10
  0x000000010310a038: mov    %r10,0x2a8(%r15)
  0x000000010310a03f: movabs $0x0,%r10
  0x000000010310a049: mov    %r10,0x2b0(%r15)
  0x000000010310a050: add    $0xb0,%rsp
  0x000000010310a057: pop    %rbp
  0x000000010310a058: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x000000010310a05d: hlt
  0x000000010310a05e: hlt
  0x000000010310a05f: hlt
[Stub Code]
  0x000000010310a060: nop                       ;   {no_reloc}
  0x000000010310a061: nop
  0x000000010310a062: nop
  0x000000010310a063: nop
  0x000000010310a064: nop
  0x000000010310a065: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010310a06f: jmpq   0x000000010310a06f  ;   {runtime_call}
  0x000000010310a074: nop
  0x000000010310a075: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010310a07f: jmpq   0x000000010310a07f  ;   {runtime_call}
  0x000000010310a084: nop
  0x000000010310a085: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010310a08f: jmpq   0x000000010310a08f  ;   {runtime_call}
  0x000000010310a094: nop
  0x000000010310a095: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010310a09f: jmpq   0x000000010310a09f  ;   {runtime_call}
  0x000000010310a0a4: nop
  0x000000010310a0a5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010310a0af: jmpq   0x000000010310a0af  ;   {runtime_call}
  0x000000010310a0b4: nop
  0x000000010310a0b5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010310a0bf: jmpq   0x000000010310a0bf  ;   {runtime_call}
[Exception Handler]
  0x000000010310a0c4: callq  0x00000001030fb9a0  ;   {runtime_call}
  0x000000010310a0c9: mov    %rsp,-0x28(%rsp)
  0x000000010310a0ce: sub    $0x80,%rsp
  0x000000010310a0d5: mov    %rax,0x78(%rsp)
  0x000000010310a0da: mov    %rcx,0x70(%rsp)
  0x000000010310a0df: mov    %rdx,0x68(%rsp)
  0x000000010310a0e4: mov    %rbx,0x60(%rsp)
  0x000000010310a0e9: mov    %rbp,0x50(%rsp)
  0x000000010310a0ee: mov    %rsi,0x48(%rsp)
  0x000000010310a0f3: mov    %rdi,0x40(%rsp)
  0x000000010310a0f8: mov    %r8,0x38(%rsp)
  0x000000010310a0fd: mov    %r9,0x30(%rsp)
  0x000000010310a102: mov    %r10,0x28(%rsp)
  0x000000010310a107: mov    %r11,0x20(%rsp)
  0x000000010310a10c: mov    %r12,0x18(%rsp)
  0x000000010310a111: mov    %r13,0x10(%rsp)
  0x000000010310a116: mov    %r14,0x8(%rsp)
  0x000000010310a11b: mov    %r15,(%rsp)
  0x000000010310a11f: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x000000010310a129: movabs $0x10310a0c9,%rsi  ;   {internal_word}
  0x000000010310a133: mov    %rsp,%rdx
  0x000000010310a136: and    $0xfffffffffffffff0,%rsp
  0x000000010310a13a: callq  0x0000000101b0f196  ;   {runtime_call}
  0x000000010310a13f: hlt
[Deopt Handler Code]
  0x000000010310a140: movabs $0x10310a140,%r10  ;   {section_word}
  0x000000010310a14a: push   %r10
  0x000000010310a14c: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x000000010310a151: hlt
  0x000000010310a152: hlt
  0x000000010310a153: hlt
  0x000000010310a154: hlt
  0x000000010310a155: hlt
  0x000000010310a156: hlt
  0x000000010310a157: hlt
[Loaded sun.launcher.LauncherHelper from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLClassLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.util.URLUtil from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$3 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$Loader from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.URLClassPath$JarLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipConstants from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaUtilZipFileAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x000000010310af90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000116e71218} 'indexOf' '(II)I' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000010310b120: mov    0x8(%rsi),%r10d
  0x000000010310b124: shl    $0x3,%r10
  0x000000010310b128: cmp    %rax,%r10
  0x000000010310b12b: jne    0x0000000103045e20  ;   {runtime_call}
  0x000000010310b131: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010310b13c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010310b140: mov    %eax,-0x14000(%rsp)
  0x000000010310b147: push   %rbp
  0x000000010310b148: sub    $0x40,%rsp
  0x000000010310b14c: movabs $0x117044eb0,%rax  ;   {metadata(method data for {method} {0x0000000116e71218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010310b156: mov    0xdc(%rax),%edi
  0x000000010310b15c: add    $0x8,%edi
  0x000000010310b15f: mov    %edi,0xdc(%rax)
  0x000000010310b165: movabs $0x116e71218,%rax  ;   {metadata({method} {0x0000000116e71218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010310b16f: and    $0x1ff8,%edi
  0x000000010310b175: cmp    $0x0,%edi
  0x000000010310b178: je     0x000000010310b3b1  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1546)

  0x000000010310b17e: mov    0xc(%rsi),%eax
  0x000000010310b181: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x000000010310b185: mov    0xc(%rax),%edi     ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x000000010310b3c8
  0x000000010310b188: cmp    $0x0,%ecx
  0x000000010310b18b: movabs $0x117044eb0,%rbx  ;   {metadata(method data for {method} {0x0000000116e71218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010310b195: movabs $0x108,%r8
  0x000000010310b19f: jge    0x000000010310b1af
  0x000000010310b1a5: movabs $0x118,%r8
  0x000000010310b1af: mov    (%rbx,%r8,1),%r9
  0x000000010310b1b3: lea    0x1(%r9),%r9
  0x000000010310b1b7: mov    %r9,(%rbx,%r8,1)
  0x000000010310b1bb: jge    0x000000010310b1db  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x000000010310b1c1: movabs $0x117044eb0,%rcx  ;   {metadata(method data for {method} {0x0000000116e71218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010310b1cb: incl   0x128(%rcx)
  0x000000010310b1d1: mov    $0x0,%ecx
  0x000000010310b1d6: jmpq   0x000000010310b213  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1548)

  0x000000010310b1db: cmp    %edi,%ecx
  0x000000010310b1dd: movabs $0x117044eb0,%rbx  ;   {metadata(method data for {method} {0x0000000116e71218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010310b1e7: movabs $0x140,%r8
  0x000000010310b1f1: jl     0x000000010310b201
  0x000000010310b1f7: movabs $0x150,%r8
  0x000000010310b201: mov    (%rbx,%r8,1),%r9
  0x000000010310b205: lea    0x1(%r9),%r9
  0x000000010310b209: mov    %r9,(%rbx,%r8,1)
  0x000000010310b20d: jge    0x000000010310b3a0  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x000000010310b213: cmp    $0x10000,%edx
  0x000000010310b219: movabs $0x117044eb0,%rbx  ;   {metadata(method data for {method} {0x0000000116e71218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010310b223: movabs $0x160,%r8
  0x000000010310b22d: jge    0x000000010310b23d
  0x000000010310b233: movabs $0x170,%r8
  0x000000010310b23d: mov    (%rbx,%r8,1),%r9
  0x000000010310b241: lea    0x1(%r9),%r9
  0x000000010310b245: mov    %r9,(%rbx,%r8,1)
  0x000000010310b249: jge    0x000000010310b350  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x000000010310b24f: mov    %rcx,%rbx
  0x000000010310b252: jmpq   0x000000010310b2f3  ;*iload
                                                ; - java.lang.String::indexOf@37 (line 1558)

  0x000000010310b257: nop
  0x000000010310b258: movslq %ebx,%r8
  0x000000010310b25b: cmp    0xc(%rax),%ebx
  0x000000010310b25e: jae    0x000000010310b3cd
  0x000000010310b264: movzwl 0x10(%rax,%r8,2),%r8d  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x000000010310b26a: cmp    %edx,%r8d
  0x000000010310b26d: movabs $0x117044eb0,%r8   ;   {metadata(method data for {method} {0x0000000116e71218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010310b277: movabs $0x1a0,%r9
  0x000000010310b281: jne    0x000000010310b291
  0x000000010310b287: movabs $0x1b0,%r9
  0x000000010310b291: mov    (%r8,%r9,1),%r11
  0x000000010310b295: lea    0x1(%r11),%r11
  0x000000010310b299: mov    %r11,(%r8,%r9,1)
  0x000000010310b29d: je     0x000000010310b330  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x000000010310b2a3: inc    %ebx
  0x000000010310b2a5: movabs $0x117044eb0,%r8   ;   {metadata(method data for {method} {0x0000000116e71218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010310b2af: mov    0xe0(%r8),%r9d
  0x000000010310b2b6: add    $0x8,%r9d
  0x000000010310b2ba: mov    %r9d,0xe0(%r8)
  0x000000010310b2c1: movabs $0x116e71218,%r8   ;   {metadata({method} {0x0000000116e71218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010310b2cb: and    $0xfff8,%r9d
  0x000000010310b2d2: cmp    $0x0,%r9d
  0x000000010310b2d6: je     0x000000010310b3d6  ; OopMap{rsi=Oop rax=Oop off=444}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x000000010310b2dc: test   %eax,-0xa161e2(%rip)        # 0x00000001026f5100
                                                ;   {poll}
  0x000000010310b2e2: movabs $0x117044eb0,%r8   ;   {metadata(method data for {method} {0x0000000116e71218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010310b2ec: incl   0x1c0(%r8)         ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x000000010310b2f3: cmp    %edi,%ebx
  0x000000010310b2f5: movabs $0x117044eb0,%r8   ;   {metadata(method data for {method} {0x0000000116e71218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010310b2ff: movabs $0x180,%r9
  0x000000010310b309: jge    0x000000010310b319
  0x000000010310b30f: movabs $0x190,%r9
  0x000000010310b319: mov    (%r8,%r9,1),%r11
  0x000000010310b31d: lea    0x1(%r11),%r11
  0x000000010310b321: mov    %r11,(%r8,%r9,1)
  0x000000010310b325: jge    0x000000010310b33f
  0x000000010310b32b: jmpq   0x000000010310b258  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x000000010310b330: mov    %rbx,%rax
  0x000000010310b333: add    $0x40,%rsp
  0x000000010310b337: pop    %rbp
  0x000000010310b338: test   %eax,-0xa1623e(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010310b33e: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@54 (line 1560)

  0x000000010310b33f: mov    $0xffffffff,%eax
  0x000000010310b344: add    $0x40,%rsp
  0x000000010310b348: pop    %rbp
  0x000000010310b349: test   %eax,-0xa1624f(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010310b34f: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@62 (line 1563)

  0x000000010310b350: mov    %edi,0x30(%rsp)
  0x000000010310b354: mov    %rsi,%rbx
  0x000000010310b357: movabs $0x117044eb0,%rax  ;   {metadata(method data for {method} {0x0000000116e71218} 'indexOf' '(II)I' in 'java/lang/String')}
  0x000000010310b361: addq   $0x1,0x1d8(%rax)
  0x000000010310b369: mov    %rdx,%rbx
  0x000000010310b36c: mov    %rbx,%rdx
  0x000000010310b36f: mov    %rcx,%rax
  0x000000010310b372: mov    %rax,%rcx
  0x000000010310b375: mov    %rsi,%r8
  0x000000010310b378: mov    %r8,%rsi           ;*invokespecial indexOfSupplementary
                                                ; - java.lang.String::indexOf@66 (line 1565)

  0x000000010310b37b: mov    %ebx,0x2c(%rsp)
  0x000000010310b37f: mov    %eax,0x28(%rsp)
  0x000000010310b383: mov    %r8,0x20(%rsp)
  0x000000010310b388: nop
  0x000000010310b389: nop
  0x000000010310b38a: nop
  0x000000010310b38b: nop
  0x000000010310b38c: nop
  0x000000010310b38d: nop
  0x000000010310b38e: nop
  0x000000010310b38f: callq  0x0000000103046020  ; OopMap{[32]=Oop off=628}
                                                ;*invokespecial indexOfSupplementary
                                                ; - java.lang.String::indexOf@66 (line 1565)
                                                ;   {optimized virtual_call}
  0x000000010310b394: add    $0x40,%rsp
  0x000000010310b398: pop    %rbp
  0x000000010310b399: test   %eax,-0xa1629f(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010310b39f: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@69 (line 1565)

  0x000000010310b3a0: mov    $0xffffffff,%eax
  0x000000010310b3a5: add    $0x40,%rsp
  0x000000010310b3a9: pop    %rbp
  0x000000010310b3aa: test   %eax,-0xa162b0(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010310b3b0: retq
  0x000000010310b3b1: mov    %rax,0x8(%rsp)
  0x000000010310b3b6: movq   $0xffffffffffffffff,(%rsp)
  0x000000010310b3be: callq  0x00000001030fe020  ; OopMap{rsi=Oop off=675}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)
                                                ;   {runtime_call}
  0x000000010310b3c3: jmpq   0x000000010310b17e
  0x000000010310b3c8: callq  0x000000010306db40  ; OopMap{rsi=Oop rax=Oop off=685}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x000000010310b3cd: mov    %rbx,(%rsp)
  0x000000010310b3d1: callq  0x000000010306e200  ; OopMap{rsi=Oop rax=Oop off=694}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x000000010310b3d6: mov    %r8,0x8(%rsp)
  0x000000010310b3db: movq   $0x3a,(%rsp)
  0x000000010310b3e3: callq  0x00000001030fe020  ; OopMap{rsi=Oop rax=Oop off=712}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)
                                                ;   {runtime_call}
  0x000000010310b3e8: jmpq   0x000000010310b2dc
  0x000000010310b3ed: nop
  0x000000010310b3ee: nop
  0x000000010310b3ef: mov    0x2a8(%r15),%rax
  0x000000010310b3f6: movabs $0x0,%r10
  0x000000010310b400: mov    %r10,0x2a8(%r15)
  0x000000010310b407: movabs $0x0,%r10
  0x000000010310b411: mov    %r10,0x2b0(%r15)
  0x000000010310b418: add    $0x40,%rsp
  0x000000010310b41c: pop    %rbp
  0x000000010310b41d: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x000000010310b422: hlt
  0x000000010310b423: hlt
  0x000000010310b424: hlt
  0x000000010310b425: hlt
  0x000000010310b426: hlt
  0x000000010310b427: hlt
  0x000000010310b428: hlt
  0x000000010310b429: hlt
  0x000000010310b42a: hlt
  0x000000010310b42b: hlt
  0x000000010310b42c: hlt
  0x000000010310b42d: hlt
  0x000000010310b42e: hlt
  0x000000010310b42f: hlt
  0x000000010310b430: hlt
  0x000000010310b431: hlt
  0x000000010310b432: hlt
  0x000000010310b433: hlt
  0x000000010310b434: hlt
  0x000000010310b435: hlt
  0x000000010310b436: hlt
  0x000000010310b437: hlt
  0x000000010310b438: hlt
  0x000000010310b439: hlt
  0x000000010310b43a: hlt
  0x000000010310b43b: hlt
  0x000000010310b43c: hlt
  0x000000010310b43d: hlt
  0x000000010310b43e: hlt
  0x000000010310b43f: hlt
[Stub Code]
  0x000000010310b440: nop                       ;   {no_reloc}
  0x000000010310b441: nop
  0x000000010310b442: nop
  0x000000010310b443: nop
  0x000000010310b444: nop
  0x000000010310b445: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010310b44f: jmpq   0x000000010310b44f  ;   {runtime_call}
[Exception Handler]
  0x000000010310b454: callq  0x00000001030fb9a0  ;   {runtime_call}
  0x000000010310b459: mov    %rsp,-0x28(%rsp)
  0x000000010310b45e: sub    $0x80,%rsp
  0x000000010310b465: mov    %rax,0x78(%rsp)
  0x000000010310b46a: mov    %rcx,0x70(%rsp)
  0x000000010310b46f: mov    %rdx,0x68(%rsp)
  0x000000010310b474: mov    %rbx,0x60(%rsp)
  0x000000010310b479: mov    %rbp,0x50(%rsp)
  0x000000010310b47e: mov    %rsi,0x48(%rsp)
  0x000000010310b483: mov    %rdi,0x40(%rsp)
  0x000000010310b488: mov    %r8,0x38(%rsp)
  0x000000010310b48d: mov    %r9,0x30(%rsp)
  0x000000010310b492: mov    %r10,0x28(%rsp)
  0x000000010310b497: mov    %r11,0x20(%rsp)
  0x000000010310b49c: mov    %r12,0x18(%rsp)
  0x000000010310b4a1: mov    %r13,0x10(%rsp)
  0x000000010310b4a6: mov    %r14,0x8(%rsp)
  0x000000010310b4ab: mov    %r15,(%rsp)
  0x000000010310b4af: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x000000010310b4b9: movabs $0x10310b459,%rsi  ;   {internal_word}
  0x000000010310b4c3: mov    %rsp,%rdx
  0x000000010310b4c6: and    $0xfffffffffffffff0,%rsp
  0x000000010310b4ca: callq  0x0000000101b0f196  ;   {runtime_call}
  0x000000010310b4cf: hlt
[Deopt Handler Code]
  0x000000010310b4d0: movabs $0x10310b4d0,%r10  ;   {section_word}
  0x000000010310b4da: push   %r10
  0x000000010310b4dc: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x000000010310b4e1: hlt
  0x000000010310b4e2: hlt
  0x000000010310b4e3: hlt
  0x000000010310b4e4: hlt
  0x000000010310b4e5: hlt
  0x000000010310b4e6: hlt
  0x000000010310b4e7: hlt
Decoding compiled method 0x000000010310b750:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000116e6c480} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000000010310b8c0: mov    0x8(%rsi),%r10d
  0x000000010310b8c4: shl    $0x3,%r10
  0x000000010310b8c8: cmp    %rax,%r10
  0x000000010310b8cb: jne    0x0000000103045e20  ;   {runtime_call}
  0x000000010310b8d1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010310b8dc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010310b8e0: mov    %eax,-0x14000(%rsp)
  0x000000010310b8e7: push   %rbp
  0x000000010310b8e8: sub    $0x30,%rsp
  0x000000010310b8ec: movabs $0x116fe7460,%rdi  ;   {metadata(method data for {method} {0x0000000116e6c480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010310b8f6: mov    0xdc(%rdi),%ebx
  0x000000010310b8fc: add    $0x8,%ebx
  0x000000010310b8ff: mov    %ebx,0xdc(%rdi)
  0x000000010310b905: movabs $0x116e6c480,%rdi  ;   {metadata({method} {0x0000000116e6c480} '<init>' '()V' in 'java/lang/Object')}
  0x000000010310b90f: and    $0x1ff8,%ebx
  0x000000010310b915: cmp    $0x0,%ebx
  0x000000010310b918: je     0x000000010310b937
  0x000000010310b91e: mov    %rsi,%rdi          ;*return
                                                ; - java.lang.Object::<init>@0 (line 37)

  0x000000010310b921: mov    %rsi,0x20(%rsp)
  0x000000010310b926: callq  0x000000010306d8a0  ; OopMap{[32]=Oop off=107}
                                                ;*return
                                                ; - java.lang.Object::<init>@0 (line 37)
                                                ;   {runtime_call}
  0x000000010310b92b: add    $0x30,%rsp
  0x000000010310b92f: pop    %rbp
  0x000000010310b930: test   %eax,-0xa16836(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010310b936: retq
  0x000000010310b937: mov    %rdi,0x8(%rsp)
  0x000000010310b93c: movq   $0xffffffffffffffff,(%rsp)
  0x000000010310b944: callq  0x00000001030fe020  ; OopMap{rsi=Oop off=137}
                                                ;*synchronization entry
                                                ; - java.lang.Object::<init>@-1 (line 37)
                                                ;   {runtime_call}
  0x000000010310b949: jmp    0x000000010310b91e
  0x000000010310b94b: nop
  0x000000010310b94c: nop
  0x000000010310b94d: mov    0x2a8(%r15),%rax
  0x000000010310b954: movabs $0x0,%r10
  0x000000010310b95e: mov    %r10,0x2a8(%r15)
  0x000000010310b965: movabs $0x0,%r10
  0x000000010310b96f: mov    %r10,0x2b0(%r15)
  0x000000010310b976: add    $0x30,%rsp
  0x000000010310b97a: pop    %rbp
  0x000000010310b97b: jmpq   0x000000010306e6a0  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x000000010310b980: callq  0x00000001030fb9a0  ;   {no_reloc}
  0x000000010310b985: mov    %rsp,-0x28(%rsp)
  0x000000010310b98a: sub    $0x80,%rsp
  0x000000010310b991: mov    %rax,0x78(%rsp)
  0x000000010310b996: mov    %rcx,0x70(%rsp)
  0x000000010310b99b: mov    %rdx,0x68(%rsp)
  0x000000010310b9a0: mov    %rbx,0x60(%rsp)
  0x000000010310b9a5: mov    %rbp,0x50(%rsp)
  0x000000010310b9aa: mov    %rsi,0x48(%rsp)
  0x000000010310b9af: mov    %rdi,0x40(%rsp)
  0x000000010310b9b4: mov    %r8,0x38(%rsp)
  0x000000010310b9b9: mov    %r9,0x30(%rsp)
  0x000000010310b9be: mov    %r10,0x28(%rsp)
  0x000000010310b9c3: mov    %r11,0x20(%rsp)
  0x000000010310b9c8: mov    %r12,0x18(%rsp)
  0x000000010310b9cd: mov    %r13,0x10(%rsp)
  0x000000010310b9d2: mov    %r14,0x8(%rsp)
  0x000000010310b9d7: mov    %r15,(%rsp)
  0x000000010310b9db: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x000000010310b9e5: movabs $0x10310b985,%rsi  ;   {internal_word}
  0x000000010310b9ef: mov    %rsp,%rdx
  0x000000010310b9f2: and    $0xfffffffffffffff0,%rsp
  0x000000010310b9f6: callq  0x0000000101b0f196  ;   {runtime_call}
  0x000000010310b9fb: hlt
[Deopt Handler Code]
  0x000000010310b9fc: movabs $0x10310b9fc,%r10  ;   {section_word}
  0x000000010310ba06: push   %r10
  0x000000010310ba08: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x000000010310ba0d: hlt
  0x000000010310ba0e: hlt
  0x000000010310ba0f: hlt
Decoding compiled method 0x000000010310bad0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000116e702a0} 'getChars' '(II[CI)V' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  # parm2:    r8:r8     = '[C'
  # parm3:    r9        = int
  #           [sp+0x90]  (sp of caller)
  0x000000010310bca0: mov    0x8(%rsi),%r10d
  0x000000010310bca4: shl    $0x3,%r10
  0x000000010310bca8: cmp    %rax,%r10
  0x000000010310bcab: jne    0x0000000103045e20  ;   {runtime_call}
  0x000000010310bcb1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010310bcbc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010310bcc0: mov    %eax,-0x14000(%rsp)
  0x000000010310bcc7: push   %rbp
  0x000000010310bcc8: sub    $0x80,%rsp
  0x000000010310bccf: mov    %rsi,0x50(%rsp)
  0x000000010310bcd4: mov    %edx,0x3c(%rsp)
  0x000000010310bcd8: mov    %ecx,0x38(%rsp)
  0x000000010310bcdc: mov    %r8,0x48(%rsp)
  0x000000010310bce1: mov    %r9d,0x40(%rsp)
  0x000000010310bce6: movabs $0x117073c78,%rdi  ;   {metadata(method data for {method} {0x0000000116e702a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010310bcf0: mov    0xdc(%rdi),%ebx
  0x000000010310bcf6: add    $0x8,%ebx
  0x000000010310bcf9: mov    %ebx,0xdc(%rdi)
  0x000000010310bcff: movabs $0x116e702a0,%rdi  ;   {metadata({method} {0x0000000116e702a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010310bd09: and    $0x1ff8,%ebx
  0x000000010310bd0f: cmp    $0x0,%ebx
  0x000000010310bd12: je     0x000000010310bf79  ;*iload_1
                                                ; - java.lang.String::getChars@0 (line 817)

  0x000000010310bd18: cmp    $0x0,%edx
  0x000000010310bd1b: movabs $0x117073c78,%rdi  ;   {metadata(method data for {method} {0x0000000116e702a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010310bd25: movabs $0x108,%rbx
  0x000000010310bd2f: jge    0x000000010310bd3f
  0x000000010310bd35: movabs $0x118,%rbx
  0x000000010310bd3f: mov    (%rdi,%rbx,1),%rax
  0x000000010310bd43: lea    0x1(%rax),%rax
  0x000000010310bd47: mov    %rax,(%rdi,%rbx,1)
  0x000000010310bd4b: jl     0x000000010310bf29  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)

  0x000000010310bd51: mov    0xc(%rsi),%edi
  0x000000010310bd54: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)

  0x000000010310bd58: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; implicit exception: dispatches to 0x000000010310bf90
  0x000000010310bd5b: cmp    %ebx,%ecx
  0x000000010310bd5d: movabs $0x117073c78,%rbx  ;   {metadata(method data for {method} {0x0000000116e702a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010310bd67: movabs $0x138,%rax
  0x000000010310bd71: jle    0x000000010310bd81
  0x000000010310bd77: movabs $0x148,%rax
  0x000000010310bd81: mov    (%rbx,%rax,1),%r11
  0x000000010310bd85: lea    0x1(%r11),%r11
  0x000000010310bd89: mov    %r11,(%rbx,%rax,1)
  0x000000010310bd8d: jg     0x000000010310bed1  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)

  0x000000010310bd93: cmp    %ecx,%edx
  0x000000010310bd95: movabs $0x117073c78,%rbx  ;   {metadata(method data for {method} {0x0000000116e702a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010310bd9f: movabs $0x168,%rax
  0x000000010310bda9: jle    0x000000010310bdb9
  0x000000010310bdaf: movabs $0x178,%rax
  0x000000010310bdb9: mov    (%rbx,%rax,1),%r11
  0x000000010310bdbd: lea    0x1(%r11),%r11
  0x000000010310bdc1: mov    %r11,(%rbx,%rax,1)
  0x000000010310bdc5: jg     0x000000010310be7c  ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)

  0x000000010310bdcb: movabs $0x117073c78,%rbx  ;   {metadata(method data for {method} {0x0000000116e702a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010310bdd5: addq   $0x1,0x198(%rbx)
  0x000000010310bddd: mov    %rcx,%rbx
  0x000000010310bde0: sub    %edx,%ebx
  0x000000010310bde2: mov    %rdi,%rsi
  0x000000010310bde5: mov    %rdx,%rdi
  0x000000010310bde8: mov    %rdi,%rdx
  0x000000010310bdeb: mov    %r8,%rcx
  0x000000010310bdee: mov    %r9,%r8
  0x000000010310bdf1: mov    %rbx,%r9
  0x000000010310bdf4: test   %rcx,%rcx
  0x000000010310bdf7: je     0x000000010310bf95
  0x000000010310bdfd: test   %edx,%edx
  0x000000010310bdff: jl     0x000000010310bf95
  0x000000010310be05: test   %r8d,%r8d
  0x000000010310be08: jl     0x000000010310bf95
  0x000000010310be0e: lea    (%rdx,%r9,1),%rdi
  0x000000010310be12: cmp    0xc(%rsi),%edi
  0x000000010310be15: ja     0x000000010310bf95
  0x000000010310be1b: lea    (%r8,%r9,1),%rdi
  0x000000010310be1f: cmp    0xc(%rcx),%edi
  0x000000010310be22: ja     0x000000010310bf95
  0x000000010310be28: test   %r9d,%r9d
  0x000000010310be2b: jl     0x000000010310bf95
  0x000000010310be31: je     0x000000010310be6d
  0x000000010310be37: movslq %edx,%rdx
  0x000000010310be3a: movslq %r8d,%r8
  0x000000010310be3d: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000010310be42: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010310be47: mov    %r9,%rdx
  0x000000010310be4a: test   $0xf,%esp
  0x000000010310be50: je     0x000000010310be68
  0x000000010310be56: sub    $0x8,%rsp
  0x000000010310be5a: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x000000010310be5f: add    $0x8,%rsp
  0x000000010310be63: jmpq   0x000000010310be6d
  0x000000010310be68: callq  Stub::jshort_arraycopy  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {runtime_call}
  0x000000010310be6d: add    $0x80,%rsp
  0x000000010310be74: pop    %rbp
  0x000000010310be75: test   %eax,-0xa16d7b(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010310be7b: retq                      ;*return
                                                ; - java.lang.String::getChars@61 (line 827)

  0x000000010310be7c: nopl   0x0(%rax)
  0x000000010310be80: jmpq   0x000000010310bfb0  ;   {no_reloc}
  0x000000010310be85: add    %al,(%rax)
  0x000000010310be87: add    %al,(%rax)
  0x000000010310be89: add    %ch,%cl
  0x000000010310be8b: sub    (%rcx),%eax
  0x000000010310be8d: add    %al,(%rax)         ;*new  ; - java.lang.String::getChars@36 (line 824)

  0x000000010310be8f: mov    %rax,%rdx
  0x000000010310be92: movabs $0x117073c78,%rsi  ;   {metadata(method data for {method} {0x0000000116e702a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010310be9c: addq   $0x1,0x188(%rsi)
  0x000000010310bea4: mov    0x38(%rsp),%ecx
  0x000000010310bea8: sub    0x3c(%rsp),%ecx
  0x000000010310beac: mov    %rcx,%rdx
  0x000000010310beaf: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::getChars@43 (line 824)

  0x000000010310beb2: mov    %rax,0x58(%rsp)
  0x000000010310beb7: callq  0x0000000103046020  ; OopMap{[72]=Oop [80]=Oop [88]=Oop off=540}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::getChars@43 (line 824)
                                                ;   {optimized virtual_call}
  0x000000010310bebc: mov    0x58(%rsp),%rax    ; OopMap{[72]=Oop [80]=Oop rax=Oop off=545}
                                                ;*athrow
                                                ; - java.lang.String::getChars@46 (line 824)

  0x000000010310bec1: movabs $0x10310bec1,%rdx  ;   {section_word}
  0x000000010310becb: callq  0x000000010306bfa0  ;   {runtime_call}
  0x000000010310bed0: nop                       ;*athrow
                                                ; - java.lang.String::getChars@46 (line 824)

  0x000000010310bed1: nopl   0x0(%rax)
  0x000000010310bed8: jmpq   0x000000010310bfd6  ;   {no_reloc}
  0x000000010310bedd: add    %al,(%rax)
  0x000000010310bedf: add    %al,(%rax)
  0x000000010310bee1: add    %ch,%cl
  0x000000010310bee3: stc
  0x000000010310bee4: add    %al,(%rax)
  0x000000010310bee6: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::getChars@22 (line 821)

  0x000000010310bee9: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x0000000116e702a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010310beec: js     0x000000010310bf2a
  0x000000010310beee: (bad)
  0x000000010310beef: (bad)
  0x000000010310bef0: add    %eax,(%rax)
  0x000000010310bef2: add    %al,(%rax)
  0x000000010310bef4: addq   $0x1,0x158(%rsi)
  0x000000010310befc: mov    0x38(%rsp),%edx
  0x000000010310bf00: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::getChars@27 (line 821)

  0x000000010310bf03: mov    %rax,0x60(%rsp)
  0x000000010310bf08: nop
  0x000000010310bf09: nop
  0x000000010310bf0a: nop
  0x000000010310bf0b: nop
  0x000000010310bf0c: nop
  0x000000010310bf0d: nop
  0x000000010310bf0e: nop
  0x000000010310bf0f: callq  0x0000000103046020  ; OopMap{[80]=Oop [72]=Oop [96]=Oop off=628}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::getChars@27 (line 821)
                                                ;   {optimized virtual_call}
  0x000000010310bf14: mov    0x60(%rsp),%rax    ; OopMap{[80]=Oop [72]=Oop rax=Oop off=633}
                                                ;*athrow
                                                ; - java.lang.String::getChars@30 (line 821)

  0x000000010310bf19: movabs $0x10310bf19,%rdx  ;   {section_word}
  0x000000010310bf23: callq  0x000000010306bfa0  ;   {runtime_call}
  0x000000010310bf28: nop                       ;*athrow
                                                ; - java.lang.String::getChars@30 (line 821)

  0x000000010310bf29: mov    %rdx,%rdi
  0x000000010310bf2c: nopl   0x0(%rax)
  0x000000010310bf30: jmpq   0x000000010310bffc  ;   {no_reloc}
  0x000000010310bf35: add    %al,(%rax)
  0x000000010310bf37: add    %al,(%rax)
  0x000000010310bf39: add    %ch,%cl
  0x000000010310bf3b: movl   $0x8b480000,(%rax)  ;*new
                                                ; - java.lang.String::getChars@4 (line 818)

  0x000000010310bf41: rorb   -0x45(%rax)        ;   {metadata(method data for {method} {0x0000000116e702a0} 'getChars' '(II[CI)V' in 'java/lang/String')}
  0x000000010310bf44: js     0x000000010310bf82
  0x000000010310bf46: (bad)
  0x000000010310bf47: (bad)
  0x000000010310bf48: add    %eax,(%rax)
  0x000000010310bf4a: add    %al,(%rax)
  0x000000010310bf4c: addq   $0x1,0x128(%rbx)
  0x000000010310bf54: mov    %rdi,%rdx
  0x000000010310bf57: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - java.lang.String::getChars@9 (line 818)

  0x000000010310bf5a: mov    %rax,0x68(%rsp)
  0x000000010310bf5f: callq  0x0000000103046020  ; OopMap{[72]=Oop [80]=Oop [104]=Oop off=708}
                                                ;*invokespecial <init>
                                                ; - java.lang.String::getChars@9 (line 818)
                                                ;   {optimized virtual_call}
  0x000000010310bf64: mov    0x68(%rsp),%rax    ; OopMap{[72]=Oop [80]=Oop rax=Oop off=713}
                                                ;*athrow
                                                ; - java.lang.String::getChars@12 (line 818)

  0x000000010310bf69: movabs $0x10310bf69,%rdx  ;   {section_word}
  0x000000010310bf73: callq  0x000000010306bfa0  ;   {runtime_call}
  0x000000010310bf78: nop
  0x000000010310bf79: mov    %rdi,0x8(%rsp)
  0x000000010310bf7e: movq   $0xffffffffffffffff,(%rsp)
  0x000000010310bf86: callq  0x00000001030fe020  ; OopMap{rsi=Oop [80]=Oop r8=Oop [72]=Oop off=747}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 817)
                                                ;   {runtime_call}
  0x000000010310bf8b: jmpq   0x000000010310bd18
  0x000000010310bf90: callq  0x000000010306db40  ; OopMap{rsi=Oop [80]=Oop r8=Oop [72]=Oop rdi=Oop off=757}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x000000010310bf95: nop
  0x000000010310bf96: nop
  0x000000010310bf97: callq  0x0000000103046420  ; OopMap{[80]=Oop [72]=Oop off=764}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {static_call}
  0x000000010310bf9c: jmpq   0x000000010310be6d
  0x000000010310bfa1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010310bfab: mov    $0xa050f00,%eax
  0x000000010310bfb0: callq  0x00000001030fd020  ; OopMap{[72]=Oop [80]=Oop off=789}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x000000010310bfb5: jmpq   0x000000010310be80
  0x000000010310bfba: mov    %rdx,%rdx
  0x000000010310bfbd: callq  0x000000010306d620  ; OopMap{[72]=Oop [80]=Oop off=802}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x000000010310bfc2: jmpq   0x000000010310be8f
  0x000000010310bfc7: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010310bfd1: mov    $0xa050f00,%eax
  0x000000010310bfd6: callq  0x00000001030fd020  ; OopMap{[80]=Oop [72]=Oop off=827}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x000000010310bfdb: jmpq   0x000000010310bed8
  0x000000010310bfe0: mov    %rdx,%rdx
  0x000000010310bfe3: callq  0x000000010306d620  ; OopMap{[80]=Oop [72]=Oop off=840}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x000000010310bfe8: jmpq   0x000000010310bee7
  0x000000010310bfed: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x000000010310bff7: mov    $0xa050f00,%eax
  0x000000010310bffc: callq  0x00000001030fd020  ; OopMap{[80]=Oop [72]=Oop off=865}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x000000010310c001: jmpq   0x000000010310bf30
  0x000000010310c006: mov    %rdx,%rdx
  0x000000010310c009: callq  0x000000010306d620  ; OopMap{[80]=Oop [72]=Oop off=878}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x000000010310c00e: jmpq   0x000000010310bf3f
  0x000000010310c013: nop
  0x000000010310c014: nop
  0x000000010310c015: mov    0x2a8(%r15),%rax
  0x000000010310c01c: movabs $0x0,%r10
  0x000000010310c026: mov    %r10,0x2a8(%r15)
  0x000000010310c02d: movabs $0x0,%r10
  0x000000010310c037: mov    %r10,0x2b0(%r15)
  0x000000010310c03e: add    $0x80,%rsp
  0x000000010310c045: pop    %rbp
  0x000000010310c046: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x000000010310c04b: hlt
  0x000000010310c04c: hlt
  0x000000010310c04d: hlt
  0x000000010310c04e: hlt
  0x000000010310c04f: hlt
  0x000000010310c050: hlt
  0x000000010310c051: hlt
  0x000000010310c052: hlt
  0x000000010310c053: hlt
  0x000000010310c054: hlt
  0x000000010310c055: hlt
  0x000000010310c056: hlt
  0x000000010310c057: hlt
  0x000000010310c058: hlt
  0x000000010310c059: hlt
  0x000000010310c05a: hlt
  0x000000010310c05b: hlt
  0x000000010310c05c: hlt
  0x000000010310c05d: hlt
  0x000000010310c05e: hlt
  0x000000010310c05f: hlt
[Stub Code]
  0x000000010310c060: nop                       ;   {no_reloc}
  0x000000010310c061: nop
  0x000000010310c062: nop
  0x000000010310c063: nop
  0x000000010310c064: nop
  0x000000010310c065: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010310c06f: jmpq   0x000000010310c06f  ;   {runtime_call}
  0x000000010310c074: nop
  0x000000010310c075: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010310c07f: jmpq   0x000000010310c07f  ;   {runtime_call}
  0x000000010310c084: nop
  0x000000010310c085: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010310c08f: jmpq   0x000000010310c08f  ;   {runtime_call}
  0x000000010310c094: nop
  0x000000010310c095: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010310c09f: jmpq   0x000000010310c09f  ;   {runtime_call}
[Exception Handler]
  0x000000010310c0a4: callq  0x00000001030fb9a0  ;   {runtime_call}
  0x000000010310c0a9: mov    %rsp,-0x28(%rsp)
  0x000000010310c0ae: sub    $0x80,%rsp
  0x000000010310c0b5: mov    %rax,0x78(%rsp)
  0x000000010310c0ba: mov    %rcx,0x70(%rsp)
  0x000000010310c0bf: mov    %rdx,0x68(%rsp)
  0x000000010310c0c4: mov    %rbx,0x60(%rsp)
  0x000000010310c0c9: mov    %rbp,0x50(%rsp)
  0x000000010310c0ce: mov    %rsi,0x48(%rsp)
  0x000000010310c0d3: mov    %rdi,0x40(%rsp)
  0x000000010310c0d8: mov    %r8,0x38(%rsp)
  0x000000010310c0dd: mov    %r9,0x30(%rsp)
  0x000000010310c0e2: mov    %r10,0x28(%rsp)
  0x000000010310c0e7: mov    %r11,0x20(%rsp)
  0x000000010310c0ec: mov    %r12,0x18(%rsp)
  0x000000010310c0f1: mov    %r13,0x10(%rsp)
  0x000000010310c0f6: mov    %r14,0x8(%rsp)
  0x000000010310c0fb: mov    %r15,(%rsp)
  0x000000010310c0ff: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x000000010310c109: movabs $0x10310c0a9,%rsi  ;   {internal_word}
  0x000000010310c113: mov    %rsp,%rdx
  0x000000010310c116: and    $0xfffffffffffffff0,%rsp
  0x000000010310c11a: callq  0x0000000101b0f196  ;   {runtime_call}
  0x000000010310c11f: hlt
[Deopt Handler Code]
  0x000000010310c120: movabs $0x10310c120,%r10  ;   {section_word}
  0x000000010310c12a: push   %r10
  0x000000010310c12c: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x000000010310c131: hlt
  0x000000010310c132: hlt
  0x000000010310c133: hlt
  0x000000010310c134: hlt
  0x000000010310c135: hlt
  0x000000010310c136: hlt
  0x000000010310c137: hlt
Decoding compiled method 0x000000010310c490:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000116f64fd8} 'min' '(II)I' in 'java/lang/Math'
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x000000010310c600: mov    %eax,-0x14000(%rsp)
  0x000000010310c607: push   %rbp
  0x000000010310c608: sub    $0x30,%rsp
  0x000000010310c60c: movabs $0x11703afa0,%rax  ;   {metadata(method data for {method} {0x0000000116f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010310c616: mov    0xdc(%rax),%edi
  0x000000010310c61c: add    $0x8,%edi
  0x000000010310c61f: mov    %edi,0xdc(%rax)
  0x000000010310c625: movabs $0x116f64fd8,%rax  ;   {metadata({method} {0x0000000116f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010310c62f: and    $0x1ff8,%edi
  0x000000010310c635: cmp    $0x0,%edi
  0x000000010310c638: je     0x000000010310c69d  ;*iload_0
                                                ; - java.lang.Math::min@0 (line 1336)

  0x000000010310c63e: cmp    %edx,%esi
  0x000000010310c640: movabs $0x11703afa0,%rax  ;   {metadata(method data for {method} {0x0000000116f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010310c64a: movabs $0x108,%rdi
  0x000000010310c654: jg     0x000000010310c664
  0x000000010310c65a: movabs $0x118,%rdi
  0x000000010310c664: mov    (%rax,%rdi,1),%rbx
  0x000000010310c668: lea    0x1(%rbx),%rbx
  0x000000010310c66c: mov    %rbx,(%rax,%rdi,1)
  0x000000010310c670: jg     0x000000010310c68b  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)

  0x000000010310c676: movabs $0x11703afa0,%rax  ;   {metadata(method data for {method} {0x0000000116f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010310c680: incl   0x128(%rax)
  0x000000010310c686: jmpq   0x000000010310c68e  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)

  0x000000010310c68b: mov    %rdx,%rsi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x000000010310c68e: mov    %rsi,%rax
  0x000000010310c691: add    $0x30,%rsp
  0x000000010310c695: pop    %rbp
  0x000000010310c696: test   %eax,-0xa1759c(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010310c69c: retq
  0x000000010310c69d: mov    %rax,0x8(%rsp)
  0x000000010310c6a2: movq   $0xffffffffffffffff,(%rsp)
  0x000000010310c6aa: callq  0x00000001030fe020  ; OopMap{off=175}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ;   {runtime_call}
  0x000000010310c6af: jmp    0x000000010310c63e
  0x000000010310c6b1: nop
  0x000000010310c6b2: nop
  0x000000010310c6b3: mov    0x2a8(%r15),%rax
  0x000000010310c6ba: movabs $0x0,%r10
  0x000000010310c6c4: mov    %r10,0x2a8(%r15)
  0x000000010310c6cb: movabs $0x0,%r10
  0x000000010310c6d5: mov    %r10,0x2b0(%r15)
  0x000000010310c6dc: add    $0x30,%rsp
  0x000000010310c6e0: pop    %rbp
  0x000000010310c6e1: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x000000010310c6e6: hlt
  0x000000010310c6e7: hlt
  0x000000010310c6e8: hlt
  0x000000010310c6e9: hlt
  0x000000010310c6ea: hlt
  0x000000010310c6eb: hlt
  0x000000010310c6ec: hlt
  0x000000010310c6ed: hlt
  0x000000010310c6ee: hlt
  0x000000010310c6ef: hlt
  0x000000010310c6f0: hlt
  0x000000010310c6f1: hlt
  0x000000010310c6f2: hlt
  0x000000010310c6f3: hlt
  0x000000010310c6f4: hlt
  0x000000010310c6f5: hlt
  0x000000010310c6f6: hlt
  0x000000010310c6f7: hlt
  0x000000010310c6f8: hlt
  0x000000010310c6f9: hlt
  0x000000010310c6fa: hlt
  0x000000010310c6fb: hlt
  0x000000010310c6fc: hlt
  0x000000010310c6fd: hlt
  0x000000010310c6fe: hlt
  0x000000010310c6ff: hlt
[Exception Handler]
[Stub Code]
  0x000000010310c700: callq  0x00000001030fb9a0  ;   {no_reloc}
  0x000000010310c705: mov    %rsp,-0x28(%rsp)
  0x000000010310c70a: sub    $0x80,%rsp
  0x000000010310c711: mov    %rax,0x78(%rsp)
  0x000000010310c716: mov    %rcx,0x70(%rsp)
  0x000000010310c71b: mov    %rdx,0x68(%rsp)
  0x000000010310c720: mov    %rbx,0x60(%rsp)
  0x000000010310c725: mov    %rbp,0x50(%rsp)
  0x000000010310c72a: mov    %rsi,0x48(%rsp)
  0x000000010310c72f: mov    %rdi,0x40(%rsp)
  0x000000010310c734: mov    %r8,0x38(%rsp)
  0x000000010310c739: mov    %r9,0x30(%rsp)
  0x000000010310c73e: mov    %r10,0x28(%rsp)
  0x000000010310c743: mov    %r11,0x20(%rsp)
  0x000000010310c748: mov    %r12,0x18(%rsp)
  0x000000010310c74d: mov    %r13,0x10(%rsp)
  0x000000010310c752: mov    %r14,0x8(%rsp)
  0x000000010310c757: mov    %r15,(%rsp)
  0x000000010310c75b: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x000000010310c765: movabs $0x10310c705,%rsi  ;   {internal_word}
  0x000000010310c76f: mov    %rsp,%rdx
  0x000000010310c772: and    $0xfffffffffffffff0,%rsp
  0x000000010310c776: callq  0x0000000101b0f196  ;   {runtime_call}
  0x000000010310c77b: hlt
[Deopt Handler Code]
  0x000000010310c77c: movabs $0x10310c77c,%r10  ;   {section_word}
  0x000000010310c786: push   %r10
  0x000000010310c788: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x000000010310c78d: hlt
  0x000000010310c78e: hlt
  0x000000010310c78f: hlt
Decoding compiled method 0x000000010310f550:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000116e6fe48} 'charAt' '(I)C' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x000000010310f6a0: mov    0x8(%rsi),%r10d
  0x000000010310f6a4: shl    $0x3,%r10
  0x000000010310f6a8: cmp    %r10,%rax
  0x000000010310f6ab: jne    0x0000000103045e20  ;   {runtime_call}
  0x000000010310f6b1: data32 xchg %ax,%ax
  0x000000010310f6b4: nopl   0x0(%rax,%rax,1)
  0x000000010310f6bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010310f6c0: mov    %eax,-0x14000(%rsp)
  0x000000010310f6c7: push   %rbp
  0x000000010310f6c8: sub    $0x20,%rsp         ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)

  0x000000010310f6cc: test   %edx,%edx
  0x000000010310f6ce: jl     0x000000010310f73d  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x000000010310f6d0: mov    0xc(%rsi),%r11d    ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x000000010310f6d4: test   %r11d,%r11d
  0x000000010310f6d7: je     0x000000010310f6fc
  0x000000010310f6d9: mov    0xc(%r12,%r11,8),%ebp  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)

  0x000000010310f6de: cmp    %ebp,%edx
  0x000000010310f6e0: jge    0x000000010310f755  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x000000010310f6e2: cmp    %ebp,%edx
  0x000000010310f6e4: jae    0x000000010310f721
  0x000000010310f6e6: lea    (%r12,%r11,8),%r10
  0x000000010310f6ea: movzwl 0x10(%r10,%rdx,2),%eax  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x000000010310f6f0: add    $0x20,%rsp
  0x000000010310f6f4: pop    %rbp
  0x000000010310f6f5: test   %eax,-0xa1a6fb(%rip)        # 0x00000001026f5000
                                                ;   {poll_return}
  0x000000010310f6fb: retq
  0x000000010310f6fc: mov    0x39c(%r15),%r11d
  0x000000010310f703: test   %r11d,%r11d
  0x000000010310f706: jne    0x000000010310f76d
  0x000000010310f708: mov    %rsi,%rbp
  0x000000010310f70b: mov    %edx,0x4(%rsp)
  0x000000010310f70f: mov    $0xfffffff6,%esi
  0x000000010310f714: data32 xchg %ax,%ax
  0x000000010310f717: callq  0x00000001030051a0  ; OopMap{rbp=Oop off=124}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000010310f71c: callq  0x0000000101b919dc  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000010310f721: mov    %rsi,%rbp
  0x000000010310f724: mov    %edx,0x4(%rsp)
  0x000000010310f728: mov    %r11d,0x8(%rsp)
  0x000000010310f72d: mov    $0xffffffe4,%esi
  0x000000010310f732: nop
  0x000000010310f733: callq  0x00000001030051a0  ; OopMap{rbp=Oop [8]=NarrowOop off=152}
                                                ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x000000010310f738: callq  0x0000000101b919dc  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)
                                                ;   {runtime_call}
  0x000000010310f73d: mov    %rsi,%rbp
  0x000000010310f740: mov    %edx,0x4(%rsp)
  0x000000010310f744: mov    $0xffffff65,%esi
  0x000000010310f749: xchg   %ax,%ax
  0x000000010310f74b: callq  0x00000001030051a0  ; OopMap{rbp=Oop off=176}
                                                ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x000000010310f750: callq  0x0000000101b919dc  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)
                                                ;   {runtime_call}
  0x000000010310f755: mov    %rsi,(%rsp)
  0x000000010310f759: mov    %edx,0xc(%rsp)
  0x000000010310f75d: mov    $0xffffff65,%esi
  0x000000010310f762: nop
  0x000000010310f763: callq  0x00000001030051a0  ; OopMap{[0]=Oop off=200}
                                                ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x000000010310f768: callq  0x0000000101b919dc  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)
                                                ;   {runtime_call}
  0x000000010310f76d: mov    %rsi,%rbp
  0x000000010310f770: mov    %edx,0x4(%rsp)
  0x000000010310f774: mov    $0xfffffff7,%esi
  0x000000010310f779: xchg   %ax,%ax
  0x000000010310f77b: callq  0x00000001030051a0  ; OopMap{rbp=Oop off=224}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000010310f780: callq  0x0000000101b919dc  ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x000000010310f785: hlt
  0x000000010310f786: hlt
  0x000000010310f787: hlt
  0x000000010310f788: hlt
  0x000000010310f789: hlt
  0x000000010310f78a: hlt
  0x000000010310f78b: hlt
  0x000000010310f78c: hlt
  0x000000010310f78d: hlt
  0x000000010310f78e: hlt
  0x000000010310f78f: hlt
  0x000000010310f790: hlt
  0x000000010310f791: hlt
  0x000000010310f792: hlt
  0x000000010310f793: hlt
  0x000000010310f794: hlt
  0x000000010310f795: hlt
  0x000000010310f796: hlt
  0x000000010310f797: hlt
  0x000000010310f798: hlt
  0x000000010310f799: hlt
  0x000000010310f79a: hlt
  0x000000010310f79b: hlt
  0x000000010310f79c: hlt
  0x000000010310f79d: hlt
  0x000000010310f79e: hlt
  0x000000010310f79f: hlt
[Exception Handler]
[Stub Code]
  0x000000010310f7a0: jmpq   0x0000000103057a60  ;   {no_reloc}
[Deopt Handler Code]
  0x000000010310f7a5: callq  0x000000010310f7aa
  0x000000010310f7aa: subq   $0x5,(%rsp)
  0x000000010310f7af: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x000000010310f7b4: hlt
  0x000000010310f7b5: hlt
  0x000000010310f7b6: hlt
  0x000000010310f7b7: hlt
[Loaded sun.misc.URLClassPath$JarLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.FileURLMapper from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x000000010310ecd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000116ee21e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx       = int
  #           [sp+0xc0]  (sp of caller)
  0x000000010310ee60: mov    0x8(%rsi),%r10d
  0x000000010310ee64: shl    $0x3,%r10
  0x000000010310ee68: cmp    %rax,%r10
  0x000000010310ee6b: jne    0x0000000103045e20  ;   {runtime_call}
  0x000000010310ee71: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010310ee7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010310ee80: mov    %eax,-0x14000(%rsp)
  0x000000010310ee87: push   %rbp
  0x000000010310ee88: sub    $0xb0,%rsp
  0x000000010310ee8f: mov    %edx,0x7c(%rsp)
  0x000000010310ee93: movabs $0x117073e80,%rdi  ;   {metadata(method data for {method} {0x0000000116ee21e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010310ee9d: mov    0xdc(%rdi),%ebx
  0x000000010310eea3: add    $0x8,%ebx
  0x000000010310eea6: mov    %ebx,0xdc(%rdi)
  0x000000010310eeac: movabs $0x116ee21e0,%rdi  ;   {metadata({method} {0x0000000116ee21e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010310eeb6: and    $0x1ff8,%ebx
  0x000000010310eebc: cmp    $0x0,%ebx
  0x000000010310eebf: je     0x000000010310f17f  ;*iload_1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@0 (line 123)

  0x000000010310eec5: mov    0x10(%rsi),%edi
  0x000000010310eec8: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x000000010310eecc: mov    %rdi,0x80(%rsp)
  0x000000010310eed4: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x000000010310f196
  0x000000010310eed7: mov    %rdx,%rax
  0x000000010310eeda: sub    %ebx,%eax
  0x000000010310eedc: cmp    $0x0,%eax
  0x000000010310eedf: movabs $0x117073e80,%rax  ;   {metadata(method data for {method} {0x0000000116ee21e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010310eee9: movabs $0x108,%rcx
  0x000000010310eef3: jle    0x000000010310ef03
  0x000000010310eef9: movabs $0x118,%rcx
  0x000000010310ef03: mov    (%rax,%rcx,1),%r8
  0x000000010310ef07: lea    0x1(%r8),%r8
  0x000000010310ef0b: mov    %r8,(%rax,%rcx,1)
  0x000000010310ef0f: jle    0x000000010310f170  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)

  0x000000010310ef15: mov    %ebx,0x78(%rsp)
  0x000000010310ef19: mov    %rsi,%rax
  0x000000010310ef1c: movabs $0x117073e80,%rcx  ;   {metadata(method data for {method} {0x0000000116ee21e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010310ef26: addq   $0x1,0x128(%rcx)
  0x000000010310ef2e: mov    %rdx,%rax
  0x000000010310ef31: mov    %rax,%rdx
  0x000000010310ef34: mov    %rsi,%rcx
  0x000000010310ef37: mov    %rcx,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x000000010310ef3a: mov    %rcx,0x88(%rsp)
  0x000000010310ef42: nop
  0x000000010310ef43: nop
  0x000000010310ef44: nop
  0x000000010310ef45: nop
  0x000000010310ef46: nop
  0x000000010310ef47: callq  0x0000000103046020  ; OopMap{[136]=Oop [128]=Oop off=236}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x000000010310ef4c: movabs $0x117073e80,%rbx  ;   {metadata(method data for {method} {0x0000000116ee21e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010310ef56: addq   $0x1,0x138(%rbx)
  0x000000010310ef5e: movabs $0x1170741c0,%rbx  ;   {metadata(method data for {method} {0x0000000116f89d30} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010310ef68: mov    0xdc(%rbx),%edx
  0x000000010310ef6e: add    $0x8,%edx
  0x000000010310ef71: mov    %edx,0xdc(%rbx)
  0x000000010310ef77: movabs $0x116f89d30,%rbx  ;   {metadata({method} {0x0000000116f89d30} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010310ef81: and    $0x7ffff8,%edx
  0x000000010310ef87: cmp    $0x0,%edx
  0x000000010310ef8a: je     0x000000010310f19b
  0x000000010310ef90: mov    %rax,%rbx
  0x000000010310ef93: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x000000010310ef9d: mov    %rax,%r11
  0x000000010310efa0: movslq %ebx,%rbx
  0x000000010310efa3: mov    %rbx,%rdi
  0x000000010310efa6: cmp    $0xffffff,%rbx
  0x000000010310efad: ja     0x000000010310f1b2
  0x000000010310efb3: movabs $0x17,%rsi
  0x000000010310efbd: lea    (%rsi,%rbx,2),%rsi
  0x000000010310efc1: and    $0xfffffffffffffff8,%rsi
  0x000000010310efc5: mov    0x60(%r15),%rax
  0x000000010310efc9: lea    (%rax,%rsi,1),%rsi
  0x000000010310efcd: cmp    0x70(%r15),%rsi
  0x000000010310efd1: ja     0x000000010310f1b2
  0x000000010310efd7: mov    %rsi,0x60(%r15)
  0x000000010310efdb: sub    %rax,%rsi
  0x000000010310efde: movq   $0x1,(%rax)
  0x000000010310efe5: mov    %rdx,%rcx
  0x000000010310efe8: shr    $0x3,%rcx
  0x000000010310efec: mov    %ecx,0x8(%rax)
  0x000000010310efef: mov    %ebx,0xc(%rax)
  0x000000010310eff2: sub    $0x10,%rsi
  0x000000010310eff6: je     0x000000010310f00d
  0x000000010310effc: xor    %rbx,%rbx
  0x000000010310efff: shr    $0x3,%rsi
  0x000000010310f003: mov    %rbx,0x8(%rax,%rsi,8)
  0x000000010310f008: dec    %rsi
  0x000000010310f00b: jne    0x000000010310f003  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010310f00d: movabs $0x1170741c0,%rsi  ;   {metadata(method data for {method} {0x0000000116f89d30} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010310f017: addq   $0x1,0x108(%rsi)
  0x000000010310f01f: movabs $0x11703afa0,%rsi  ;   {metadata(method data for {method} {0x0000000116f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010310f029: mov    0xdc(%rsi),%edx
  0x000000010310f02f: add    $0x8,%edx
  0x000000010310f032: mov    %edx,0xdc(%rsi)
  0x000000010310f038: movabs $0x116f64fd8,%rsi  ;   {metadata({method} {0x0000000116f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010310f042: and    $0x7ffff8,%edx
  0x000000010310f048: cmp    $0x0,%edx
  0x000000010310f04b: je     0x000000010310f1bc
  0x000000010310f051: mov    0x78(%rsp),%ebx
  0x000000010310f055: cmp    %r11d,%ebx
  0x000000010310f058: movabs $0x11703afa0,%rsi  ;   {metadata(method data for {method} {0x0000000116f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010310f062: movabs $0x108,%rdx
  0x000000010310f06c: jg     0x000000010310f07c
  0x000000010310f072: movabs $0x118,%rdx
  0x000000010310f07c: mov    (%rsi,%rdx,1),%rcx
  0x000000010310f080: lea    0x1(%rcx),%rcx
  0x000000010310f084: mov    %rcx,(%rsi,%rdx,1)
  0x000000010310f088: jg     0x000000010310f0a3  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010310f08e: movabs $0x11703afa0,%rsi  ;   {metadata(method data for {method} {0x0000000116f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010310f098: incl   0x128(%rsi)
  0x000000010310f09e: jmpq   0x000000010310f0a6  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010310f0a3: mov    %r11,%rbx          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x000000010310f0a6: mov    %r11d,0x98(%rsp)
  0x000000010310f0ae: mov    0x80(%rsp),%rdi
  0x000000010310f0b6: movabs $0x1170741c0,%rsi  ;   {metadata(method data for {method} {0x0000000116f89d30} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x000000010310f0c0: addq   $0x1,0x118(%rsi)
  0x000000010310f0c8: mov    %rdi,%rsi
  0x000000010310f0cb: mov    $0x0,%edx
  0x000000010310f0d0: mov    %rax,%rcx
  0x000000010310f0d3: mov    $0x0,%r8d
  0x000000010310f0d9: mov    %rbx,%r9
  0x000000010310f0dc: mov    %rax,0x90(%rsp)
  0x000000010310f0e4: lea    (%rdx,%r9,1),%rdi
  0x000000010310f0e8: cmp    0xc(%rsi),%edi
  0x000000010310f0eb: ja     0x000000010310f1d3
  0x000000010310f0f1: lea    (%r8,%r9,1),%rdi
  0x000000010310f0f5: cmp    0xc(%rcx),%edi
  0x000000010310f0f8: ja     0x000000010310f1d3
  0x000000010310f0fe: test   %r9d,%r9d
  0x000000010310f101: jl     0x000000010310f1d3
  0x000000010310f107: je     0x000000010310f143
  0x000000010310f10d: movslq %edx,%rdx
  0x000000010310f110: movslq %r8d,%r8
  0x000000010310f113: lea    0x10(%rsi,%rdx,2),%rdi
  0x000000010310f118: lea    0x10(%rcx,%r8,2),%rsi
  0x000000010310f11d: mov    %r9,%rdx
  0x000000010310f120: test   $0xf,%esp
  0x000000010310f126: je     0x000000010310f13e
  0x000000010310f12c: sub    $0x8,%rsp
  0x000000010310f130: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x000000010310f135: add    $0x8,%rsp
  0x000000010310f139: jmpq   0x000000010310f143
  0x000000010310f13e: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000010310f143: mov    0x90(%rsp),%rax
  0x000000010310f14b: mov    0x88(%rsp),%rsi
  0x000000010310f153: mov    %rax,%r10
  0x000000010310f156: shr    $0x3,%r10
  0x000000010310f15a: mov    %r10d,0x10(%rsi)
  0x000000010310f15e: shr    $0x9,%rsi
  0x000000010310f162: movabs $0x10e9c0000,%rdi
  0x000000010310f16c: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x000000010310f170: add    $0xb0,%rsp
  0x000000010310f177: pop    %rbp
  0x000000010310f178: test   %eax,-0xa1a07e(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010310f17e: retq
  0x000000010310f17f: mov    %rdi,0x8(%rsp)
  0x000000010310f184: movq   $0xffffffffffffffff,(%rsp)
  0x000000010310f18c: callq  0x00000001030fe020  ; OopMap{rsi=Oop off=817}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ;   {runtime_call}
  0x000000010310f191: jmpq   0x000000010310eec5
  0x000000010310f196: callq  0x000000010306db40  ; OopMap{rsi=Oop rdi=Oop [128]=Oop off=827}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x000000010310f19b: mov    %rbx,0x8(%rsp)
  0x000000010310f1a0: movq   $0xffffffffffffffff,(%rsp)
  0x000000010310f1a8: callq  0x00000001030fe020  ; OopMap{[136]=Oop [128]=Oop off=845}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000010310f1ad: jmpq   0x000000010310ef90
  0x000000010310f1b2: callq  0x000000010306c8a0  ; OopMap{[136]=Oop [128]=Oop off=855}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000010310f1b7: jmpq   0x000000010310f00d
  0x000000010310f1bc: mov    %rsi,0x8(%rsp)
  0x000000010310f1c1: movq   $0xffffffffffffffff,(%rsp)
  0x000000010310f1c9: callq  0x00000001030fe020  ; OopMap{[136]=Oop [128]=Oop rax=Oop off=878}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x000000010310f1ce: jmpq   0x000000010310f051
  0x000000010310f1d3: nop
  0x000000010310f1d4: nop
  0x000000010310f1d5: nop
  0x000000010310f1d6: nop
  0x000000010310f1d7: callq  0x0000000103046420  ; OopMap{[136]=Oop [128]=Oop [144]=Oop off=892}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {static_call}
  0x000000010310f1dc: jmpq   0x000000010310f143
  0x000000010310f1e1: nop
  0x000000010310f1e2: nop
  0x000000010310f1e3: mov    0x2a8(%r15),%rax
  0x000000010310f1ea: movabs $0x0,%r10
  0x000000010310f1f4: mov    %r10,0x2a8(%r15)
  0x000000010310f1fb: movabs $0x0,%r10
  0x000000010310f205: mov    %r10,0x2b0(%r15)
  0x000000010310f20c: add    $0xb0,%rsp
  0x000000010310f213: pop    %rbp
  0x000000010310f214: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x000000010310f219: hlt
  0x000000010310f21a: hlt
  0x000000010310f21b: hlt
  0x000000010310f21c: hlt
  0x000000010310f21d: hlt
  0x000000010310f21e: hlt
  0x000000010310f21f: hlt
[Stub Code]
  0x000000010310f220: nop                       ;   {no_reloc}
  0x000000010310f221: nop
  0x000000010310f222: nop
  0x000000010310f223: nop
  0x000000010310f224: nop
  0x000000010310f225: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010310f22f: jmpq   0x000000010310f22f  ;   {runtime_call}
  0x000000010310f234: nop
  0x000000010310f235: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010310f23f: jmpq   0x000000010310f23f  ;   {runtime_call}
[Exception Handler]
  0x000000010310f244: callq  0x00000001030fb9a0  ;   {runtime_call}
  0x000000010310f249: mov    %rsp,-0x28(%rsp)
  0x000000010310f24e: sub    $0x80,%rsp
  0x000000010310f255: mov    %rax,0x78(%rsp)
  0x000000010310f25a: mov    %rcx,0x70(%rsp)
  0x000000010310f25f: mov    %rdx,0x68(%rsp)
  0x000000010310f264: mov    %rbx,0x60(%rsp)
  0x000000010310f269: mov    %rbp,0x50(%rsp)
  0x000000010310f26e: mov    %rsi,0x48(%rsp)
  0x000000010310f273: mov    %rdi,0x40(%rsp)
  0x000000010310f278: mov    %r8,0x38(%rsp)
  0x000000010310f27d: mov    %r9,0x30(%rsp)
  0x000000010310f282: mov    %r10,0x28(%rsp)
  0x000000010310f287: mov    %r11,0x20(%rsp)
  0x000000010310f28c: mov    %r12,0x18(%rsp)
  0x000000010310f291: mov    %r13,0x10(%rsp)
  0x000000010310f296: mov    %r14,0x8(%rsp)
  0x000000010310f29b: mov    %r15,(%rsp)
  0x000000010310f29f: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x000000010310f2a9: movabs $0x10310f249,%rsi  ;   {internal_word}
  0x000000010310f2b3: mov    %rsp,%rdx
  0x000000010310f2b6: and    $0xfffffffffffffff0,%rsp
  0x000000010310f2ba: callq  0x0000000101b0f196  ;   {runtime_call}
  0x000000010310f2bf: hlt
[Deopt Handler Code]
  0x000000010310f2c0: movabs $0x10310f2c0,%r10  ;   {section_word}
  0x000000010310f2ca: push   %r10
  0x000000010310f2cc: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x000000010310f2d1: hlt
  0x000000010310f2d2: hlt
  0x000000010310f2d3: hlt
  0x000000010310f2d4: hlt
  0x000000010310f2d5: hlt
  0x000000010310f2d6: hlt
  0x000000010310f2d7: hlt
Decoding compiled method 0x000000010310e990:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000116e85d48} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System'
  #           [sp+0x40]  (sp of caller)
  0x000000010310eae0: mov    %eax,-0x14000(%rsp)
  0x000000010310eae7: push   %rbp
  0x000000010310eae8: sub    $0x30,%rsp
  0x000000010310eaec: movabs $0x117075540,%rax  ;   {metadata(method data for {method} {0x0000000116e85d48} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x000000010310eaf6: mov    0xdc(%rax),%esi
  0x000000010310eafc: add    $0x8,%esi
  0x000000010310eaff: mov    %esi,0xdc(%rax)
  0x000000010310eb05: movabs $0x116e85d48,%rax  ;   {metadata({method} {0x0000000116e85d48} 'getSecurityManager' '()Ljava/lang/SecurityManager;' in 'java/lang/System')}
  0x000000010310eb0f: and    $0x1ff8,%esi
  0x000000010310eb15: cmp    $0x0,%esi
  0x000000010310eb18: je     0x000000010310eb3b
  0x000000010310eb1e: movabs $0x795580c78,%rax  ;   {oop(a 'java/lang/Class' = 'java/lang/System')}
  0x000000010310eb28: mov    0x74(%rax),%eax
  0x000000010310eb2b: shl    $0x3,%rax          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 334)

  0x000000010310eb2f: add    $0x30,%rsp
  0x000000010310eb33: pop    %rbp
  0x000000010310eb34: test   %eax,-0xa19a3a(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010310eb3a: retq
  0x000000010310eb3b: mov    %rax,0x8(%rsp)
  0x000000010310eb40: movq   $0xffffffffffffffff,(%rsp)
  0x000000010310eb48: callq  0x00000001030fe020  ; OopMap{off=109}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 334)
                                                ;   {runtime_call}
  0x000000010310eb4d: jmp    0x000000010310eb1e
  0x000000010310eb4f: nop
  0x000000010310eb50: nop
  0x000000010310eb51: mov    0x2a8(%r15),%rax
  0x000000010310eb58: movabs $0x0,%r10
  0x000000010310eb62: mov    %r10,0x2a8(%r15)
  0x000000010310eb69: movabs $0x0,%r10
  0x000000010310eb73: mov    %r10,0x2b0(%r15)
  0x000000010310eb7a: add    $0x30,%rsp
  0x000000010310eb7e: pop    %rbp
  0x000000010310eb7f: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x000000010310eb84: hlt
  0x000000010310eb85: hlt
  0x000000010310eb86: hlt
  0x000000010310eb87: hlt
  0x000000010310eb88: hlt
  0x000000010310eb89: hlt
  0x000000010310eb8a: hlt
  0x000000010310eb8b: hlt
  0x000000010310eb8c: hlt
  0x000000010310eb8d: hlt
  0x000000010310eb8e: hlt
  0x000000010310eb8f: hlt
  0x000000010310eb90: hlt
  0x000000010310eb91: hlt
  0x000000010310eb92: hlt
  0x000000010310eb93: hlt
  0x000000010310eb94: hlt
  0x000000010310eb95: hlt
  0x000000010310eb96: hlt
  0x000000010310eb97: hlt
  0x000000010310eb98: hlt
  0x000000010310eb99: hlt
  0x000000010310eb9a: hlt
  0x000000010310eb9b: hlt
  0x000000010310eb9c: hlt
  0x000000010310eb9d: hlt
  0x000000010310eb9e: hlt
  0x000000010310eb9f: hlt
[Exception Handler]
[Stub Code]
  0x000000010310eba0: callq  0x00000001030fb9a0  ;   {no_reloc}
  0x000000010310eba5: mov    %rsp,-0x28(%rsp)
  0x000000010310ebaa: sub    $0x80,%rsp
  0x000000010310ebb1: mov    %rax,0x78(%rsp)
  0x000000010310ebb6: mov    %rcx,0x70(%rsp)
  0x000000010310ebbb: mov    %rdx,0x68(%rsp)
  0x000000010310ebc0: mov    %rbx,0x60(%rsp)
  0x000000010310ebc5: mov    %rbp,0x50(%rsp)
  0x000000010310ebca: mov    %rsi,0x48(%rsp)
  0x000000010310ebcf: mov    %rdi,0x40(%rsp)
  0x000000010310ebd4: mov    %r8,0x38(%rsp)
  0x000000010310ebd9: mov    %r9,0x30(%rsp)
  0x000000010310ebde: mov    %r10,0x28(%rsp)
  0x000000010310ebe3: mov    %r11,0x20(%rsp)
  0x000000010310ebe8: mov    %r12,0x18(%rsp)
  0x000000010310ebed: mov    %r13,0x10(%rsp)
  0x000000010310ebf2: mov    %r14,0x8(%rsp)
  0x000000010310ebf7: mov    %r15,(%rsp)
  0x000000010310ebfb: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x000000010310ec05: movabs $0x10310eba5,%rsi  ;   {internal_word}
  0x000000010310ec0f: mov    %rsp,%rdx
  0x000000010310ec12: and    $0xfffffffffffffff0,%rsp
  0x000000010310ec16: callq  0x0000000101b0f196  ;   {runtime_call}
  0x000000010310ec1b: hlt
[Deopt Handler Code]
  0x000000010310ec1c: movabs $0x10310ec1c,%r10  ;   {section_word}
  0x000000010310ec26: push   %r10
  0x000000010310ec28: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x000000010310ec2d: hlt
  0x000000010310ec2e: hlt
  0x000000010310ec2f: hlt
Decoding compiled method 0x000000010310e690:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000116ef2de8} 'getPath' '()Ljava/lang/String;' in 'java/io/File'
  #           [sp+0x40]  (sp of caller)
  0x000000010310e7e0: mov    0x8(%rsi),%r10d
  0x000000010310e7e4: shl    $0x3,%r10
  0x000000010310e7e8: cmp    %rax,%r10
  0x000000010310e7eb: jne    0x0000000103045e20  ;   {runtime_call}
  0x000000010310e7f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010310e7fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010310e800: mov    %eax,-0x14000(%rsp)
  0x000000010310e807: push   %rbp
  0x000000010310e808: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.io.File::getPath@0 (line 512)

  0x000000010310e80c: mov    0x10(%rsi),%eax
  0x000000010310e80f: shl    $0x3,%rax          ;*getfield path
                                                ; - java.io.File::getPath@1 (line 512)

  0x000000010310e813: add    $0x30,%rsp
  0x000000010310e817: pop    %rbp
  0x000000010310e818: test   %eax,-0xa1971e(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010310e81e: retq
  0x000000010310e81f: nop
  0x000000010310e820: nop
  0x000000010310e821: mov    0x2a8(%r15),%rax
  0x000000010310e828: movabs $0x0,%r10
  0x000000010310e832: mov    %r10,0x2a8(%r15)
  0x000000010310e839: movabs $0x0,%r10
  0x000000010310e843: mov    %r10,0x2b0(%r15)
  0x000000010310e84a: add    $0x30,%rsp
  0x000000010310e84e: pop    %rbp
  0x000000010310e84f: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x000000010310e854: hlt
  0x000000010310e855: hlt
  0x000000010310e856: hlt
  0x000000010310e857: hlt
  0x000000010310e858: hlt
  0x000000010310e859: hlt
  0x000000010310e85a: hlt
  0x000000010310e85b: hlt
  0x000000010310e85c: hlt
  0x000000010310e85d: hlt
  0x000000010310e85e: hlt
  0x000000010310e85f: hlt
[Exception Handler]
[Stub Code]
  0x000000010310e860: callq  0x00000001030fb9a0  ;   {no_reloc}
  0x000000010310e865: mov    %rsp,-0x28(%rsp)
  0x000000010310e86a: sub    $0x80,%rsp
  0x000000010310e871: mov    %rax,0x78(%rsp)
  0x000000010310e876: mov    %rcx,0x70(%rsp)
  0x000000010310e87b: mov    %rdx,0x68(%rsp)
  0x000000010310e880: mov    %rbx,0x60(%rsp)
  0x000000010310e885: mov    %rbp,0x50(%rsp)
  0x000000010310e88a: mov    %rsi,0x48(%rsp)
  0x000000010310e88f: mov    %rdi,0x40(%rsp)
  0x000000010310e894: mov    %r8,0x38(%rsp)
  0x000000010310e899: mov    %r9,0x30(%rsp)
  0x000000010310e89e: mov    %r10,0x28(%rsp)
  0x000000010310e8a3: mov    %r11,0x20(%rsp)
  0x000000010310e8a8: mov    %r12,0x18(%rsp)
  0x000000010310e8ad: mov    %r13,0x10(%rsp)
  0x000000010310e8b2: mov    %r14,0x8(%rsp)
  0x000000010310e8b7: mov    %r15,(%rsp)
  0x000000010310e8bb: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x000000010310e8c5: movabs $0x10310e865,%rsi  ;   {internal_word}
  0x000000010310e8cf: mov    %rsp,%rdx
  0x000000010310e8d2: and    $0xfffffffffffffff0,%rsp
  0x000000010310e8d6: callq  0x0000000101b0f196  ;   {runtime_call}
  0x000000010310e8db: hlt
[Deopt Handler Code]
  0x000000010310e8dc: movabs $0x10310e8dc,%r10  ;   {section_word}
  0x000000010310e8e6: push   %r10
  0x000000010310e8e8: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x000000010310e8ed: hlt
  0x000000010310e8ee: hlt
  0x000000010310e8ef: hlt
[Loaded java.util.jar.JarFile from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JavaUtilJarAccess from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JavaUtilJarAccessImpl from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.charset.StandardCharsets from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.US_ASCII from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.ISO_8859_1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x000000010310dc50:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000116e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   [Loaded sun.nio.cs.UTF_16BE from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
= 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000000010310dde0: mov    0x8(%rsi),%r10d
  0x000000010310dde4: shl    $0x3,%r10
  0x000000010310dde8: cmp    %rax,%r10
  0x000000010310ddeb: jne    0x0000000103045e20  ;   {runtime_call}
  0x000000010310ddf1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010310ddfc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010310de00: mov    %eax,-0x14000(%rsp)
  0x000000010310de07: push   %rbp
  0x000000010310de08: sub    $0x30,%rsp
  0x000000010310de0c: movabs $0x11707a878,%rax  ;   {metadata(method data for {method} {0x0000000116e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010310de16: mov    0xdc(%rax),%edi
  0x000000010310de1c: add    $0x8,%edi
  0x000000010310de1f: mov    %edi,0xdc(%rax)
  0x000000010310de25: movabs $0x116e706b0,%rax  ;   {metadata({method} {0x0000000116e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010310de2f: and    $0x1ff8,%edi
  0x000000010310de35: cmp    $0x0,%edi
  0x000000010310de38: je     0x000000010310e219  ;*aload_0
                                                ; - java.lang.String::equals@0 (line 977)

  0x000000010310de3e: cmp    %rdx,%rsi
  0x000000010310de41: movabs $0x11707a878,%rax  ;   {metadata(method data for {method} {0x0000000116e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010310de4b: movabs $0x108,%rdi
  0x000000010310de55: jne    0x000000010310de65
  0x000000010310de5b: movabs $0x118,%rdi
  0x000000010310de65: mov    (%rax,%rdi,1),%rbx
  0x000000010310de69: lea    0x1(%rbx),%rbx
  0x000000010310de6d: mov    %rbx,(%rax,%rdi,1)
  0x000000010310de71: je     0x000000010310e208  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x000000010310de77: cmp    $0x0,%rdx
  0x000000010310de7b: jne    0x000000010310de96
  0x000000010310de7d: movabs $0x11707a878,%rbx  ;   {metadata(method data for {method} {0x0000000116e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010310de87: orl    $0x100,0x120(%rbx)
  0x000000010310de91: jmpq   0x000000010310df56
  0x000000010310de96: movabs $0x7c00016d0,%rcx  ;   {metadata('java/lang/String')}
  0x000000010310dea0: mov    0x8(%rdx),%edi
  0x000000010310dea3: shl    $0x3,%rdi
  0x000000010310dea7: cmp    %rdi,%rcx
  0x000000010310deaa: jne    0x000000010310df3a
  0x000000010310deb0: movabs $0x11707a878,%rbx  ;   {metadata(method data for {method} {0x0000000116e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010310deba: mov    0x8(%rdx),%ecx
  0x000000010310debd: shl    $0x3,%rcx
  0x000000010310dec1: cmp    0x130(%rbx),%rcx
  0x000000010310dec8: jne    0x000000010310ded7
  0x000000010310deca: addq   $0x1,0x138(%rbx)
  0x000000010310ded2: jmpq   0x000000010310df5b
  0x000000010310ded7: cmp    0x140(%rbx),%rcx
  0x000000010310dede: jne    0x000000010310deed
  0x000000010310dee0: addq   $0x1,0x148(%rbx)
  0x000000010310dee8: jmpq   0x000000010310df5b
  0x000000010310deed: cmpq   $0x0,0x130(%rbx)
  0x000000010310def8: jne    0x000000010310df11
  0x000000010310defa: mov    %rcx,0x130(%rbx)
  0x000000010310df01: movq   $0x1,0x138(%rbx)
  0x000000010310df0c: jmpq   0x000000010310df5b
  0x000000010310df11: cmpq   $0x0,0x140(%rbx)
  0x000000010310df1c: jne    0x000000010310df35
  0x000000010310df1e: mov    %rcx,0x140(%rbx)
  0x000000010310df25: movq   $0x1,0x148(%rbx)
  0x000000010310df30: jmpq   0x000000010310df5b
  0x000000010310df35: jmpq   0x000000010310df5b
  0x000000010310df3a: movabs $0x11707a878,%rbx  ;   {metadata(method data for {method} {0x0000000116e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010310df44: subq   $0x1,0x128(%rbx)
  0x000000010310df4c: jmpq   0x000000010310df56
  0x000000010310df51: jmpq   0x000000010310df5b
  0x000000010310df56: xor    %rax,%rax
  0x000000010310df59: jmp    0x000000010310df65
  0x000000010310df5b: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x000000010310df65: cmp    $0x0,%eax
  0x000000010310df68: movabs $0x11707a878,%rax  ;   {metadata(method data for {method} {0x0000000116e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010310df72: movabs $0x158,%rdi
  0x000000010310df7c: je     0x000000010310df8c
  0x000000010310df82: movabs $0x168,%rdi
  0x000000010310df8c: mov    (%rax,%rdi,1),%rbx
  0x000000010310df90: lea    0x1(%rbx),%rbx
  0x000000010310df94: mov    %rbx,(%rax,%rdi,1)
  0x000000010310df98: je     0x000000010310e1f7  ;*ifeq
                                                ; - java.lang.String::equals@11 (line 980)

  0x000000010310df9e: cmp    $0x0,%rdx
  0x000000010310dfa2: jne    0x000000010310dfbd
  0x000000010310dfa4: movabs $0x11707a878,%rbx  ;   {metadata(method data for {method} {0x0000000116e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010310dfae: orl    $0x100,0x170(%rbx)
  0x000000010310dfb8: jmpq   0x000000010310e07d
  0x000000010310dfbd: movabs $0x7c00016d0,%rcx  ;   {metadata('java/lang/String')}
  0x000000010310dfc7: mov    0x8(%rdx),%edi
  0x000000010310dfca: shl    $0x3,%rdi
  0x000000010310dfce: cmp    %rdi,%rcx
  0x000000010310dfd1: jne    0x000000010310e061
  0x000000010310dfd7: movabs $0x11707a878,%rbx  ;   {metadata(method data for {method} {0x0000000116e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010310dfe1: mov    0x8(%rdx),%ecx
  0x000000010310dfe4: shl    $0x3,%rcx
  0x000000010310dfe8: cmp    0x180(%rbx),%rcx
  0x000000010310dfef: jne    0x000000010310dffe
  0x000000010310dff1: addq   $0x1,0x188(%rbx)
  0x000000010310dff9: jmpq   0x000000010310e07d
  0x000000010310dffe: cmp    0x190(%rbx),%rcx
  0x000000010310e005: jne    0x000000010310e014
  0x000000010310e007: addq   $0x1,0x198(%rbx)
  0x000000010310e00f: jmpq   0x000000010310e07d
  0x000000010310e014: cmpq   $0x0,0x180(%rbx)
  0x000000010310e01f: jne    0x000000010310e038
  0x000000010310e021: mov    %rcx,0x180(%rbx)
  0x000000010310e028: movq   $0x1,0x188(%rbx)
  0x000000010310e033: jmpq   0x000000010310e07d
  0x000000010310e038: cmpq   $0x0,0x190(%rbx)
  0x000000010310e043: jne    0x000000010310e05c
  0x000000010310e045: mov    %rcx,0x190(%rbx)
  0x000000010310e04c: movq   $0x1,0x198(%rbx)
  0x000000010310e057: jmpq   0x000000010310e07d
  0x000000010310e05c: jmpq   0x000000010310e07d
  0x000000010310e061: movabs $0x11707a878,%rbx  ;   {metadata(method data for {method} {0x0000000116e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010310e06b: subq   $0x1,0x178(%rbx)
  0x000000010310e073: jmpq   0x000000010310e230
  0x000000010310e078: jmpq   0x000000010310e07d
  0x000000010310e07d: mov    %rdx,%rax          ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)

  0x000000010310e080: mov    0xc(%rsi),%edi
  0x000000010310e083: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x000000010310e087: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ; implicit exception: dispatches to 0x000000010310e239
  0x000000010310e08a: mov    0xc(%rax),%ecx     ; implicit exception: dispatches to 0x000000010310e23e
  0x000000010310e08d: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x000000010310e091: mov    0xc(%rcx),%r8d     ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x000000010310e243
  0x000000010310e095: cmp    %r8d,%ebx
  0x000000010310e098: movabs $0x11707a878,%r8   ;   {metadata(method data for {method} {0x0000000116e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010310e0a2: movabs $0x1a8,%r9
  0x000000010310e0ac: jne    0x000000010310e0bc
  0x000000010310e0b2: movabs $0x1b8,%r9
  0x000000010310e0bc: mov    (%r8,%r9,1),%r11
  0x000000010310e0c0: lea    0x1(%r11),%r11
  0x000000010310e0c4: mov    %r11,(%r8,%r9,1)
  0x000000010310e0c8: jne    0x000000010310e1f7  ;*if_icmpne
                                                ; - java.lang.String::equals@31 (line 983)

  0x000000010310e0ce: mov    $0x0,%r8d
  0x000000010310e0d4: jmpq   0x000000010310e191  ;*iload_3
                                                ; - java.lang.String::equals@49 (line 987)

  0x000000010310e0d9: nopl   0x0(%rax)
  0x000000010310e0e0: movslq %r8d,%rbx
  0x000000010310e0e3: cmp    0xc(%rdi),%r8d
  0x000000010310e0e7: jae    0x000000010310e248
  0x000000010310e0ed: movzwl 0x10(%rdi,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x000000010310e0f2: movslq %r8d,%r11
  0x000000010310e0f5: cmp    0xc(%rcx),%r8d
  0x000000010310e0f9: jae    0x000000010310e251
  0x000000010310e0ff: movzwl 0x10(%rcx,%r11,2),%r11d  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x000000010310e105: cmp    %r11d,%ebx
  0x000000010310e108: movabs $0x11707a878,%rbx  ;   {metadata(method data for {method} {0x0000000116e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010310e112: movabs $0x1e8,%r11
  0x000000010310e11c: je     0x000000010310e12c
  0x000000010310e122: movabs $0x1f8,%r11
  0x000000010310e12c: mov    (%rbx,%r11,1),%r13
  0x000000010310e130: lea    0x1(%r13),%r13
  0x000000010310e134: mov    %r13,(%rbx,%r11,1)
  0x000000010310e138: jne    0x000000010310e1d5  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x000000010310e13e: inc    %r8d
  0x000000010310e141: movabs $0x11707a878,%rbx  ;   {metadata(method data for {method} {0x0000000116e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010310e14b: mov    0xe0(%rbx),%r11d
  0x000000010310e152: add    $0x8,%r11d
  0x000000010310e156: mov    %r11d,0xe0(%rbx)
  0x000000010310e15d: movabs $0x116e706b0,%rbx  ;   {metadata({method} {0x0000000116e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010310e167: and    $0xfff8,%r11d
  0x000000010310e16e: cmp    $0x0,%r11d
  0x000000010310e172: je     0x000000010310e25a  ; OopMap{rcx=Oop rdi=Oop rax=Oop rsi=Oop rdx=Oop off=920}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x000000010310e178: test   %eax,-0xa1907e(%rip)        # 0x00000001026f5100
                                                ;   {poll}
  0x000000010310e17e: movabs $0x11707a878,%rbx  ;   {metadata(method data for {method} {0x0000000116e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010310e188: incl   0x208(%rbx)
  0x000000010310e18e: mov    %r9,%rbx           ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x000000010310e191: mov    %rbx,%r9
  0x000000010310e194: dec    %r9d
  0x000000010310e197: cmp    $0x0,%ebx
  0x000000010310e19a: movabs $0x11707a878,%rbx  ;   {metadata(method data for {method} {0x0000000116e706b0} 'equals' '(Ljava/lang/Object;)Z' in 'java/lang/String')}
  0x000000010310e1a4: movabs $0x1c8,%r11
  0x000000010310e1ae: je     0x000000010310e1be
  0x000000010310e1b4: movabs $0x1d8,%r11
  0x000000010310e1be: mov    (%rbx,%r11,1),%r13
  0x000000010310e1c2: lea    0x1(%r13),%r13
  0x000000010310e1c6: mov    %r13,(%rbx,%r11,1)
  0x000000010310e1ca: je     0x000000010310e1e6
  0x000000010310e1d0: jmpq   0x000000010310e0e0  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x000000010310e1d5: mov    $0x0,%eax
  0x000000010310e1da: add    $0x30,%rsp
  0x000000010310e1de: pop    %rbp
  0x000000010310e1df: test   %eax,-0xa190e5(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010310e1e5: retq                      ;*ireturn
                                                ; - java.lang.String::equals@70 (line 989)

  0x000000010310e1e6: mov    $0x1,%eax
  0x000000010310e1eb: add    $0x30,%rsp
  0x000000010310e1ef: pop    %rbp
  0x000000010310e1f0: test   %eax,-0xa190f6(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010310e1f6: retq                      ;*ireturn
                                                ; - java.lang.String::equals@78 (line 992)

  0x000000010310e1f7: mov    $0x0,%eax
  0x000000010310e1fc: add    $0x30,%rsp
  0x000000010310e200: pop    %rbp
  0x000000010310e201: test   %eax,-0xa19107(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010310e207: retq                      ;*ireturn
                                                ; - java.lang.String::equals@80 (line 995)

  0x000000010310e208: mov    $0x1,%eax
  0x000000010310e20d: add    $0x30,%rsp
  0x000000010310e211: pop    %rbp
  0x000000010310e212: test   %eax,-0xa19118(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010310e218: retq
  0x000000010310e219: mov    %rax,0x8(%rsp)
  0x000000010310e21e: movq   $0xffffffffffffffff,(%rsp)
  0x000000010310e226: callq  0x00000001030fe020  ; OopMap{rsi=Oop rdx=Oop off=1099}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)
                                                ;   {runtime_call}
  0x000000010310e22b: jmpq   0x000000010310de3e
  0x000000010310e230: mov    %rdx,(%rsp)
  0x000000010310e234: callq  0x00000001030fbd00  ; OopMap{rdx=Oop rsi=Oop off=1113}
                                                ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ;   {runtime_call}
  0x000000010310e239: callq  0x000000010306db40  ; OopMap{rdx=Oop rsi=Oop rax=Oop rdi=Oop off=1118}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x000000010310e23e: callq  0x000000010306db40  ; OopMap{rdx=Oop rsi=Oop rax=Oop rdi=Oop off=1123}
                                                ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)
                                                ;   {runtime_call}
  0x000000010310e243: callq  0x000000010306db40  ; OopMap{rdx=Oop rsi=Oop rax=Oop rdi=Oop rcx=Oop off=1128}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x000000010310e248: mov    %r8,(%rsp)
  0x000000010310e24c: callq  0x000000010306e200  ; OopMap{rcx=Oop rdi=Oop rax=Oop rsi=Oop rdx=Oop off=1137}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x000000010310e251: mov    %r8,(%rsp)
  0x000000010310e255: callq  0x000000010306e200  ; OopMap{rcx=Oop rdi=Oop rax=Oop rsi=Oop rdx=Oop off=1146}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x000000010310e25a: mov    %rbx,0x8(%rsp)
  0x000000010310e25f: movq   $0x4a,(%rsp)
  0x000000010310e267: callq  0x00000001030fe020  ; OopMap{rcx=Oop rdi=Oop rax=Oop rsi=Oop rdx=Oop off=1164}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)
                                                ;   {runtime_call}
  0x000000010310e26c: jmpq   0x000000010310e178
  0x000000010310e271: nop
  0x000000010310e272: nop
  0x000000010310e273: mov    0x2a8(%r15),%rax
  0x000000010310e27a: movabs $0x0,%r10
  0x000000010310e284: mov    %r10,0x2a8(%r15)
  0x000000010310e28b: movabs $0x0,%r10
  0x000000010310e295: mov    %r10,0x2b0(%r15)
  0x000000010310e29c: add    $0x30,%rsp
  0x000000010310e2a0: pop    %rbp
  0x000000010310e2a1: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x000000010310e2a6: hlt
  0x000000010310e2a7: hlt
  0x000000010310e2a8: hlt
  0x000000010310e2a9: hlt
  0x000000010310e2aa: hlt
  0x000000010310e2ab: hlt
  0x000000010310e2ac: hlt
  0x000000010310e2ad: hlt
  0x000000010310e2ae: hlt
  0x000000010310e2af: hlt
  0x000000010310e2b0: hlt
  0x000000010310e2b1: hlt
  0x000000010310e2b2: hlt
  0x000000010310e2b3: hlt
  0x000000010310e2b4: hlt
  0x000000010310e2b5: hlt
  0x000000010310e2b6: hlt
  0x000000010310e2b7: hlt
  0x000000010310e2b8: hlt
  0x000000010310e2b9: hlt
  0x000000010310e2ba: hlt
  0x000000010310e2bb: hlt
  0x000000010310e2bc: hlt
  0x000000010310e2bd: hlt
  0x000000010310e2be: hlt
  0x000000010310e2bf: hlt
[Exception Handler]
[Stub Code]
  0x000000010310e2c0: callq  0x00000001030fb9a0  ;   {no_reloc}
  0x000000010310e2c5: mov    %rsp,-0x28(%rsp)
  0x000000010310e2ca: sub    $0x80,%rsp
  0x000000010310e2d1: mov    %rax,0x78(%rsp)
  0x000000010310e2d6: mov    %rcx,0x70(%rsp)
  0x000000010310e2db: mov    %rdx,0x68(%rsp)
  0x000000010310e2e0: mov    %rbx,0x60(%rsp)
  0x000000010310e2e5: mov    %rbp,0x50(%rsp)
  0x000000010310e2ea: mov    %rsi,0x48(%rsp)
  0x000000010310e2ef: mov    %rdi,0x40(%rsp)
  0x000000010310e2f4: mov    %r8,0x38(%rsp)
  0x000000010310e2f9: mov    %r9,0x30(%rsp)
  0x000000010310e2fe: mov    %r10,0x28(%rsp)
  0x000000010310e303: mov    %r11,0x20(%rsp)
  0x000000010310e308: mov    %r12,0x18(%rsp)
  0x000000010310e30d: mov    %r13,0x10(%rsp)
  0x000000010310e312: mov    %r14,0x8(%rsp)
  0x000000010310e317: mov    %r15,(%rsp)
  0x000000010310e31b: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x000000010310e325: movabs $0x10310e2c5,%rsi  ;   {internal_word}
  0x000000010310e32f: mov    %rsp,%rdx
  0x000000010310e332: and    $0xfffffffffffffff0,%rsp
  0x000000010310e336: callq  0x0000000101b0f196  ;   {runtime_call}
  0x000000010310e33b: hlt
[Deopt Handler Code]
  0x000000010310e33c: movabs $0x10310e33c,%r10  ;   {section_word}
  0x000000010310e346: push   %r10
  0x000000010310e348: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x000000010310e34d: hlt
  0x000000010310e34e: hlt
  0x000000010310e34f: hlt
[Loaded sun.nio.cs.UTF_16LE from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.cs.UTF_16 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Queue from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.Deque from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.ArrayDeque from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipCoder from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x000000010310d810:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000116e71130} 'indexOf' '(I)I' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x000000010310d980: mov    0x8(%rsi),%r10d
  0x000000010310d984: shl    $0x3,%r10
  0x000000010310d988: cmp    %rax,%r10
  0x000000010310d98b: jne    0x0000000103045e20  ;   {runtime_call}
  0x000000010310d991: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010310d99c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010310d9a0: mov    %eax,-0x14000(%rsp)
  0x000000010310d9a7: push   %rbp
  0x000000010310d9a8: sub    $0x40,%rsp
  0x000000010310d9ac: movabs $0x117083f68,%rcx  ;   {metadata(method data for {method} {0x0000000116e71130} 'indexOf' '(I)I' in 'java/lang/String')}
  0x000000010310d9b6: mov    0xdc(%rcx),%edi
  0x000000010310d9bc: add    $0x8,%edi
  0x000000010310d9bf: mov    %edi,0xdc(%rcx)
  0x000000010310d9c5: movabs $0x116e71130,%rcx  ;   {metadata({method} {0x0000000116e71130} 'indexOf' '(I)I' in 'java/lang/String')}
  0x000000010310d9cf: and    $0x1ff8,%edi
  0x000000010310d9d5: cmp    $0x0,%edi
  0x000000010310d9d8: je     0x000000010310daa0  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1503)

  0x000000010310d9de: mov    %rsi,%rcx
  0x000000010310d9e1: movabs $0x117083f68,%rdi  ;   {metadata(method data for {method} {0x0000000116e71130} 'indexOf' '(I)I' in 'java/lang/String')}
  0x000000010310d9eb: mov    0x8(%rcx),%ecx
  0x000000010310d9ee: shl    $0x3,%rcx
  0x000000010310d9f2: cmp    0x110(%rdi),%rcx
  0x000000010310d9f9: jne    0x000000010310da08
  0x000000010310d9fb: addq   $0x1,0x118(%rdi)
  0x000000010310da03: jmpq   0x000000010310da6e
  0x000000010310da08: cmp    0x120(%rdi),%rcx
  0x000000010310da0f: jne    0x000000010310da1e
  0x000000010310da11: addq   $0x1,0x128(%rdi)
  0x000000010310da19: jmpq   0x000000010310da6e
  0x000000010310da1e: cmpq   $0x0,0x110(%rdi)
  0x000000010310da29: jne    [Loaded sun.misc.PerfCounter from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
0x000000010310da42
  0x000000010310da2b: mov    %rcx,0x110(%rdi)
  0x000000010310da32: movq   $0x1,0x118(%rdi)
  0x000000010310da3d: jmpq   0x000000010310da6e
  0x000000010310da42: cmpq   $0x0,0x120(%rdi)
  0x000000010310da4d: jne    0x000000010310da66
  0x000000010310da4f: mov    %rcx,0x120(%rdi)
  0x000000010310da56: movq   $0x1,0x128(%rdi)
  0x000000010310da61: jmpq   0x000000010310da6e
  0x000000010310da66: addq   $0x1,0x108(%rdi)
  0x000000010310da6e: mov    %rdx,%rdi
  0x000000010310da71: mov    %rdi,%rdx
  0x000000010310da74: mov    $0x0,%ecx
  0x000000010310da79: mov    %rsi,%rbx
  0x000000010310da7c: mov    %rbx,%rsi          ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)

  0x000000010310da7f: mov    %edi,0x28(%rsp)
  0x000000010310da83: mov    %rbx,0x20(%rsp)
  0x000000010310da88: nop
  0x000000010310da89: nop
  0x000000010310da8a: nop
  0x000000010310da8b: nop
  0x000000010310da8c: nop
  0x000000010310da8d: nop
  0x000000010310da8e: nop
  0x000000010310da8f: callq  0x0000000103046020  ; OopMap{[32]=Oop off=276}
                                                ;*invokevirtual indexOf
                                                ; - java.lang.String::indexOf@3 (line 1503)
                                                ;   {optimized virtual_call}
  0x000000010310da94: add    $0x40,%rsp
  0x000000010310da98: pop    %rbp
  0x000000010310da99: test   %eax,-0xa1899f(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010310da9f: retq
  0x000000010310daa0: mov    %rcx,0x8(%rsp)
  0x000000010310daa5: movq   $0xffffffffffffffff,(%rsp)
  0x000000010310daad: callq  0x00000001030fe020  ; OopMap{rsi=Oop off=306}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1503)
                                                ;   {runtime_call}
  0x000000010310dab2: jmpq   0x000000010310d9de
  0x000000010310dab7: nop
  0x000000010310dab8: nop
  0x000000010310dab9: mov    0x2a8(%r15),%rax
  0x000000010310dac0: movabs $0x0,%r10
  0x000000010310daca: mov    %r10,0x2a8(%r15)
  0x000000010310dad1: movabs $0x0,%r10
  0x000000010310dadb: mov    %r10,0x2b0(%r15)
  0x000000010310dae2: add    $0x40,%rsp
  0x000000010310dae6: pop    %rbp
  0x000000010310dae7: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x000000010310daec: hlt
  0x000000010310daed: hlt
  0x000000010310daee: hlt
  0x000000010310daef: hlt
  0x000000010310daf0: hlt
  0x000000010310daf1: hlt
  0x000000010310daf2: hlt
  0x000000010310daf3: hlt
  0x000000010310daf4: hlt
  0x000000010310daf5: hlt
  0x000000010310daf6: hlt
  0x000000010310daf7: hlt
  0x000000010310daf8: hlt
  0x000000010310daf9: hlt
  0x000000010310dafa: hlt
  0x000000010310dafb: hlt
  0x000000010310dafc: hlt
  0x000000010310dafd: hlt
  0x000000010310dafe: hlt
  0x000000010310daff: hlt
[Stub Code]
  0x000000010310db00: nop                       ;   {no_reloc}
  0x000000010310db01: nop
  0x000000010310db02: nop
  0x000000010310db03: nop
  0x000000010310db04: nop
  0x000000010310db05: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010310db0f: jmpq   0x000000010310db0f  ;   {runtime_call}
[Exception Handler]
  0x000000010310db14: callq  0x00000001030fb9a0  ;   {runtime_call}
  0x000000010310db19: mov    %rsp,-0x28(%rsp)
  0x000000010310db1e: sub    $0x80,%rsp
  0x000000010310db25: mov    %rax,0x78(%rsp)
  0x000000010310db2a: mov    %rcx,0x70(%rsp)
  0x000000010310db2f: mov    %rdx,0x68(%rsp)
  0x000000010310db34: mov    %rbx,0x60(%rsp)
  0x000000010310db39: mov    %rbp,0x50(%rsp)
  0x000000010310db3e: mov    %rsi,0x48(%rsp)
  0x000000010310db43: mov    %rdi,0x40(%rsp)
  0x000000010310db48: mov    %r8,0x38(%rsp)
  0x000000010310db4d: mov    %r9,0x30(%rsp)
  0x000000010310db52: mov    %r10,0x28(%rsp)
  0x000000010310db57: mov    %r11,0x20(%rsp)
  0x000000010310db5c: mov    %r12,0x18(%rsp)
  0x000000010310db61: mov    %r13,0x10(%rsp)
  0x000000010310db66: mov    %r14,0x8(%rsp)
  0x000000010310db6b: mov    %r15,(%rsp)
  0x000000010310db6f: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x000000010310db79: movabs $0x10310db19,%rsi  ;   {internal_word}
  0x000000010310db83: mov    %rsp,%rdx
  0x000000010310db86: and    $0xfffffffffffffff0,%rsp
  0x000000010310db8a: callq  0x0000000101b0f196  ;   {runtime_call}
  0x000000010310db8f: hlt
[Deopt Handler Code]
  0x000000010310db90: movabs $0x10310db90,%r10  ;   {section_word}
  0x000000010310db9a: push   %r10
  0x000000010310db9c: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x000000010310dba1: hlt
  0x000000010310dba2: hlt
  0x000000010310dba3: hlt
  0x000000010310dba4: hlt
  0x000000010310dba5: hlt
  0x000000010310dba6: hlt
  0x000000010310dba7: hlt
[Loaded sun.misc.Perf$GetPerfAction from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.Perf from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.PerfCounter$CoreCounters from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.nio.ch.DirectBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.MappedByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.DirectByteBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.LongBuffer from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.nio.DirectLongBufferU from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.misc.JarIndex from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JarEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.jar.JarFile$JarFileEntry from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile$ZipFileInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.Inflater from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZStreamRef from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.InflaterInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.zip.ZipFile$ZipFileInflaterInputStream from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.AbstractSequentialList from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedList from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.util.LinkedList$Node from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x000000010310f990:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000116f097a0} 'toLowerCase' '(C)C' in 'java/lang/C[Loaded sun.misc.ExtensionDependency from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
haracter'
  # parm0:    rsi       = char
  #           [sp+0x50]  (sp of caller)
  0x000000010310fb20: mov    %eax,-0x14000(%rsp)
  0x000000010310fb27: push   %rbp
  0x000000010310fb28: sub    $0x40,%rsp
  0x000000010310fb2c: movabs $0x1170a29b0,%rdi  ;   {metadata(method data for {method} {0x0000000116f097a0} 'toLowerCase' '(C)C' in 'java/lang/Character')}
  0x000000010310fb36: mov    0xdc(%rdi),%ebx
  0x000000010310fb3c: add    $0x8,%ebx
  0x000000010310fb3f: mov    %ebx,0xdc(%rdi)
  0x000000010310fb45: movabs $0x116f097a0,%rdi  ;   {metadata({method} {0x0000000116f097a0} 'toLowerCase' '(C)C' in 'java/lang/Character')}
  0x000000010310fb4f: and    $0x1ff8,%ebx
  0x000000010310fb55: cmp    $0x0,%ebx
  0x000000010310fb58: je     0x000000010310fc8c  ;*iload_0
                                                ; - java.lang.Character::toLowerCase@0 (line 6309)

  0x000000010310fb5e: movabs $0x1170a29b0,%rdi  ;   {metadata(method data for {method} {0x0000000116f097a0} 'toLowerCase' '(C)C' in 'java/lang/Character')}
  0x000000010310fb68: addq   $0x1,0x108(%rdi)
  0x000000010310fb70: movabs $0x1170a2b08,%rdi  ;   {metadata(method data for {method} {0x0000000116f09838} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x000000010310fb7a: mov    0xdc(%rdi),%ebx
  0x000000010310fb80: add    $0x8,%ebx
  0x000000010310fb83: mov    %ebx,0xdc(%rdi)
  0x000000010310fb89: movabs $0x116f09838,%rdi  ;   {metadata({method} {0x0000000116f09838} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x000000010310fb93: and    $0x7ffff8,%ebx
  0x000000010310fb99: cmp    $0x0,%ebx
  0x000000010310fb9c: je     0x000000010310fca3
  0x000000010310fba2: movabs $0x1170a2b08,%rdi  ;   {metadata(method data for {method} {0x0000000116f09838} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x000000010310fbac: addq   $0x1,0x108(%rdi)
  0x000000010310fbb4: mov    %rsi,%rdi
  0x000000010310fbb7: mov    %rdi,%rsi          ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)

  0x000000010310fbba: mov    %edi,0x28(%rsp)
  0x000000010310fbbe: nop
  0x000000010310fbbf: callq  0x0000000103046420  ; OopMap{off=164}
                                                ;*invokestatic of
                                                ; - java.lang.Character::toLowerCase@1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {static_call}
  0x000000010310fbc4: cmp    (%rax),%rax        ; implicit exception: dispatches to 0x000000010310fcba
  0x000000010310fbc7: mov    %rax,%rdx
  0x000000010310fbca: movabs $0x1170a2b08,%rsi  ;   {metadata(method data for {method} {0x0000000116f09838} 'toLowerCase' '(I)I' in 'java/lang/Character')}
  0x000000010310fbd4: mov    0x8(%rdx),%edx
  0x000000010310fbd7: shl    $0x3,%rdx
  0x000000010310fbdb: cmp    0x120(%rsi),%rdx
  0x000000010310fbe2: jne    0x000000010310fbf1
  0x000000010310fbe4: addq   $0x1,0x128(%rsi)
  0x000000010310fbec: jmpq   0x000000010310fc57
  0x000000010310fbf1: cmp    0x130(%rsi),%rdx
  0x000000010310fbf8: jne    0x000000010310fc07
  0x000000010310fbfa: addq   $0x1,0x138(%rsi)
  0x000000010310fc02: jmpq   0x000000010310fc57
  0x000000010310fc07: cmpq   $0x0,0x120(%rsi)
  0x000000010310fc12: jne    0x000000010310fc2b
  0x000000010310fc14: mov    %rdx,0x120(%rsi)
  0x000000010310fc1b: movq   $0x1,0x128(%rsi)
  0x000000010310fc26: jmpq   0x000000010310fc57
  0x000000010310fc2b: cmpq   $0x0,0x130(%rsi)
  0x000000010310fc36: jne    0x000000010310fc4f
  0x000000010310fc38: mov    %rdx,0x130(%rsi)
  0x000000010310fc3f: movq   $0x1,0x138(%rsi)
  0x000000010310fc4a: jmpq   0x000000010310fc57
  0x000000010310fc4f: addq   $0x1,0x118(%rsi)
  0x000000010310fc57: mov    0x28(%rsp),%edx
  0x000000010310fc5b: mov    %rax,%rsi          ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)

  0x000000010310fc5e: nop
  0x000000010310fc5f: nop
  0x000000010310fc60: nop
  0x000000010310fc61: nop
  0x000000010310fc62: nop
  0x000000010310fc63: nop
  0x000000010310fc64: nop
  0x000000010310fc65: movabs $0xffffffffffffffff,%rax
  0x000000010310fc6f: callq  0x0000000103046220  ; OopMap{off=340}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {virtual_call}
  0x000000010310fc74: and    $0xffff,%eax
  0x000000010310fc7a: and    $0xffff,%eax
  0x000000010310fc80: add    $0x40,%rsp
  0x000000010310fc84: pop    %rbp
  0x000000010310fc85: test   %eax,-0xa1ab8b(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010310fc8b: retq
  0x000000010310fc8c: mov    %rdi,0x8(%rsp)
  0x000000010310fc91: movq   $0xffffffffffffffff,(%rsp)
  0x000000010310fc99: callq  0x00000001030fe020  ; OopMap{off=382}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6309)
                                                ;   {runtime_call}
  0x000000010310fc9e: jmpq   0x000000010310fb5e
  0x000000010310fca3: mov    %rdi,0x8(%rsp)
  0x000000010310fca8: movq   $0xffffffffffffffff,(%rsp)
  0x000000010310fcb0: callq  0x00000001030fe020  ; OopMap{off=405}
                                                ;*synchronization entry
                                                ; - java.lang.Character::toLowerCase@-1 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {runtime_call}
  0x000000010310fcb5: jmpq   0x000000010310fba2
  0x000000010310fcba: callq  0x000000010306db40  ; OopMap{rax=Oop off=415}
                                                ;*invokevirtual toLowerCase
                                                ; - java.lang.Character::toLowerCase@5 (line 6338)
                                                ; - java.lang.Character::toLowerCase@1 (line 6309)
                                                ;   {runtime_call}
  0x000000010310fcbf: nop
  0x000000010310fcc0: nop
  0x000000010310fcc1: mov    0x2a8(%r15),%rax
  0x000000010310fcc8: movabs $0x0,%r10
  0x000000010310fcd2: mov    %r10,0x2a8(%r15)
  0x000000010310fcd9: movabs $0x0,%r10
  0x000000010310fce3: mov    %r10,0x2b0(%r15)
  0x000000010310fcea: add    $0x40,%rsp
  0x000000010310fcee: pop    %rbp
  0x000000010310fcef: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x000000010310fcf4: hlt
  0x000000010310fcf5: hlt
  0x000000010310fcf6: hlt
  0x000000010310fcf7: hlt
  0x000000010310fcf8: hlt
  0x000000010310fcf9: hlt
  0x000000010310fcfa: hlt
  0x000000010310fcfb: hlt
  0x000000010310fcfc: hlt
  0x000000010310fcfd: hlt
  0x000000010310fcfe: hlt
  0x000000010310fcff: hlt
[Stub Code]
  0x000000010310fd00: nop                       ;   {no_reloc}
  0x000000010310fd01: nop
  0x000000010310fd02: nop
  0x000000010310fd03: nop
  0x000000010310fd04: nop
  0x000000010310fd05: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010310fd0f: jmpq   0x000000010310fd0f  ;   {runtime_call}
  0x000000010310fd14: nop
  0x000000010310fd15: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010310fd1f: jmpq   0x000000010310fd1f  ;   {runtime_call}
[Exception Handler]
  0x000000010310fd24: callq  0x00000001030fb9a0  ;   {runtime_call}
  0x000000010310fd29: mov    %rsp,-0x28(%rsp)
  0x000000010310fd2e: sub    $0x80,%rsp
  0x000000010310fd35: mov    %rax,0x78(%rsp)
  0x000000010310fd3a: mov    %rcx,0x70(%rsp)
  0x000000010310fd3f: mov    %rdx,0x68(%rsp)
  0x000000010310fd44: mov    %rbx,0x60(%rsp)
  0x000000010310fd49: mov    %rbp,0x50(%rsp)
  0x000000010310fd4e: mov    %rsi,0x48(%rsp)
  0x000000010310fd53: mov    %rdi,0x40(%rsp)
  0x000000010310fd58: mov    %r8,0x38(%rsp)
  0x000000010310fd5d: mov    %r9,0x30(%rsp)
  0x000000010310fd62: mov    %r10,0x28(%rsp)
  0x000000010310fd67: mov    %r11,0x20(%rsp)
  0x000000010310fd6c: mov    %r12,0x18(%rsp)
  0x000000010310fd71: mov    %r13,0x10(%rsp)
  0x000000010310fd76: mov    %r14,0x8(%rsp)
  0x000000010310fd7b: mov    %r15,(%rsp)
  0x000000010310fd7f: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x000000010310fd89: movabs $0x10310fd29,%rsi  ;   {internal_word}
  0x000000010310fd93: mov    %rsp,%rdx
  0x000000010310fd96: and    $0xfffffffffffffff0,%rsp
  0x000000010310fd9a: callq  0x0000000101b0f196  ;   {runtime_call}
  0x000000010310fd9f: hlt
[Deopt Handler Code]
  0x000000010310fda0: movabs $0x10310fda0,%r10  ;   {section_word}
  0x000000010310fdaa: push   %r10
  0x000000010310fdac: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x000000010310fdb1: hlt
  0x000000010310fdb2: hlt
  0x000000010310fdb3: hlt
  0x000000010310fdb4: hlt
  0x000000010310fdb5: hlt
  0x000000010310fdb6: hlt
  0x000000010310fdb7: hlt
[Loaded sun.misc.IOUtils from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x000000010310ff10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000116ee2b38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder'
  # this:     rsi:rsi   = 'java/lang/AbstractStringBuilder'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0xf0]  (sp of caller)
  0x00000001031100e0: mov    0x8(%rsi),%r10d
  0x00000001031100e4: shl    $0x3,%r10
  0x00000001031100e8: cmp    %rax,%r10
  0x00000001031100eb: jne    0x0000000103045e20  ;   {runtime_call}
  0x00000001031100f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x00000001031100fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000103110100: mov    %eax,-0x14000(%rsp)
  0x0000000103110107: push   %rbp
  0x0000000103110108: sub    $0xe0,%rsp
  0x000000010311010f: mov    %rsi,0xb8(%rsp)
  0x0000000103110117: mov    %rdx,0xc0(%rsp)
  0x000000010311011f: movabs $0x117062230,%rdi  ;   {metadata(method data for {method} {0x0000000116ee2b38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x0000000103110129: mov    0xdc(%rdi),%ebx
  0x000000010311012f: add    $0x8,%ebx
  0x0000000103110132: mov    %ebx,0xdc(%rdi)
  0x0000000103110138: movabs $0x116ee2b38,%rdi  ;   {metadata({method} {0x0000000116ee2b38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x0000000103110142: and    $0x1ff8,%ebx
  0x0000000103110148: cmp    $0x0,%ebx
  0x000000010311014b: je     0x0000000103110673  ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 445)

  0x0000000103110151: cmp    $0x0,%rdx
  0x0000000103110155: movabs $0x117062230,%rdi  ;   {metadata(method data for {method} {0x0000000116ee2b38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010311015f: movabs $0x108,%rbx
  0x0000000103110169: jne    0x0000000103110179
  0x000000010311016f: movabs $0x118,%rbx
  0x0000000103110179: mov    (%rdi,%rbx,1),%rax
  0x000000010311017d: lea    0x1(%rax),%rax
  0x0000000103110181: mov    %rax,(%rdi,%rbx,1)
  0x0000000103110185: je     0x0000000103110643  ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)

  0x000000010311018b: cmp    (%rdx),%rax        ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x000000010311068a
  0x000000010311018e: mov    %rdx,%rdi
  0x0000000103110191: movabs $0x117062230,%rbx  ;   {metadata(method data for {method} {0x0000000116ee2b38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010311019b: mov    0x8(%rdi),%edi
  0x000000010311019e: shl    $0x3,%rdi
  0x00000001031101a2: cmp    0x140(%rbx),%rdi
  0x00000001031101a9: jne    0x00000001031101b8
  0x00000001031101ab: addq   $0x1,0x148(%rbx)
  0x00000001031101b3: jmpq   0x000000010311021e
  0x00000001031101b8: cmp    0x150(%rbx),%rdi
  0x00000001031101bf: jne    0x00000001031101ce
  0x00000001031101c1: addq   $0x1,0x158(%rbx)
  0x00000001031101c9: jmpq   0x000000010311021e
  0x00000001031101ce: cmpq   $0x0,0x140(%rbx)
  0x00000001031101d9: jne    0x00000001031101f2
  0x00000001031101db: mov    %rdi,0x140(%rbx)
  0x00000001031101e2: movq   $0x1,0x148(%rbx)
  0x00000001031101ed: jmpq   0x000000010311021e
  0x00000001031101f2: cmpq   $0x0,0x150(%rbx)
  0x00000001031101fd: jne    0x0000000103110216
  0x00000001031101ff: mov    %rdi,0x150(%rbx)
  0x0000000103110206: movq   $0x1,0x158(%rbx)
  0x0000000103110211: jmpq   0x000000010311021e
  0x0000000103110216: addq   $0x1,0x138(%rbx)
  0x000000010311021e: movabs $0x1170450c0,%rdi  ;   {metadata(method data for {method} {0x0000000116e6fcf8} 'length' '()I' in 'java/lang/String')}
  0x0000000103110228: mov    0xdc(%rdi),%ebx
  0x000000010311022e: add    $0x8,%ebx
  0x0000000103110231: mov    %ebx,0xdc(%rdi)
  0x0000000103110237: movabs $0x116e6fcf8,%rdi  ;   {metadata({method} {0x0000000116e6fcf8} 'length' '()I' in 'java/lang/String')}
  0x0000000103110241: and    $0x7ffff8,%ebx
  0x0000000103110247: cmp    $0x0,%ebx
  0x000000010311024a: je     0x000000010311068f
  0x0000000103110250: mov    0xc(%rdx),%edi
  0x0000000103110253: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)

  0x0000000103110257: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x00000001031106a6
  0x000000010311025a: mov    %edi,0xac(%rsp)
  0x0000000103110261: mov    0xc(%rsi),%ebx     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)

  0x0000000103110264: add    %edi,%ebx
  0x0000000103110266: mov    %ebx,0xc8(%rsp)
  0x000000010311026d: mov    %rsi,%rax
  0x0000000103110270: movabs $0x117062230,%rcx  ;   {metadata(method data for {method} {0x0000000116ee2b38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x000000010311027a: addq   $0x1,0x168(%rcx)
  0x0000000103110282: movabs $0x117073e80,%rax  ;   {metadata(method data for {method} {0x0000000116ee21e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010311028c: mov    0xdc(%rax),%ecx
  0x0000000103110292: add    $0x8,%ecx
  0x0000000103110295: mov    %ecx,0xdc(%rax)
  0x000000010311029b: movabs $0x116ee21e0,%rax  ;   {metadata({method} {0x0000000116ee21e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00000001031102a5: and    $0x7ffff8,%ecx
  0x00000001031102ab: cmp    $0x0,%ecx
  0x00000001031102ae: je     0x00000001031106ab
  0x00000001031102b4: mov    0x10(%rsi),%eax
  0x00000001031102b7: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000001031102bb: mov    %rax,0xb0(%rsp)
  0x00000001031102c3: mov    0xc(%rax),%ecx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; implicit exception: dispatches to 0x00000001031106c2
  0x00000001031102c6: mov    %rbx,%r8
  0x00000001031102c9: sub    %ecx,%r8d
  0x00000001031102cc: cmp    $0x0,%r8d
  0x00000001031102d0: movabs $0x117073e80,%r8   ;   {metadata(method data for {method} {0x0000000116ee21e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x00000001031102da: movabs $0x108,%r9
  0x00000001031102e4: jle    0x00000001031102f4
  0x00000001031102ea: movabs $0x118,%r9
  0x00000001031102f4: mov    (%r8,%r9,1),%r11
  0x00000001031102f8: lea    0x1(%r11),%r11
  0x00000001031102fc: mov    %r11,(%r8,%r9,1)
  0x0000000103110300: jle    0x000000010311055e  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000103110306: mov    %ecx,0xa8(%rsp)
  0x000000010311030d: mov    %rsi,%r8
  0x0000000103110310: movabs $0x117073e80,%r9   ;   {metadata(method data for {method} {0x0000000116ee21e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010311031a: addq   $0x1,0x128(%r9)
  0x0000000103110322: mov    %rbx,%rdx
  0x0000000103110325: mov    %rsi,%r9
  0x0000000103110328: mov    %r9,%rsi           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010311032b: nop
  0x000000010311032c: nop
  0x000000010311032d: nop
  0x000000010311032e: nop
  0x000000010311032f: callq  0x0000000103046020  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=596}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {optimized virtual_call}
  0x0000000103110334: movabs $0x117073e80,%rbx  ;   {metadata(method data for {method} {0x0000000116ee21e0} 'ensureCapacityInternal' '(I)V' in 'java/lang/AbstractStringBuilder')}
  0x000000010311033e: addq   $0x1,0x138(%rbx)
  0x0000000103110346: movabs $0x1170741c0,%rbx  ;   {metadata(method data for {method} {0x0000000116f89d30} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x0000000103110350: mov    0xdc(%rbx),%edx
  0x0000000103110356: add    $0x8,%edx
  0x0000000103110359: mov    %edx,0xdc(%rbx)
  0x000000010311035f: movabs $0x116f89d30,%rbx  ;   {metadata({method} {0x0000000116f89d30} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x0000000103110369: and    $0x7ffff8,%edx
  0x000000010311036f: cmp    $0x0,%edx
  0x0000000103110372: je     0x00000001031106c7
  0x0000000103110378: mov    %rax,%rbx
  0x000000010311037b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x0000000103110385: mov    %rax,%r11
  0x0000000103110388: movslq %ebx,%rbx
  0x000000010311038b: mov    %rbx,%rdi
  0x000000010311038e: cmp    $0xffffff,%rbx
  0x0000000103110395: ja     0x00000001031106de
  0x000000010311039b: movabs $0x17,%rsi
  0x00000001031103a5: lea    (%rsi,%rbx,2),%rsi
  0x00000001031103a9: and    $0xfffffffffffffff8,%rsi
  0x00000001031103ad: mov    0x60(%r15),%rax
  0x00000001031103b1: lea    (%rax,%rsi,1),%rsi
  0x00000001031103b5: cmp    0x70(%r15),%rsi
  0x00000001031103b9: ja     0x00000001031106de
  0x00000001031103bf: mov    %rsi,0x60(%r15)
  0x00000001031103c3: sub    %rax,%rsi
  0x00000001031103c6: movq   $0x1,(%rax)
  0x00000001031103cd: mov    %rdx,%rcx
  0x00000001031103d0: shr    $0x3,%rcx
  0x00000001031103d4: mov    %ecx,0x8(%rax)
  0x00000001031103d7: mov    %ebx,0xc(%rax)
  0x00000001031103da: sub    $0x10,%rsi
  0x00000001031103de: je     0x00000001031103f5
  0x00000001031103e4: xor    %rbx,%rbx
  0x00000001031103e7: shr    $0x3,%rsi
  0x00000001031103eb: mov    %rbx,0x8(%rax,%rsi,8)
  0x00000001031103f0: dec    %rsi
  0x00000001031103f3: jne    0x00000001031103eb  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00000001031103f5: movabs $0x1170741c0,%rsi  ;   {metadata(method data for {method} {0x0000000116f89d30} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x00000001031103ff: addq   $0x1,0x108(%rsi)
  0x0000000103110407: movabs $0x11703afa0,%rsi  ;   {metadata(method data for {method} {0x0000000116f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000103110411: mov    0xdc(%rsi),%edx
  0x0000000103110417: add    $0x8,%edx
  0x000000010311041a: mov    %edx,0xdc(%rsi)
  0x0000000103110420: movabs $0x116f64fd8,%rsi  ;   {metadata({method} {0x0000000116f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010311042a: and    $0x7ffff8,%edx
  0x0000000103110430: cmp    $0x0,%edx
  0x0000000103110433: je     0x00000001031106e8
  0x0000000103110439: mov    0xa8(%rsp),%ecx
  0x0000000103110440: cmp    %r11d,%ecx
  0x0000000103110443: movabs $0x11703afa0,%rsi  ;   {metadata(method data for {method} {0x0000000116f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010311044d: movabs $0x108,%rdx
  0x0000000103110457: jg     0x0000000103110467
  0x000000010311045d: movabs $0x118,%rdx
  0x0000000103110467: mov    (%rsi,%rdx,1),%r8
  0x000000010311046b: lea    0x1(%r8),%r8
  0x000000010311046f: mov    %r8,(%rsi,%rdx,1)
  0x0000000103110473: jg     0x0000000103110491  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000103110479: movabs $0x11703afa0,%rsi  ;   {metadata(method data for {method} {0x0000000116f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000103110483: incl   0x128(%rsi)
  0x0000000103110489: mov    %rcx,%r9
  0x000000010311048c: jmpq   0x0000000103110494  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000103110491: mov    %r11,%r9           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x0000000103110494: mov    %r11d,0xcc(%rsp)
  0x000000010311049c: mov    0xb0(%rsp),%rdi
  0x00000001031104a4: movabs $0x1170741c0,%rsi  ;   {metadata(method data for {method} {0x0000000116f89d30} 'copyOf' '([CI)[C' in 'java/util/Arrays')}
  0x00000001031104ae: addq   $0x1,0x118(%rsi)
  0x00000001031104b6: mov    %rdi,%rsi
  0x00000001031104b9: mov    $0x0,%edx
  0x00000001031104be: mov    %rax,%rcx
  0x00000001031104c1: mov    $0x0,%r8d
  0x00000001031104c7: mov    %rax,0xd0(%rsp)
  0x00000001031104cf: lea    (%rdx,%r9,1),%rdi
  0x00000001031104d3: cmp    0xc(%rsi),%edi
  0x00000001031104d6: ja     0x00000001031106ff
  0x00000001031104dc: lea    (%r8,%r9,1),%rdi
  0x00000001031104e0: cmp    0xc(%rcx),%edi
  0x00000001031104e3: ja     0x00000001031106ff
  0x00000001031104e9: test   %r9d,%r9d
  0x00000001031104ec: jl     0x00000001031106ff
  0x00000001031104f2: je     0x000000010311052e
  0x00000001031104f8: movslq %edx,%rdx
  0x00000001031104fb: movslq %r8d,%r8
  0x00000001031104fe: lea    0x10(%rsi,%rdx,2),%rdi
  0x0000000103110503: lea    0x10(%rcx,%r8,2),%rsi
  0x0000000103110508: mov    %r9,%rdx
  0x000000010311050b: test   $0xf,%esp
  0x0000000103110511: je     0x0000000103110529
  0x0000000103110517: sub    $0x8,%rsp
  0x000000010311051b: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x0000000103110520: add    $0x8,%rsp
  0x0000000103110524: jmpq   0x000000010311052e
  0x0000000103110529: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x000000010311052e: mov    0xd0(%rsp),%rax
  0x0000000103110536: mov    0xb8(%rsp),%rsi
  0x000000010311053e: mov    %rax,%r10
  0x0000000103110541: shr    $0x3,%r10
  0x0000000103110545: mov    %r10d,0x10(%rsi)
  0x0000000103110549: mov    %rsi,%rdx
  0x000000010311054c: shr    $0x9,%rdx
  0x0000000103110550: movabs $0x10e9c0000,%rcx
  0x000000010311055a: movb   $0x0,(%rdx,%rcx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x000000010311055e: mov    0xac(%rsp),%edi
  0x0000000103110565: mov    0x10(%rsi),%r8d
  0x0000000103110569: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)

  0x000000010311056d: mov    0xc(%rsi),%r9d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)

  0x0000000103110571: mov    0xc0(%rsp),%rdx
  0x0000000103110579: movabs $0x117062230,%rcx  ;   {metadata(method data for {method} {0x0000000116ee2b38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x0000000103110583: mov    0x8(%rdx),%edx
  0x0000000103110586: shl    $0x3,%rdx
  0x000000010311058a: cmp    0x180(%rcx),%rdx
  0x0000000103110591: jne    0x00000001031105a0
  0x0000000103110593: addq   $0x1,0x188(%rcx)
  0x000000010311059b: jmpq   0x0000000103110606
  0x00000001031105a0: cmp    0x190(%rcx),%rdx
  0x00000001031105a7: jne    0x00000001031105b6
  0x00000001031105a9: addq   $0x1,0x198(%rcx)
  0x00000001031105b1: jmpq   0x0000000103110606
  0x00000001031105b6: cmpq   $0x0,0x180(%rcx)
  0x00000001031105c1: jne    0x00000001031105da
  0x00000001031105c3: mov    %rdx,0x180(%rcx)
  0x00000001031105ca: movq   $0x1,0x188(%rcx)
  0x00000001031105d5: jmpq   0x0000000103110606
  0x00000001031105da: cmpq   $0x0,0x190(%rcx)
  0x00000001031105e5: jne    0x00000001031105fe
  0x00000001031105e7: mov    %rdx,0x190(%rcx)
  0x00000001031105ee: movq   $0x1,0x198(%rcx)
  0x00000001031105f9: jmpq   0x0000000103110606
  0x00000001031105fe: addq   $0x1,0x178(%rcx)
  0x0000000103110606: mov    $0x0,%edx
  0x000000010311060b: mov    %rdi,%rcx
  0x000000010311060e: mov    0xc0(%rsp),%rsi    ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x0000000103110616: nop
  0x0000000103110617: callq  0x0000000103046020  ; OopMap{[192]=Oop [184]=Oop off=1340}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {optimized virtual_call}
  0x000000010311061c: mov    0xb8(%rsp),%rsi
  0x0000000103110624: mov    0xc(%rsi),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)

  0x0000000103110627: add    0xac(%rsp),%eax
  0x000000010311062e: mov    %eax,0xc(%rsi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 450)

  0x0000000103110631: mov    %rsi,%rax
  0x0000000103110634: add    $0xe0,%rsp
  0x000000010311063b: pop    %rbp
  0x000000010311063c: test   %eax,-0xa1b542(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x0000000103110642: retq                      ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 451)

  0x0000000103110643: mov    %rsi,%rdi
  0x0000000103110646: movabs $0x117062230,%rbx  ;   {metadata(method data for {method} {0x0000000116ee2b38} 'append' '(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' in 'java/lang/AbstractStringBuilder')}
  0x0000000103110650: addq   $0x1,0x128(%rbx)
  0x0000000103110658: mov    %rsi,%rdi
  0x000000010311065b: mov    %rdi,%rsi          ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 446)

  0x000000010311065e: nop
  0x000000010311065f: callq  0x0000000103046020  ; OopMap{[184]=Oop [192]=Oop off=1412}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 446)
                                                ;   {optimized virtual_call}
  0x0000000103110664: add    $0xe0,%rsp
  0x000000010311066b: pop    %rbp
  0x000000010311066c: test   %eax,-0xa1b572(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x0000000103110672: retq
  0x0000000103110673: mov    %rdi,0x8(%rsp)
  0x0000000103110678: movq   $0xffffffffffffffff,(%rsp)
  0x0000000103110680: callq  0x00000001030fe020  ; OopMap{rsi=Oop [184]=Oop rdx=Oop [192]=Oop off=1445}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ;   {runtime_call}
  0x0000000103110685: jmpq   0x0000000103110151
  0x000000010311068a: callq  0x000000010306db40  ; OopMap{rsi=Oop [184]=Oop rdx=Oop [192]=Oop off=1455}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x000000010311068f: mov    %rdi,0x8(%rsp)
  0x0000000103110694: movq   $0xffffffffffffffff,(%rsp)
  0x000000010311069c: callq  0x00000001030fe020  ; OopMap{rsi=Oop [184]=Oop rdx=Oop [192]=Oop off=1473}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00000001031106a1: jmpq   0x0000000103110250
  0x00000001031106a6: callq  0x000000010306db40  ; OopMap{rsi=Oop [184]=Oop rdx=Oop [192]=Oop off=1483}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00000001031106ab: mov    %rax,0x8(%rsp)
  0x00000001031106b0: movq   $0xffffffffffffffff,(%rsp)
  0x00000001031106b8: callq  0x00000001030fe020  ; OopMap{rsi=Oop [184]=Oop rdx=Oop [192]=Oop off=1501}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000001031106bd: jmpq   0x00000001031102b4
  0x00000001031106c2: callq  0x000000010306db40  ; OopMap{rsi=Oop [184]=Oop rdx=Oop [192]=Oop rax=Oop [176]=Oop off=1511}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000001031106c7: mov    %rbx,0x8(%rsp)
  0x00000001031106cc: movq   $0xffffffffffffffff,(%rsp)
  0x00000001031106d4: callq  0x00000001030fe020  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1529}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000001031106d9: jmpq   0x0000000103110378
  0x00000001031106de: callq  0x000000010306c8a0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1539}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000001031106e3: jmpq   0x00000001031103f5
  0x00000001031106e8: mov    %rsi,0x8(%rsp)
  0x00000001031106ed: movq   $0xffffffffffffffff,(%rsp)
  0x00000001031106f5: callq  0x00000001030fe020  ; OopMap{[184]=Oop [192]=Oop [176]=Oop rax=Oop off=1562}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00000001031106fa: jmpq   0x0000000103110439
  0x00000001031106ff: callq  0x0000000103046420  ; OopMap{[184]=Oop [192]=Oop [208]=Oop [176]=Oop off=1572}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {static_call}
  0x0000000103110704: jmpq   0x000000010311052e
  0x0000000103110709: nop
  0x000000010311070a: nop
  0x000000010311070b: mov    0x2a8(%r15),%rax
  0x0000000103110712: movabs $0x0,%r10
  0x000000010311071c: mov    %r10,0x2a8(%r15)
  0x0000000103110723: movabs $0x0,%r10
  0x000000010311072d: mov    %r10,0x2b0(%r15)
  0x0000000103110734: add    $0xe0,%rsp
  0x000000010311073b: pop    %rbp
  0x000000010311073c: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x0000000103110741: hlt
  0x0000000103110742: hlt
  0x0000000103110743: hlt
  0x0000000103110744: hlt
  0x0000000103110745: hlt
  0x0000000103110746: hlt
  0x0000000103110747: hlt
  0x0000000103110748: hlt
  0x0000000103110749: hlt
  0x000000010311074a: hlt
  0x000000010311074b: hlt
  0x000000010311074c: hlt
  0x000000010311074d: hlt
  0x000000010311074e: hlt
  0x000000010311074f: hlt
  0x0000000103110750: hlt
  0x0000000103110751: hlt
  0x0000000103110752: hlt
  0x0000000103110753: hlt
  0x0000000103110754: hlt
  0x0000000103110755: hlt
  0x0000000103110756: hlt
  0x0000000103110757: hlt
  0x0000000103110758: hlt
  0x0000000103110759: hlt
  0x000000010311075a: hlt
  0x000000010311075b: hlt
  0x000000010311075c: hlt
  0x000000010311075d: hlt
  0x000000010311075e: hlt
  0x000000010311075f: hlt
[Stub Code]
  0x0000000103110760: nop                       ;   {no_reloc}
  0x0000000103110761: nop
  0x0000000103110762: nop
  0x0000000103110763: nop
  0x0000000103110764: nop
  0x0000000103110765: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010311076f: jmpq   0x000000010311076f  ;   {runtime_call}
  0x0000000103110774: nop
  0x0000000103110775: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010311077f: jmpq   0x000000010311077f  ;   {runtime_call}
  0x0000000103110784: nop
  0x0000000103110785: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010311078f: jmpq   0x000000010311078f  ;   {runtime_call}
  0x0000000103110794: nop
  0x0000000103110795: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010311079f: jmpq   0x000000010311079f  ;   {runtime_call}
[Exception Handler]
  0x00000001031107a4: callq  0x00000001030fb9a0  ;   {runtime_call}
  0x00000001031107a9: mov    %rsp,-0x28(%rsp)
  0x00000001031107ae: sub    $0x80,%rsp
  0x00000001031107b5: mov    %rax,0x78(%rsp)
  0x00000001031107ba: mov    %rcx,0x70(%rsp)
  0x00000001031107bf: mov    %rdx,0x68(%rsp)
  0x00000001031107c4: mov    %rbx,0x60(%rsp)
  0x00000001031107c9: mov    %rbp,0x50(%rsp)
  0x00000001031107ce: mov    %rsi,0x48(%rsp)
  0x00000001031107d3: mov    %rdi,0x40(%rsp)
  0x00000001031107d8: mov    %r8,0x38(%rsp)
  0x00000001031107dd: mov    %r9,0x30(%rsp)
  0x00000001031107e2: mov    %r10,0x28(%rsp)
  0x00000001031107e7: mov    %r11,0x20(%rsp)
  0x00000001031107ec: mov    %r12,0x18(%rsp)
  0x00000001031107f1: mov    %r13,0x10(%rsp)
  0x00000001031107f6: mov    %r14,0x8(%rsp)
  0x00000001031107fb: mov    %r15,(%rsp)
  0x00000001031107ff: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x0000000103110809: movabs $0x1031107a9,%rsi  ;   {internal_word}
  0x0000000103110813: mov    %rsp,%rdx
  0x0000000103110816: and    $0xfffffffffffffff0,%rsp
  0x000000010311081a: callq  0x0000000101b0f196  ;   {runtime_call}
  0x000000010311081f: hlt
[Deopt Handler Code]
  0x0000000103110820: movabs $0x103110820,%r10  ;   {section_word}
  0x000000010311082a: push   %r10
  0x000000010311082c: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x0000000103110831: hlt
  0x0000000103110832: hlt
  0x0000000103110833: hlt
  0x0000000103110834: hlt
  0x0000000103110835: hlt
  0x0000000103110836: hlt
  0x0000000103110837: hlt
Decoding compiled method 0x000000010310c850:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000116ee61c0} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder'
  # this:     rsi:rsi   = 'java/lang/StringBuilder'
  # parm0:    rdx:rdx   = 'java/lang/String'
  #           [sp+0x50]  (sp of caller)
  0x000000010310c9c0: mov    0x8(%rsi),%r10d
  0x000000010310c9c4: shl    $0x3,%r10
  0x000000010310c9c8: cmp    %rax,%r10
  0x000000010310c9cb: jne    0x0000000103045e20  ;   {runtime_call}
  0x000000010310c9d1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010310c9dc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x000000010310c9e0: mov    %eax,-0x14000(%rsp)
  0x000000010310c9e7: push   %rbp
  0x000000010310c9e8: sub    $0x40,%rsp
  0x000000010310c9ec: movabs $0x1170620f8,%rdi  ;   {metadata(method data for {method} {0x0000000116ee61c0} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010310c9f6: mov    0xdc(%rdi),%ebx
  0x000000010310c9fc: add    $0x8,%ebx
  0x000000010310c9ff: mov    %ebx,0xdc(%rdi)
  0x000000010310ca05: movabs $0x116ee61c0,%rdi  ;   {metadata({method} {0x0000000116ee61c0} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010310ca0f: and    $0x1ff8,%ebx
  0x000000010310ca15: cmp    $0x0,%ebx
  0x000000010310ca18: je     0x000000010310ca65  ;*aload_0
                                                ; - java.lang.StringBuilder::append@0 (line 136)

  0x000000010310ca1e: mov    %rsi,%rdi
  0x000000010310ca21: movabs $0x1170620f8,%rbx  ;   {metadata(method data for {method} {0x0000000116ee61c0} 'append' '(Ljava/lang/String;)Ljava/lang/StringBuilder;' in 'java/lang/StringBuilder')}
  0x000000010310ca2b: addq   $0x1,0x108(%rbx)
  0x000000010310ca33: mov    %rdx,%rdi
  0x000000010310ca36: mov    %rdi,%rdx
  0x000000010310ca39: mov    %rsi,%rbx
  0x000000010310ca3c: mov    %rbx,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)

  0x000000010310ca3f: mov    %rdi,0x28(%rsp)
  0x000000010310ca44: mov    %rbx,0x20(%rsp)
  0x000000010310ca49: nop
  0x000000010310ca4a: nop
  0x000000010310ca4b: nop
  0x000000010310ca4c: nop
  0x000000010310ca4d: nop
  0x000000010310ca4e: nop
  0x000000010310ca4f: callq  0x0000000103046020  ; OopMap{[32]=Oop [40]=Oop off=148}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 136)
                                                ;   {optimized virtual_call}
  0x000000010310ca54: mov    0x20(%rsp),%rax
  0x000000010310ca59: add    $0x40,%rsp
  0x000000010310ca5d: pop    %rbp
  0x000000010310ca5e: test   %eax,-0xa17964(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010310ca64: retq
  0x000000010310ca65: mov    %rdi,0x8(%rsp)
  0x000000010310ca6a: movq   $0xffffffffffffffff,(%rsp)
  0x000000010310ca72: callq  0x00000001030fe020  ; OopMap{rsi=Oop rdx=Oop off=183}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 136)
                                                ;   {runtime_call}
  0x000000010310ca77: jmp    0x000000010310ca1e
  0x000000010310ca79: nop
  0x000000010310ca7a: nop
  0x000000010310ca7b: mov    0x2a8(%r15),%rax
  0x000000010310ca82: movabs $0x0,%r10
  0x000000010310ca8c: mov    %r10,0x2a8(%r15)
  0x000000010310ca93: movabs $0x0,%r10
  0x000000010310ca9d: mov    %r10,0x2b0(%r15)
  0x000000010310caa4: add    $0x40,%rsp
  0x000000010310caa8: pop    %rbp
  0x000000010310caa9: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x000000010310caae: hlt
  0x000000010310caaf: hlt
  0x000000010310cab0: hlt
  0x000000010310cab1: hlt
  0x000000010310cab2: hlt
  0x000000010310cab3: hlt
  0x000000010310cab4: hlt
  0x000000010310cab5: hlt
  0x000000010310cab6: hlt
  0x000000010310cab7: hlt
  0x000000010310cab8: hlt
  0x000000010310cab9: hlt
  0x000000010310caba: hlt
  0x000000010310cabb: hlt
  0x000000010310cabc: hlt
  0x000000010310cabd: hlt
  0x000000010310cabe: hlt
  0x000000010310cabf: hlt
[Stub Code]
  0x000000010310cac0: nop                       ;   {no_reloc}
  0x000000010310cac1: nop
  0x000000010310cac2: nop
  0x000000010310cac3: nop
  0x000000010310cac4: nop
  0x000000010310cac5: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010310cacf: jmpq   0x000000010310cacf  ;   {runtime_call}
[Exception Handler]
  0x000000010310cad4: callq  0x00000001030fb9a0  ;   {runtime_call}
  0x000000010310cad9: mov    %rsp,-0x28(%rsp)
  0x000000010310cade: sub    $0x80,%rsp
  0x000000010310cae5: mov    %rax,0x78(%rsp)
  0x000000010310caea: mov    %rcx,0x70(%rsp)
  0x000000010310caef: mov    %rdx,0x68(%rsp)
  0x000000010310caf4: mov    %rbx,0x60(%rsp)
  0x000000010310caf9: mov    %rbp,0x50(%rsp)
  0x000000010310cafe: mov    %rsi,0x48(%rsp)
  0x000000010310cb03: mov    %rdi,0x40(%rsp)
  0x000000010310cb08: mov    %r8,0x38(%rsp)
  0x000000010310cb0d: mov    %r9,0x30(%rsp)
  0x000000010310cb12: mov    %r10,0x28(%rsp)
  0x000000010310cb17: mov    %r11,0x20(%rsp)
  0x000000010310cb1c: mov    %r12,0x18(%rsp)
  0x000000010310cb21: mov    %r13,0x10(%rsp)
  0x000000010310cb26: mov    %r14,0x8(%rsp)
  0x000000010310cb2b: mov    %r15,(%rsp)
  0x000000010310cb2f: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x000000010310cb39: movabs $0x10310cad9,%rsi  ;   {internal_word}
  0x000000010310cb43: mov    %rsp,%rdx
  0x000000010310cb46: and    $0xfffffffffffffff0,%rsp
  0x000000010310cb4a: callq  0x0000000101b0f196  ;   {runtime_call}
  0x000000010310cb4f: hlt
[Deopt Handler Code]
  0x000000010310cb50: movabs $0x10310cb50,%r10  ;   {section_word}
  0x000000010310cb5a: push   %r10
  0x000000010310cb5c: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x000000010310cb61: hlt
  0x000000010310cb62: hlt
  0x000000010310cb63: hlt
  0x000000010310cb64: hlt
  0x000000010310cb65: hlt
  0x000000010310cb66: hlt
  0x000000010310cb67: hlt
Decoding compiled method 0x0000000103110cd0:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000116e71468} 'lastIndexOf' '(II)I' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x60]  (sp of caller)
  0x0000000103110e60: mov    0x8(%rsi),%r10d
  0x0000000103110e64: shl    $0x3,%r10
  0x0000000103110e68: cmp    %rax,%r10
  0x0000000103110e6b: jne    0x0000000103045e20  ;   {runtime_call}
  0x0000000103110e71: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000103110e7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000103110e80: mov    %eax,-0x14000(%rsp)
  0x0000000103110e87: push   %rbp
  0x0000000103110e88: sub    $0x50,%rsp
  0x0000000103110e8c: movabs $0x1170a63d0,%rax  ;   {metadata(method data for {method} {0x0000000116e71468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x0000000103110e96: mov    0xdc(%rax),%edi
  0x0000000103110e9c: add    $0x8,%edi
  0x0000000103110e9f: mov    %edi,0xdc(%rax)
  0x0000000103110ea5: movabs $0x116e71468,%rax  ;   {metadata({method} {0x0000000116e71468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x0000000103110eaf: and    $0x1ff8,%edi
  0x0000000103110eb5: cmp    $0x0,%edi
  0x0000000103110eb8: je     0x00000001031110e0  ;*iload_1
                                                ; - java.lang.String::lastIndexOf@0 (line 1649)

  0x0000000103110ebe: cmp    $0x10000,%edx
  0x0000000103110ec4: movabs $0x1170a63d0,%rax  ;   {metadata(method data for {method} {0x0000000116e71468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x0000000103110ece: movabs $0x108,%rdi
  0x0000000103110ed8: jge    0x0000000103110ee8
  0x0000000103110ede: movabs $0x118,%rdi
  0x0000000103110ee8: mov    (%rax,%rdi,1),%rbx
  0x0000000103110eec: lea    0x1(%rbx),%rbx
  0x0000000103110ef0: mov    %rbx,(%rax,%rdi,1)
  0x0000000103110ef4: jge    0x0000000103111096  ;*if_icmpge
                                                ; - java.lang.String::lastIndexOf@3 (line 1649)

  0x0000000103110efa: mov    0xc(%rsi),%eax
  0x0000000103110efd: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::lastIndexOf@7 (line 1652)

  0x0000000103110f01: mov    0xc(%rax),%edi     ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ; implicit exception: dispatches to 0x00000001031110f7
  0x0000000103110f04: dec    %edi
  0x0000000103110f06: movabs $0x1170a63d0,%rbx  ;   {metadata(method data for {method} {0x0000000116e71468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x0000000103110f10: addq   $0x1,0x128(%rbx)
  0x0000000103110f18: movabs $0x11703afa0,%rbx  ;   {metadata(method data for {method} {0x0000000116f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000103110f22: mov    0xdc(%rbx),%r8d
  0x0000000103110f29: add    $0x8,%r8d
  0x0000000103110f2d: mov    %r8d,0xdc(%rbx)
  0x0000000103110f34: movabs $0x116f64fd8,%rbx  ;   {metadata({method} {0x0000000116f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000103110f3e: and    $0x7ffff8,%r8d
  0x0000000103110f45: cmp    $0x0,%r8d
  0x0000000103110f49: je     0x00000001031110fc
  0x0000000103110f4f: cmp    %edi,%ecx
  0x0000000103110f51: movabs $0x11703afa0,%rbx  ;   {metadata(method data for {method} {0x0000000116f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000103110f5b: movabs $0x108,%r8
  0x0000000103110f65: jg     0x0000000103110f75
  0x0000000103110f6b: movabs $0x118,%r8
  0x0000000103110f75: mov    (%rbx,%r8,1),%r9
  0x0000000103110f79: lea    0x1(%r9),%r9
  0x0000000103110f7d: mov    %r9,(%rbx,%r8,1)
  0x0000000103110f81: jg     0x0000000103111038  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x0000000103110f87: movabs $0x11703afa0,%rdi  ;   {metadata(method data for {method} {0x0000000116f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000103110f91: incl   0x128(%rdi)
  0x0000000103110f97: mov    %rcx,%rdi
  0x0000000103110f9a: jmpq   0x0000000103111038  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)

  0x0000000103110f9f: nop
  0x0000000103110fa0: movslq %edi,%rbx
  0x0000000103110fa3: cmp    0xc(%rax),%edi
  0x0000000103110fa6: jae    0x0000000103111113
  0x0000000103110fac: movzwl 0x10(%rax,%rbx,2),%ebx  ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)

  0x0000000103110fb1: cmp    %edx,%ebx
  0x0000000103110fb3: movabs $0x1170a63d0,%rbx  ;   {metadata(method data for {method} {0x0000000116e71468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x0000000103110fbd: movabs $0x158,%r8
  0x0000000103110fc7: jne    0x0000000103110fd7
  0x0000000103110fcd: movabs $0x168,%r8
  0x0000000103110fd7: mov    (%rbx,%r8,1),%r9
  0x0000000103110fdb: lea    0x1(%r9),%r9
  0x0000000103110fdf: mov    %r9,(%rbx,%r8,1)
  0x0000000103110fe3: je     0x0000000103111076  ;*if_icmpne
                                                ; - java.lang.String::lastIndexOf@31 (line 1655)

  0x0000000103110fe9: dec    %edi
  0x0000000103110feb: movabs $0x1170a63d0,%rbx  ;   {metadata(method data for {method} {0x0000000116e71468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x0000000103110ff5: mov    0xe0(%rbx),%r8d
  0x0000000103110ffc: add    $0x8,%r8d
  0x0000000103111000: mov    %r8d,0xe0(%rbx)
  0x0000000103111007: movabs $0x116e71468,%rbx  ;   {metadata({method} {0x0000000116e71468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x0000000103111011: and    $0xfff8,%r8d
  0x0000000103111018: cmp    $0x0,%r8d
  0x000000010311101c: je     0x000000010311111c  ; OopMap{rsi=Oop rax=Oop off=450}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x0000000103111022: test   %eax,-0xa1bf28(%rip)        # 0x00000001026f5100
                                                ;   {poll}
  0x0000000103111028: movabs $0x1170a63d0,%rbx  ;   {metadata(method data for {method} {0x0000000116e71468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x0000000103111032: incl   0x178(%rbx)        ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)

  0x0000000103111038: cmp    $0x0,%edi
  0x000000010311103b: movabs $0x1170a63d0,%rbx  ;   {metadata(method data for {method} {0x0000000116e71468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x0000000103111045: movabs $0x138,%r8
  0x000000010311104f: jl     0x000000010311105f
  0x0000000103111055: movabs $0x148,%r8
  0x000000010311105f: mov    (%rbx,%r8,1),%r9
  0x0000000103111063: lea    0x1(%r9),%r9
  0x0000000103111067: mov    %r9,(%rbx,%r8,1)
  0x000000010311106b: jl     0x0000000103111085
  0x0000000103111071: jmpq   0x0000000103110fa0  ;*iflt
                                                ; - java.lang.String::lastIndexOf@23 (line 1654)

  0x0000000103111076: mov    %rdi,%rax
  0x0000000103111079: add    $0x50,%rsp
  0x000000010311107d: pop    %rbp
  0x000000010311107e: test   %eax,-0xa1bf84(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x0000000103111084: retq                      ;*ireturn
                                                ; - java.lang.String::lastIndexOf@36 (line 1656)

  0x0000000103111085: mov    $0xffffffff,%eax
  0x000000010311108a: add    $0x50,%rsp
  0x000000010311108e: pop    %rbp
  0x000000010311108f: test   %eax,-0xa1bf95(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x0000000103111095: retq                      ;*ireturn
                                                ; - java.lang.String::lastIndexOf@44 (line 1659)

  0x0000000103111096: mov    %rsi,%rdi
  0x0000000103111099: movabs $0x1170a63d0,%rbx  ;   {metadata(method data for {method} {0x0000000116e71468} 'lastIndexOf' '(II)I' in 'java/lang/String')}
  0x00000001031110a3: addq   $0x1,0x190(%rbx)
  0x00000001031110ab: mov    %rdx,%rdi
  0x00000001031110ae: mov    %rdi,%rdx
  0x00000001031110b1: mov    %rcx,%rbx
  0x00000001031110b4: mov    %rbx,%rcx
  0x00000001031110b7: mov    %rsi,%rax
  0x00000001031110ba: mov    %rax,%rsi          ;*invokespecial lastIndexOfSupplementary
                                                ; - java.lang.String::lastIndexOf@48 (line 1661)

  0x00000001031110bd: mov    %edi,0x44(%rsp)
  0x00000001031110c1: mov    %ebx,0x40(%rsp)
  0x00000001031110c5: mov    %rax,0x38(%rsp)
  0x00000001031110ca: nop
  0x00000001031110cb: nop
  0x00000001031110cc: nop
  0x00000001031110cd: nop
  0x00000001031110ce: nop
  0x00000001031110cf: callq  0x0000000103046020  ; OopMap{[56]=Oop off=628}
                                                ;*invokespecial lastIndexOfSupplementary
                                                ; - java.lang.String::lastIndexOf@48 (line 1661)
                                                ;   {optimized virtual_call}
  0x00000001031110d4: add    $0x50,%rsp
  0x00000001031110d8: pop    %rbp
  0x00000001031110d9: test   %eax,-0xa1bfdf(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x00000001031110df: retq
  0x00000001031110e0: mov    %rax,0x8(%rsp)
  0x00000001031110e5: movq   $0xffffffffffffffff,(%rsp)
  0x00000001031110ed: callq  0x00000001030fe020  ; OopMap{rsi=Oop off=658}
                                                ;*synchronization entry
                                                ; - java.lang.String::lastIndexOf@-1 (line 1649)
                                                ;   {runtime_call}
  0x00000001031110f2: jmpq   0x0000000103110ebe
  0x00000001031110f7: callq  0x000000010306db40  ; OopMap{rsi=Oop rax=Oop off=668}
                                                ;*arraylength
                                                ; - java.lang.String::lastIndexOf@13 (line 1653)
                                                ;   {runtime_call}
  0x00000001031110fc: mov    %rbx,0x8(%rsp)
  0x0000000103111101: movq   $0xffffffffffffffff,(%rsp)
  0x0000000103111109: callq  0x00000001030fe020  ; OopMap{rsi=Oop rax=Oop off=686}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.lang.String::lastIndexOf@16 (line 1653)
                                                ;   {runtime_call}
  0x000000010311110e: jmpq   0x0000000103110f4f
  0x0000000103111113: mov    %rdi,(%rsp)
  0x0000000103111117: callq  0x000000010306e200  ; OopMap{rsi=Oop rax=Oop off=700}
                                                ;*caload
                                                ; - java.lang.String::lastIndexOf@29 (line 1655)
                                                ;   {runtime_call}
  0x000000010311111c: mov    %rbx,0x8(%rsp)
  0x0000000103111121: movq   $0x28,(%rsp)
  0x0000000103111129: callq  0x00000001030fe020  ; OopMap{rsi=Oop rax=Oop off=718}
                                                ;*goto
                                                ; - java.lang.String::lastIndexOf@40 (line 1654)
                                                ;   {runtime_call}
  0x000000010311112e: jmpq   0x0000000103111022
  0x0000000103111133: nop
  0x0000000103111134: nop
  0x0000000103111135: mov    0x2a8(%r15),%rax
  0x000000010311113c: movabs $0x0,%r10
  0x0000000103111146: mov    %r10,0x2a8(%r15)
  0x000000010311114d: movabs $0x0,%r10
  0x0000000103111157: mov    %r10,0x2b0(%r15)
  0x000000010311115e: add    $0x50,%rsp
  0x0000000103111162: pop    %rbp
  0x0000000103111163: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x0000000103111168: hlt
  0x0000000103111169: hlt
  0x000000010311116a: hlt
  0x000000010311116b: hlt
  0x000000010311116c: hlt
  0x000000010311116d: hlt
  0x000000010311116e: hlt
  0x000000010311116f: hlt
  0x0000000103111170: hlt
  0x0000000103111171: hlt
  0x0000000103111172: hlt
  0x0000000103111173: hlt
  0x0000000103111174: hlt
  0x0000000103111175: hlt
  0x0000000103111176: hlt
  0x0000000103111177: hlt
  0x0000000103111178: hlt
  0x0000000103111179: hlt
  0x000000010311117a: hlt
  0x000000010311117b: hlt
  0x000000010311117c: hlt
  0x000000010311117d: hlt
  0x000000010311117e: hlt
  0x000000010311117f: hlt
[Stub Code]
  0x0000000103111180: nop                       ;   {no_reloc}
  0x0000000103111181: nop
  0x0000000103111182: nop
  0x0000000103111183: nop
  0x0000000103111184: nop
  0x0000000103111185: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010311118f: jmpq   0x000000010311118f  ;   {runtime_call}
[Exception Handler]
  0x0000000103111194: callq  0x00000001030fb9a0  ;   {runtime_call}
  0x0000000103111199: mov    %rsp,-0x28(%rsp)
  0x000000010311119e: sub    $0x80,%rsp
  0x00000001031111a5: mov    %rax,0x78(%rsp)
  0x00000001031111aa: mov    %rcx,0x70(%rsp)
  0x00000001031111af: mov    %rdx,0x68(%rsp)
  0x00000001031111b4: mov    %rbx,0x60(%rsp)
  0x00000001031111b9: mov    %rbp,0x50(%rsp)
  0x00000001031111be: mov    %rsi,0x48(%rsp)
  0x00000001031111c3: mov    %rdi,0x40(%rsp)
  0x00000001031111c8: mov    %r8,0x38(%rsp)
  0x00000001031111cd: mov    %r9,0x30(%rsp)
  0x00000001031111d2: mov    %r10,0x28(%rsp)
  0x00000001031111d7: mov    %r11,0x20(%rsp)
  0x00000001031111dc: mov    %r12,0x18(%rsp)
  0x00000001031111e1: mov    %r13,0x10(%rsp)
  0x00000001031111e6: mov    %r14,0x8(%rsp)
  0x00000001031111eb: mov    %r15,(%rsp)
  0x00000001031111ef: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x00000001031111f9: movabs $0x103111199,%rsi  ;   {internal_word}
  0x0000000103111203: mov    %rsp,%rdx
  0x0000000103111206: and    $0xfffffffffffffff0,%rsp
  0x000000010311120a: callq  0x0000000101b0f196  ;   {runtime_call}
  0x000000010311120f: hlt
[Deopt Handler Code]
  0x0000000103111210: movabs $0x103111210,%r10  ;   {section_word}
  0x000000010311121a: push   %r10
  0x000000010311121c: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x0000000103111221: hlt
  0x0000000103111222: hlt
  0x0000000103111223: hlt
  0x0000000103111224: hlt
  0x0000000103111225: hlt
  0x0000000103111226: hlt
  0x0000000103111227: hlt
Decoding compiled method 0x0000000103111490:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000117036470} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1'
  # this:     rsi:rsi   = 'java/lang/CharacterDataLatin1'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000103111600: mov    0x8(%rsi),%r10d
  0x0000000103111604: shl    $0x3,%r10
  0x0000000103111608: cmp    %rax,%r10
  0x000000010311160b: jne    0x0000000103045e20  ;   {runtime_call}
  0x0000000103111611: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010311161c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000103111620: mov    %eax,-0x14000(%rsp)
  0x0000000103111627: push   %rbp
  0x0000000103111628: sub    $0x30,%rsp
  0x000000010311162c: movabs $0x1170a67f0,%rax  ;   {metadata(method data for {method} {0x0000000117036470} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x0000000103111636: mov    0xdc(%rax),%edi
  0x000000010311163c: add    $0x8,%edi
  0x000000010311163f: mov    %edi,0xdc(%rax)
  0x0000000103111645: movabs $0x117036470,%rax  ;   {metadata({method} {0x0000000117036470} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010311164f: and    $0x1ff8,%edi
  0x0000000103111655: cmp    $0x0,%edi
  0x0000000103111658: je     0x000000010311168d  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 71)

  0x000000010311165e: mov    %rdx,%rax
  0x0000000103111661: and    $0xffff,%eax
  0x0000000103111667: movabs $0x7955c8ec0,%rdi  ;   {oop([I)}
  0x0000000103111671: movslq %eax,%rbx
  0x0000000103111674: cmp    0xc(%rdi),%eax     ; implicit exception: dispatches to 0x00000001031116a1
  0x0000000103111677: jae    0x00000001031116ab
  0x000000010311167d: mov    0x10(%rdi,%rbx,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x0000000103111681: add    $0x30,%rsp
  0x0000000103111685: pop    %rbp
  0x0000000103111686: test   %eax,-0xa1c58c(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010311168c: retq
  0x000000010311168d: mov    %rax,0x8(%rsp)
  0x0000000103111692: movq   $0xffffffffffffffff,(%rsp)
  0x000000010311169a: callq  0x00000001030fe020  ; OopMap{rsi=Oop off=159}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ;   {runtime_call}
  0x000000010311169f: jmp    0x000000010311165e
  0x00000001031116a1: callq  0x000000010306db40  ; OopMap{rsi=Oop rdi=Oop off=166}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00000001031116a6: callq  0x000000010306db40  ; OopMap{rsi=Oop rdi=Oop off=171}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00000001031116ab: mov    %rax,(%rsp)
  0x00000001031116af: callq  0x000000010306e200  ; OopMap{rsi=Oop rdi=Oop off=180}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00000001031116b4: nop
  0x00000001031116b5: nop
  0x00000001031116b6: mov    0x2a8(%r15),%rax
  0x00000001031116bd: movabs $0x0,%r10
  0x00000001031116c7: mov    %r10,0x2a8(%r15)
  0x00000001031116ce: movabs $0x0,%r10
  0x00000001031116d8: mov    %r10,0x2b0(%r15)
  0x00000001031116df: add    $0x30,%rsp
  0x00000001031116e3: pop    %rbp
  0x00000001031116e4: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x00000001031116e9: hlt
  0x00000001031116ea: hlt
  0x00000001031116eb: hlt
  0x00000001031116ec: hlt
  0x00000001031116ed: hlt
  0x00000001031116ee: hlt
  0x00000001031116ef: hlt
  0x00000001031116f0: hlt
  0x00000001031116f1: hlt
  0x00000001031116f2: hlt
  0x00000001031116f3: hlt
  0x00000001031116f4: hlt
  0x00000001031116f5: hlt
  0x00000001031116f6: hlt
  0x00000001031116f7: hlt
  0x00000001031116f8: hlt
  0x00000001031116f9: hlt
  0x00000001031116fa: hlt
  0x00000001031116fb: hlt
  0x00000001031116fc: hlt
  0x00000001031116fd: hlt
  0x00000001031116fe: hlt
  0x00000001031116ff: hlt
[Exception Handler]
[Stub Code]
  0x0000000103111700: callq  0x00000001030fb9a0  ;   {no_reloc}
  0x0000000103111705: mov    %rsp,-0x28(%rsp)
  0x000000010311170a: sub    $0x80,%rsp
  0x0000000103111711: mov    %rax,0x78(%rsp)
  0x0000000103111716: mov    %rcx,0x70(%rsp)
  0x000000010311171b: mov    %rdx,0x68(%rsp)
  0x0000000103111720: mov    %rbx,0x60(%rsp)
  0x0000000103111725: mov    %rbp,0x50(%rsp)
  0x000000010311172a: mov    %rsi,0x48(%rsp)
  0x000000010311172f: mov    %rdi,0x40(%rsp)
  0x0000000103111734: mov    %r8,0x38(%rsp)
  0x0000000103111739: mov    %r9,0x30(%rsp)
  0x000000010311173e: mov    %r10,0x28(%rsp)
  0x0000000103111743: mov    %r11,0x20(%rsp)
  0x0000000103111748: mov    %r12,0x18(%rsp)
  0x000000010311174d: mov    %r13,0x10(%rsp)
  0x0000000103111752: mov    %r14,0x8(%rsp)
  0x0000000103111757: mov    %r15,(%rsp)
  0x000000010311175b: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x0000000103111765: movabs $0x103111705,%rsi  ;   {internal_word}
  0x000000010311176f: mov    %rsp,%rdx
  0x0000000103111772: and    $0xfffffffffffffff0,%rsp
  0x0000000103111776: callq  0x0000000101b0f196  ;   {runtime_call}
  0x000000010311177b: hlt
[Deopt Handler Code]
  0x000000010311177c: movabs $0x10311177c,%r10  ;   {section_word}
  0x0000000103111786: push   %r10
  0x0000000103111788: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x000000010311178d: hlt
  0x000000010311178e: hlt
  0x000000010311178f: hlt
Decoding compiled method 0x0000000103111890:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000116e70e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String'
  # this:     rsi:rsi   = 'java/lang/String'
  # parm0:    rdx:rdx   = 'java/lang/String'
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000103111a00: mov    0x8(%rsi),%r10d
  0x0000000103111a04: shl    $0x3,%r10
  0x0000000103111a08: cmp    %rax,%r10
  0x0000000103111a0b: jne    0x0000000103045e20  ;   {runtime_call}
  0x0000000103111a11: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000103111a1c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000103111a20: mov    %eax,-0x14000(%rsp)
  0x0000000103111a27: push   %rbp
  0x0000000103111a28: sub    $0x30,%rsp
  0x0000000103111a2c: mov    %rsi,0x20(%rsp)
  0x0000000103111a31: movabs $0x1170a6918,%rax  ;   {metadata(method data for {method} {0x0000000116e70e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x0000000103111a3b: mov    0xdc(%rax),%edi
  0x0000000103111a41: add    $0x8,%edi
  0x0000000103111a44: mov    %edi,0xdc(%rax)
  0x0000000103111a4a: movabs $0x116e70e90,%rax  ;   {metadata({method} {0x0000000116e70e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x0000000103111a54: and    $0x1ff8,%edi
  0x0000000103111a5a: cmp    $0x0,%edi
  0x0000000103111a5d: je     0x0000000103111c1e  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1403)

  0x0000000103111a63: mov    0xc(%rsi),%eax
  0x0000000103111a66: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x0000000103111a6a: mov    0xc(%rdx),%edi     ; implicit exception: dispatches to 0x0000000103111c35
  0x0000000103111a6d: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)

  0x0000000103111a71: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x0000000103111c3a
  0x0000000103111a74: cmp    $0x0,%ecx
  0x0000000103111a77: movabs $0x1170a6918,%r8   ;   {metadata(method data for {method} {0x0000000116e70e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x0000000103111a81: movabs $0x108,%r9
  0x0000000103111a8b: jl     0x0000000103111a9b
  0x0000000103111a91: movabs $0x118,%r9
  0x0000000103111a9b: mov    (%r8,%r9,1),%r11
  0x0000000103111a9f: lea    0x1(%r11),%r11
  0x0000000103111aa3: mov    %r11,(%r8,%r9,1)
  0x0000000103111aa7: jl     0x0000000103111beb  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x0000000103111aad: mov    0xc(%rax),%r8d     ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x0000000103111c3f
  0x0000000103111ab1: sub    %ebx,%r8d
  0x0000000103111ab4: cmp    %r8d,%ecx
  0x0000000103111ab7: movabs $0x1170a6918,%r8   ;   {metadata(method data for {method} {0x0000000116e70e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x0000000103111ac1: movabs $0x128,%r9
  0x0000000103111acb: jle    0x0000000103111adb
  0x0000000103111ad1: movabs $0x138,%r9
  0x0000000103111adb: mov    (%r8,%r9,1),%r11
  0x0000000103111adf: lea    0x1(%r11),%r11
  0x0000000103111ae3: mov    %r11,(%r8,%r9,1)
  0x0000000103111ae7: jg     0x0000000103111beb  ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x0000000103111aed: mov    %rcx,%r8
  0x0000000103111af0: mov    $0x0,%r9d
  0x0000000103111af6: jmpq   0x0000000103111bab  ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x0000000103111afb: nopl   0x0(%rax,%rax,1)
  0x0000000103111b00: mov    %r8,%r11
  0x0000000103111b03: inc    %r11d
  0x0000000103111b06: movslq %r8d,%r13
  0x0000000103111b09: cmp    0xc(%rax),%r8d
  0x0000000103111b0d: jae    0x0000000103111c44
  0x0000000103111b13: movzwl 0x10(%rax,%r13,2),%r8d  ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x0000000103111b19: mov    %r9,%r13
  0x0000000103111b1c: inc    %r13d
  0x0000000103111b1f: movslq %r9d,%r14
  0x0000000103111b22: cmp    0xc(%rdi),%r9d
  0x0000000103111b26: jae    0x0000000103111c4d
  0x0000000103111b2c: movzwl 0x10(%rdi,%r14,2),%r9d  ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x0000000103111b32: movabs $0x1170a6918,%r14  ;   {metadata(method data for {method} {0x0000000116e70e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x0000000103111b3c: mov    0xe0(%r14),%esi
  0x0000000103111b43: add    $0x8,%esi
  0x0000000103111b46: mov    %esi,0xe0(%r14)
  0x0000000103111b4d: movabs $0x116e70e90,%r14  ;   {metadata({method} {0x0000000116e70e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x0000000103111b57: and    $0xfff8,%esi
  0x0000000103111b5d: cmp    $0x0,%esi
  0x0000000103111b60: je     0x0000000103111c56  ; OopMap{rdi=Oop rax=Oop rdx=Oop [32]=Oop off=358}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x0000000103111b66: test   %eax,-0xa1ca6c(%rip)        # 0x00000001026f5100
                                                ;   {poll}
  0x0000000103111b6c: cmp    %r9d,%r8d
  0x0000000103111b6f: movabs $0x1170a6918,%rsi  ;   {metadata(method data for {method} {0x0000000116e70e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x0000000103111b79: movabs $0x168,%r8
  0x0000000103111b83: je     0x0000000103111b93
  0x0000000103111b89: movabs $0x178,%r8
  0x0000000103111b93: mov    (%rsi,%r8,1),%r9
  0x0000000103111b97: lea    0x1(%r9),%r9
  0x0000000103111b9b: mov    %r9,(%rsi,%r8,1)
  0x0000000103111b9f: jne    0x0000000103111bfc  ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x0000000103111ba5: mov    %r13,%r9
  0x0000000103111ba8: mov    %r11,%r8           ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x0000000103111bab: dec    %ebx
  0x0000000103111bad: cmp    $0x0,%ebx
  0x0000000103111bb0: movabs $0x1170a6918,%r11  ;   {metadata(method data for {method} {0x0000000116e70e90} 'startsWith' '(Ljava/lang/String;I)Z' in 'java/lang/String')}
  0x0000000103111bba: movabs $0x148,%r13
  0x0000000103111bc4: jl     0x0000000103111bd4
  0x0000000103111bca: movabs $0x158,%r13
  0x0000000103111bd4: mov    (%r11,%r13,1),%r14
  0x0000000103111bd8: lea    0x1(%r14),%r14
  0x0000000103111bdc: mov    %r14,(%r11,%r13,1)
  0x0000000103111be0: jl     0x0000000103111c0d
  0x0000000103111be6: jmpq   0x0000000103111b00  ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x0000000103111beb: mov    $0x0,%eax
  0x0000000103111bf0: add    $0x30,%rsp
  0x0000000103111bf4: pop    %rbp
  0x0000000103111bf5: test   %eax,-0xa1cafb(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x0000000103111bfb: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@41 (line 1410)

  0x0000000103111bfc: mov    $0x0,%eax
  0x0000000103111c01: add    $0x30,%rsp
  0x0000000103111c05: pop    %rbp
  0x0000000103111c06: test   %eax,-0xa1cb0c(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x0000000103111c0c: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@69 (line 1414)

  0x0000000103111c0d: mov    $0x1,%eax
  0x0000000103111c12: add    $0x30,%rsp
  0x0000000103111c16: pop    %rbp
  0x0000000103111c17: test   %eax,-0xa1cb1d(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x0000000103111c1d: retq
  0x0000000103111c1e: mov    %rax,0x8(%rsp)
  0x0000000103111c23: movq   $0xffffffffffffffff,(%rsp)
  0x0000000103111c2b: callq  0x00000001030fe020  ; OopMap{rsi=Oop [32]=Oop rdx=Oop off=560}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)
                                                ;   {runtime_call}
  0x0000000103111c30: jmpq   0x0000000103111a63
  0x0000000103111c35: callq  0x000000010306db40  ; OopMap{rsi=Oop [32]=Oop rdx=Oop rax=Oop off=570}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x0000000103111c3a: callq  0x000000010306db40  ; OopMap{rsi=Oop [32]=Oop rdx=Oop rax=Oop rdi=Oop off=575}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x0000000103111c3f: callq  0x000000010306db40  ; OopMap{rdi=Oop rax=Oop rdx=Oop rsi=Oop [32]=Oop off=580}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x0000000103111c44: mov    %r8,(%rsp)
  0x0000000103111c48: callq  0x000000010306e200  ; OopMap{rdi=Oop rax=Oop rdx=Oop [32]=Oop off=589}
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)
                                                ;   {runtime_call}
  0x0000000103111c4d: mov    %r9,(%rsp)
  0x0000000103111c51: callq  0x000000010306e200  ; OopMap{rdi=Oop rax=Oop rdx=Oop [32]=Oop off=598}
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)
                                                ;   {runtime_call}
  0x0000000103111c56: mov    %r14,0x8(%rsp)
  0x0000000103111c5b: movq   $0x41,(%rsp)
  0x0000000103111c63: callq  0x00000001030fe020  ; OopMap{rdi=Oop rax=Oop rdx=Oop [32]=Oop off=616}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)
                                                ;   {runtime_call}
  0x0000000103111c68: jmpq   0x0000000103111b66
  0x0000000103111c6d: nop
  0x0000000103111c6e: nop
  0x0000000103111c6f: mov    0x2a8(%r15),%rax
  0x0000000103111c76: movabs $0x0,%r10
  0x0000000103111c80: mov    %r10,0x2a8(%r15)
  0x0000000103111c87: movabs $0x0,%r10
  0x0000000103111c91: mov    %r10,0x2b0(%r15)
  0x0000000103111c98: add    $0x30,%rsp
  0x0000000103111c9c: pop    %rbp
  0x0000000103111c9d: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x0000000103111ca2: hlt
  0x0000000103111ca3: hlt
  0x0000000103111ca4: hlt
  0x0000000103111ca5: hlt
  0x0000000103111ca6: hlt
  0x0000000103111ca7: hlt
  0x0000000103111ca8: hlt
  0x0000000103111ca9: hlt
  0x0000000103111caa: hlt
  0x0000000103111cab: hlt
  0x0000000103111cac: hlt
  0x0000000103111cad: hlt
  0x0000000103111cae: hlt
  0x0000000103111caf: hlt
  0x0000000103111cb0: hlt
  0x0000000103111cb1: hlt
  0x0000000103111cb2: hlt
  0x0000000103111cb3: hlt
  0x0000000103111cb4: hlt
  0x0000000103111cb5: hlt
  0x0000000103111cb6: hlt
  0x0000000103111cb7: hlt
  0x0000000103111cb8: hlt
  0x0000000103111cb9: hlt
  0x0000000103111cba: hlt
  0x0000000103111cbb: hlt
  0x0000000103111cbc: hlt
  0x0000000103111cbd: hlt
  0x0000000103111cbe: hlt
  0x0000000103111cbf: hlt
[Exception Handler]
[Stub Code]
  0x0000000103111cc0: callq  0x00000001030fb9a0  ;   {no_reloc}
  0x0000000103111cc5: mov    %rsp,-0x28(%rsp)
  0x0000000103111cca: sub    $0x80,%rsp
  0x0000000103111cd1: mov    %rax,0x78(%rsp)
  0x0000000103111cd6: mov    %rcx,0x70(%rsp)
  0x0000000103111cdb: mov    %rdx,0x68(%rsp)
  0x0000000103111ce0: mov    %rbx,0x60(%rsp)
  0x0000000103111ce5: mov    %rbp,0x50(%rsp)
  0x0000000103111cea: mov    %rsi,0x48(%rsp)
  0x0000000103111cef: mov    %rdi,0x40(%rsp)
  0x0000000103111cf4: mov    %r8,0x38(%rsp)
  0x0000000103111cf9: mov    %r9,0x30(%rsp)
  0x0000000103111cfe: mov    %r10,0x28(%rsp)
  0x0000000103111d03: mov    %r11,0x20(%rsp)
  0x0000000103111d08: mov    %r12,0x18(%rsp)
  0x0000000103111d0d: mov    %r13,0x10(%rsp)
  0x0000000103111d12: mov    %r14,0x8(%rsp)
  0x0000000103111d17: mov    %r15,(%rsp)
  0x0000000103111d1b: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x0000000103111d25: movabs $0x103111cc5,%rsi  ;   {internal_word}
  0x0000000103111d2f: mov    %rsp,%rdx
  0x0000000103111d32: and    $0xfffffffffffffff0,%rsp
  0x0000000103111d36: callq  0x0000000101b0f196  ;   {runtime_call}
  0x0000000103111d3b: hlt
[Deopt Handler Code]
  0x0000000103111d3c: movabs $0x103111d3c,%r10  ;   {section_word}
  0x0000000103111d46: push   %r10
  0x0000000103111d48: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x0000000103111d4d: hlt
  0x0000000103111d4e: hlt
  0x0000000103111d4f: hlt
Decoding compiled method 0x0000000103112050:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000116f58548} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap'
  # parm0:    rsi:rsi   = 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x00000001031121c0: mov    %eax,-0x14000(%rsp)
  0x00000001031121c7: push   %rbp
  0x00000001031121c8: sub    $0x30,%rsp
  0x00000001031121cc: movabs $0x1170a6ac8,%rdi  ;   {metadata(method data for {method} {0x0000000116f58548} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x00000001031121d6: mov    0xdc(%rdi),%ebx
  0x00000001031121dc: add    $0x8,%ebx
  0x00000001031121df: mov    %ebx,0xdc(%rdi)
  0x00000001031121e5: movabs $0x116f58548,%rdi  ;   {metadata({method} {0x0000000116f58548} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x00000001031121ef: and    $0x1ff8,%ebx
  0x00000001031121f5: cmp    $0x0,%ebx
  0x00000001031121f8: je     0x000000010311231c  ;*aload_0
                                                ; - java.util.HashMap::hash@0 (line 338)

  0x00000001031121fe: cmp    $0x0,%rsi
  0x0000000103112202: movabs $0x1170a6ac8,%rdi  ;   {metadata(method data for {method} {0x0000000116f58548} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x000000010311220c: movabs $0x108,%rbx
  0x0000000103112216: jne    0x0000000103112226
  0x000000010311221c: movabs $0x118,%rbx
  0x0000000103112226: mov    (%rdi,%rbx,1),%rax
  0x000000010311222a: lea    0x1(%rax),%rax
  0x000000010311222e: mov    %rax,(%rdi,%rbx,1)
  0x0000000103112232: jne    0x0000000103112252  ;*ifnonnull
                                                ; - java.util.HashMap::hash@1 (line 338)

  0x0000000103112238: movabs $0x1170a6ac8,%rsi  ;   {metadata(method data for {method} {0x0000000116f58548} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x0000000103112242: incl   0x128(%rsi)
  0x0000000103112248: mov    $0x0,%esi
  0x000000010311224d: jmpq   0x000000010311230d  ;*goto
                                                ; - java.util.HashMap::hash@5 (line 338)

  0x0000000103112252: cmp    (%rsi),%rax        ; implicit exception: dispatches to 0x0000000103112333
  0x0000000103112255: mov    %rsi,%rdi
  0x0000000103112258: movabs $0x1170a6ac8,%rbx  ;   {metadata(method data for {method} {0x0000000116f58548} 'hash' '(Ljava/lang/Object;)I' in 'java/util/HashMap')}
  0x0000000103112262: mov    0x8(%rdi),%edi
  0x0000000103112265: shl    $0x3,%rdi
  0x0000000103112269: cmp    0x148(%rbx),%rdi
  0x0000000103112270: jne    0x000000010311227f
  0x0000000103112272: addq   $0x1,0x150(%rbx)
  0x000000010311227a: jmpq   0x00000001031122e5
  0x000000010311227f: cmp    0x158(%rbx),%rdi
  0x0000000103112286: jne    0x0000000103112295
  0x0000000103112288: addq   $0x1,0x160(%rbx)
  0x0000000103112290: jmpq   0x00000001031122e5
  0x0000000103112295: cmpq   $0x0,0x148(%rbx)
  0x00000001031122a0: jne    0x00000001031122b9
  0x00000001031122a2: mov    %rdi,0x148(%rbx)
  0x00000001031122a9: movq   $0x1,0x150(%rbx)
  0x00000001031122b4: jmpq   0x00000001031122e5
  0x00000001031122b9: cmpq   $0x0,0x158(%rbx)
  0x00000001031122c4: jne    0x00000001031122dd
  0x00000001031122c6: mov    %rdi,0x158(%rbx)
  0x00000001031122cd: movq   $0x1,0x160(%rbx)
  0x00000001031122d8: jmpq   0x00000001031122e5
  0x00000001031122dd: addq   $0x1,0x140(%rbx)
  0x00000001031122e5: mov    %rsi,%rdi
  0x00000001031122e8: mov    %rdi,%rsi          ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)

  0x00000001031122eb: mov    %rdi,0x20(%rsp)
  0x00000001031122f0: nop
  0x00000001031122f1: nop
  0x00000001031122f2: nop
  0x00000001031122f3: nop
  0x00000001031122f4: nop
  0x00000001031122f5: movabs $0xffffffffffffffff,%rax
  0x00000001031122ff: callq  0x0000000103046220  ; OopMap{[32]=Oop off=324}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ;   {virtual_call}
  0x0000000103112304: mov    %rax,%rsi
  0x0000000103112307: shr    $0x10,%esi
  0x000000010311230a: xor    %rax,%rsi
  0x000000010311230d: mov    %rsi,%rax
  0x0000000103112310: add    $0x30,%rsp
  0x0000000103112314: pop    %rbp
  0x0000000103112315: test   %eax,-0xa1d21b(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010311231b: retq
  0x000000010311231c: mov    %rdi,0x8(%rsp)
  0x0000000103112321: movq   $0xffffffffffffffff,(%rsp)
  0x0000000103112329: callq  0x00000001030fe020  ; OopMap{rsi=Oop off=366}
                                                ;*synchronization entry
                                                ; - java.util.HashMap::hash@-1 (line 338)
                                                ;   {runtime_call}
  0x000000010311232e: jmpq   0x00000001031121fe
  0x0000000103112333: callq  0x000000010306db40  ; OopMap{rsi=Oop off=376}
                                                ;*invokevirtual hashCode
                                                ; - java.util.HashMap::hash@9 (line 338)
                                                ;   {runtime_call}
  0x0000000103112338: nop
  0x0000000103112339: nop
  0x000000010311233a: mov    0x2a8(%r15),%rax
  0x0000000103112341: movabs $0x0,%r10
  0x000000010311234b: mov    %r10,0x2a8(%r15)
  0x0000000103112352: movabs $0x0,%r10
  0x000000010311235c: mov    %r10,0x2b0(%r15)
  0x0000000103112363: add    $0x30,%rsp
  0x0000000103112367: pop    %rbp
  0x0000000103112368: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x000000010311236d: hlt
  0x000000010311236e: hlt
  0x000000010311236f: hlt
  0x0000000103112370: hlt
  0x0000000103112371: hlt
  0x0000000103112372: hlt
  0x0000000103112373: hlt
  0x0000000103112374: hlt
  0x0000000103112375: hlt
  0x0000000103112376: hlt
  0x0000000103112377: hlt
  0x0000000103112378: hlt
  0x0000000103112379: hlt
  0x000000010311237a: hlt
  0x000000010311237b: hlt
  0x000000010311237c: hlt
  0x000000010311237d: hlt
  0x000000010311237e: hlt
  0x000000010311237f: hlt
[Stub Code]
  0x0000000103112380: nop                       ;   {no_reloc}
  0x0000000103112381: nop
  0x0000000103112382: nop
  0x0000000103112383: nop
  0x0000000103112384: nop
  0x0000000103112385: movabs $0x0,%rbx          ;   {static_stub}
  0x000000010311238f: jmpq   0x000000010311238f  ;   {runtime_call}
[Exception Handler]
  0x0000000103112394: callq  0x00000001030fb9a0  ;   {runtime_call}
  0x0000000103112399: mov    %rsp,-0x28(%rsp)
  0x000000010311239e: sub    $0x80,%rsp
  0x00000001031123a5: mov    %rax,0x78(%rsp)
  0x00000001031123aa: mov    %rcx,0x70(%rsp)
  0x00000001031123af: mov    %rdx,0x68(%rsp)
  0x00000001031123b4: mov    %rbx,0x60(%rsp)
  0x00000001031123b9: mov    %rbp,0x50(%rsp)
  0x00000001031123be: mov    %rsi,0x48(%rsp)
  0x00000001031123c3: mov    %rdi,0x40(%rsp)
  0x00000001031123c8: mov    %r8,0x38(%rsp)
  0x00000001031123cd: mov    %r9,0x30(%rsp)
  0x00000001031123d2: mov    %r10,0x28(%rsp)
  0x00000001031123d7: mov    %r11,0x20(%rsp)
  0x00000001031123dc: mov    %r12,0x18(%rsp)
  0x00000001031123e1: mov    %r13,0x10(%rsp)
  0x00000001031123e6: mov    %r14,0x8(%rsp)
  0x00000001031123eb: mov    %r15,(%rsp)
  0x00000001031123ef: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x00000001031123f9: movabs $0x103112399,%rsi  ;   {internal_word}
  0x0000000103112403: mov    %rsp,%rdx
  0x0000000103112406: and    $0xfffffffffffffff0,%rsp
  0x000000010311240a: callq  0x0000000101b0f196  ;   {runtime_call}
  0x000000010311240f: hlt
[Deopt Handler Code]
  0x0000000103112410: movabs $0x103112410,%r10  ;   {section_word}
  0x000000010311241a: push   %r10
  0x000000010311241c: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x0000000103112421: hlt
  0x0000000103112422: hlt
  0x0000000103112423: hlt
  0x0000000103112424: hlt
  0x0000000103112425: hlt
  0x0000000103112426: hlt
  0x0000000103112427: hlt
Decoding compiled method 0x0000000103112550:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000116e94ea0} 'get' '()Ljava/lang/Object;' in 'java/lang/ref/Reference'
  #           [sp+0x40]  (sp of caller)
  0x00000001031126a0: mov    0x8(%rsi),%r10d
  0x00000001031126a4: shl    $0x3,%r10
  0x00000001031126a8: cmp    %rax,%r10
  0x00000001031126ab: jne    0x0000000103045e20  ;   {runtime_call}
  0x00000001031126b1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x00000001031126bc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x00000001031126c0: mov    %eax,-0x14000(%rsp)
  0x00000001031126c7: push   %rbp
  0x00000001031126c8: sub    $0x30,%rsp
  0x00000001031126cc: mov    0xc(%rsi),%eax
  0x00000001031126cf: shl    $0x3,%rax          ;*aload_0
                                                ; - java.lang.ref.Reference::get@0 (line 254)

  0x00000001031126d3: add    $0x30,%rsp
  0x00000001031126d7: pop    %rbp
  0x00000001031126d8: test   %eax,-0xa1d5de(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x00000001031126de: retq
  0x00000001031126df: nop
  0x00000001031126e0: nop
  0x00000001031126e1: mov    0x2a8(%r15),%rax
  0x00000001031126e8: movabs $0x0,%r10
  0x00000001031126f2: mov    %r10,0x2a8(%r15)
  0x00000001031126f9: movabs $0x0,%r10
  0x0000000103112703: mov    %r10,0x2b0(%r15)
  0x000000010311270a: add    $0x30,%rsp
  0x000000010311270e: pop    %rbp
  0x000000010311270f: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x0000000103112714: hlt
  0x0000000103112715: hlt
  0x0000000103112716: hlt
  0x0000000103112717: hlt
  0x0000000103112718: hlt
  0x0000000103112719: hlt
  0x000000010311271a: hlt
  0x000000010311271b: hlt
  0x000000010311271c: hlt
  0x000000010311271d: hlt
  0x000000010311271e: hlt
  0x000000010311271f: hlt
[Exception Handler]
[Stub Code]
  0x0000000103112720: callq  0x00000001030fb9a0  ;   {no_reloc}
  0x0000000103112725: mov    %rsp,-0x28(%rsp)
  0x000000010311272a: sub    $0x80,%rsp
  0x0000000103112731: mov    %rax,0x78(%rsp)
  0x0000000103112736: mov    %rcx,0x70(%rsp)
  0x000000010311273b: mov    %rdx,0x68(%rsp)
  0x0000000103112740: mov    %rbx,0x60(%rsp)
  0x0000000103112745: mov    %rbp,0x50(%rsp)
  0x000000010311274a: mov    %rsi,0x48(%rsp)
  0x000000010311274f: mov    %rdi,0x40(%rsp)
  0x0000000103112754: mov    %r8,0x38(%rsp)
  0x0000000103112759: mov    %r9,0x30(%rsp)
  0x000000010311275e: mov    %r10,0x28(%rsp)
  0x0000000103112763: mov    %r11,0x20(%rsp)
  0x0000000103112768: mov    %r12,0x18(%rsp)
  0x000000010311276d: mov    %r13,0x10(%rsp)
  0x0000000103112772: mov    %r14,0x8(%rsp)
  0x0000000103112777: mov    %r15,(%rsp)
  0x000000010311277b: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x0000000103112785: movabs $0x103112725,%rsi  ;   {internal_word}
  0x000000010311278f: mov    %rsp,%rdx
  0x0000000103112792: and    $0xfffffffffffffff0,%rsp
  0x0000000103112796: callq  0x0000000101b0f196  ;   {runtime_call}
  0x000000010311279b: hlt
[Deopt Handler Code]
  0x000000010311279c: movabs $0x10311279c,%r10  ;   {section_word}
  0x00000001031127a6: push   %r10
  0x00000001031127a8: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x00000001031127ad: hlt
  0x00000001031127ae: hlt
  0x00000001031127af: hlt
Decoding compiled method 0x0000000103112f90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder'
  # this:     rsi:rsi   = 'sun/nio/cs/UTF_8$Encoder'
  # parm0:    rdx:rdx   = '[C'
  # parm1:    rcx       = int
  # parm2:    r8        = int
  # parm3:    r9:r9     = '[B'
  #           [sp+0xa0]  (sp of caller)
  0x0000000103113180: mov    0x8(%rsi),%r10d
  0x0000000103113184: shl    $0x3,%r10
  0x0000000103113188: cmp    %rax,%r10
  0x000000010311318b: jne    0x0000000103045e20  ;   {runtime_call}
  0x0000000103113191: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010311319c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x00000001031131a0: mov    %eax,-0x14000(%rsp)
  0x00000001031131a7: push   %rbp
  0x00000001031131a8: sub    $0x90,%rsp
  0x00000001031131af: mov    %rsi,0x48(%rsp)
  0x00000001031131b4: mov    %rdx,0x68(%rsp)
  0x00000001031131b9: mov    %r8d,0x74(%rsp)
  0x00000001031131be: mov    %r9,0x78(%rsp)
  0x00000001031131c3: movabs $0x1170a6c78,%rax  ;   {metadata(method data for {method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x00000001031131cd: mov    0xdc(%rax),%edi
  0x00000001031131d3: add    $0x8,%edi
  0x00000001031131d6: mov    %edi,0xdc(%rax)
  0x00000001031131dc: movabs $0x116fbf470,%rax  ;   {metadata({method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x00000001031131e6: and    $0x1ff8,%edi
  0x00000001031131ec: cmp    $0x0,%edi
  0x00000001031131ef: je     0x0000000103113acb  ;*iload_2
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@0 (line 704)

  0x00000001031131f5: mov    %rcx,%rdi
  0x00000001031131f8: add    %r8d,%edi
  0x00000001031131fb: mov    %edi,0x50(%rsp)
  0x00000001031131ff: mov    0xc(%r9),%eax      ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ; implicit exception: dispatches to 0x0000000103113ae2
  0x0000000103113203: movabs $0x1170a6c78,%rbx  ;   {metadata(method data for {method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010311320d: addq   $0x1,0x108(%rbx)
  0x0000000103113215: movabs $0x11703afa0,%rbx  ;   {metadata(method data for {method} {0x0000000116f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010311321f: mov    0xdc(%rbx),%r11d
  0x0000000103113226: add    $0x8,%r11d
  0x000000010311322a: mov    %r11d,0xdc(%rbx)
  0x0000000103113231: movabs $0x116f64fd8,%rbx  ;   {metadata({method} {0x0000000116f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010311323b: and    $0x7ffff8,%r11d
  0x0000000103113242: cmp    $0x0,%r11d
  0x0000000103113246: je     0x0000000103113ae7
  0x000000010311324c: cmp    %eax,%r8d
  0x000000010311324f: movabs $0x11703afa0,%rbx  ;   {metadata(method data for {method} {0x0000000116f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x0000000103113259: movabs $0x108,%r11
  0x0000000103113263: jg     0x0000000103113273
  0x0000000103113269: movabs $0x118,%r11
  0x0000000103113273: mov    (%rbx,%r11,1),%r13
  0x0000000103113277: lea    0x1(%r13),%r13
  0x000000010311327b: mov    %r13,(%rbx,%r11,1)
  0x000000010311327f: jg     0x000000010311329d  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x0000000103113285: movabs $0x11703afa0,%rax  ;   {metadata(method data for {method} {0x0000000116f64fd8} 'min' '(II)I' in 'java/lang/Math')}
  0x000000010311328f: incl   0x128(%rax)
  0x0000000103113295: mov    %r8,%rbx
  0x0000000103113298: jmpq   0x00000001031132a0  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x000000010311329d: mov    %rax,%rbx          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)

  0x00000001031132a0: mov    $0x0,%eax
  0x00000001031132a5: jmpq   0x000000010311336a  ;*iload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@20 (line 709)

  0x00000001031132aa: nopw   0x0(%rax,%rax,1)
  0x00000001031132b0: movslq %ecx,%r11
  0x00000001031132b3: cmp    0xc(%rdx),%ecx     ; implicit exception: dispatches to 0x0000000103113afe
  0x00000001031132b6: jae    0x0000000103113b08
  0x00000001031132bc: movzwl 0x10(%rdx,%r11,2),%r11d  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)

  0x00000001031132c2: cmp    $0x80,%r11d
  0x00000001031132c9: movabs $0x1170a6c78,%r13  ;   {metadata(method data for {method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x00000001031132d3: movabs $0x138,%r14
  0x00000001031132dd: jge    0x00000001031132ed
  0x00000001031132e3: movabs $0x148,%r14
  0x00000001031132ed: mov    0x0(%r13,%r14,1),%rsi
  0x00000001031132f2: lea    0x1(%rsi),%rsi
  0x00000001031132f6: mov    %rsi,0x0(%r13,%r14,1)
  0x00000001031132fb: jge    0x00000001031133a7  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@33 (line 709)

  0x0000000103113301: mov    %rax,%rsi
  0x0000000103113304: inc    %esi
  0x0000000103113306: inc    %ecx
  0x0000000103113308: movslq %eax,%r13
  0x000000010311330b: cmp    0xc(%r9),%eax
  0x000000010311330f: jae    0x0000000103113b11
  0x0000000103113315: mov    %r11b,0x10(%r9,%r13,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)

  0x000000010311331a: movabs $0x1170a6c78,%rax  ;   {metadata(method data for {method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000103113324: mov    0xe0(%rax),%r11d
  0x000000010311332b: add    $0x8,%r11d
  0x000000010311332f: mov    %r11d,0xe0(%rax)
  0x0000000103113336: movabs $0x116fbf470,%rax  ;   {metadata({method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000103113340: and    $0xfff8,%r11d
  0x0000000103113347: cmp    $0x0,%r11d
  0x000000010311334b: je     0x0000000103113b1a  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop [72]=Oop off=465}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)

  0x0000000103113351: test   %eax,-0xa1e257(%rip)        # 0x00000001026f5100
                                                ;   {poll}
  0x0000000103113357: movabs $0x1170a6c78,%rax  ;   {metadata(method data for {method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000103113361: incl   0x158(%rax)
  0x0000000103113367: mov    %rsi,%rax          ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)

  0x000000010311336a: cmp    %ebx,%eax
  0x000000010311336c: movabs $0x1170a6c78,%r11  ;   {metadata(method data for {method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000103113376: movabs $0x118,%r13
  0x0000000103113380: jge    0x0000000103113390
  0x0000000103113386: movabs $0x128,%r13
  0x0000000103113390: mov    (%r11,%r13,1),%r14
  0x0000000103113394: lea    0x1(%r14),%r14
  0x0000000103113398: mov    %r14,(%r11,%r13,1)
  0x000000010311339c: jge    0x00000001031133b5
  0x00000001031133a2: jmpq   0x00000001031132b0  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@24 (line 709)

  0x00000001031133a7: mov    %ebx,0x54(%rsp)
  0x00000001031133ab: mov    0x48(%rsp),%rsi
  0x00000001031133b0: jmpq   0x00000001031133c0  ;*iload_2
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@54 (line 712)

  0x00000001031133b5: mov    %ebx,0x54(%rsp)
  0x00000001031133b9: mov    0x48(%rsp),%rsi
  0x00000001031133be: xchg   %ax,%ax
  0x00000001031133c0: cmp    %edi,%ecx
  0x00000001031133c2: movabs $0x1170a6c78,%r11  ;   {metadata(method data for {method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x00000001031133cc: movabs $0x170,%r13
  0x00000001031133d6: jge    0x00000001031133e6
  0x00000001031133dc: movabs $0x180,%r13
  0x00000001031133e6: mov    (%r11,%r13,1),%r14
  0x00000001031133ea: lea    0x1(%r14),%r14
  0x00000001031133ee: mov    %r14,(%r11,%r13,1)
  0x00000001031133f2: jge    0x0000000103113ab6  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@57 (line 712)

  0x00000001031133f8: mov    %rcx,%r11
  0x00000001031133fb: inc    %r11d
  0x00000001031133fe: movslq %ecx,%r13
  0x0000000103113401: cmp    0xc(%rdx),%ecx     ; implicit exception: dispatches to 0x0000000103113b31
  0x0000000103113404: jae    0x0000000103113b3b
  0x000000010311340a: movzwl 0x10(%rdx,%r13,2),%ecx  ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)

  0x0000000103113410: cmp    $0x80,%ecx
  0x0000000103113416: movabs $0x1170a6c78,%r13  ;   {metadata(method data for {method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000103113420: movabs $0x190,%r14
  0x000000010311342a: jge    0x000000010311343a
  0x0000000103113430: movabs $0x1a0,%r14
  0x000000010311343a: mov    0x0(%r13,%r14,1),%rdi
  0x000000010311343f: lea    0x1(%rdi),%rdi
  0x0000000103113443: mov    %rdi,0x0(%r13,%r14,1)
  0x0000000103113448: jge    0x000000010311347d  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@73 (line 714)

  0x000000010311344e: mov    %rax,%rdi
  0x0000000103113451: inc    %edi
  0x0000000103113453: mov    %rcx,%r13
  0x0000000103113456: movslq %eax,%r14
  0x0000000103113459: cmp    0xc(%r9),%eax
  0x000000010311345d: jae    0x0000000103113b44
  0x0000000103113463: mov    %r13b,0x10(%r9,%r14,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@86 (line 716)

  0x0000000103113468: movabs $0x1170a6c78,%rax  ;   {metadata(method data for {method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000103113472: incl   0x1b0(%rax)
  0x0000000103113478: jmpq   0x0000000103113a46  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@87 (line 716)

  0x000000010311347d: cmp    $0x800,%ecx
  0x0000000103113483: movabs $0x1170a6c78,%rdi  ;   {metadata(method data for {method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010311348d: movabs $0x1c8,%r13
  0x0000000103113497: jge    0x00000001031134a7
  0x000000010311349d: movabs $0x1d8,%r13
  0x00000001031134a7: mov    (%rdi,%r13,1),%r14
  0x00000001031134ab: lea    0x1(%r14),%r14
  0x00000001031134af: mov    %r14,(%rdi,%r13,1)
  0x00000001031134b3: jge    0x0000000103113518  ;*if_icmpge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@95 (line 717)

  0x00000001031134b9: mov    %rcx,%rdi
  0x00000001031134bc: sar    $0x6,%edi
  0x00000001031134bf: or     $0xc0,%edi
  0x00000001031134c5: mov    %rax,%r13
  0x00000001031134c8: inc    %r13d
  0x00000001031134cb: movslq %eax,%r14
  0x00000001031134ce: cmp    0xc(%r9),%eax
  0x00000001031134d2: jae    0x0000000103113b4d
  0x00000001031134d8: mov    %dil,0x10(%r9,%r14,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@115 (line 719)

  0x00000001031134dd: mov    %r13,%rax
  0x00000001031134e0: inc    %eax
  0x00000001031134e2: mov    %rcx,%rdi
  0x00000001031134e5: and    $0x3f,%edi
  0x00000001031134e8: or     $0x80,%edi
  0x00000001031134ee: movslq %r13d,%r14
  0x00000001031134f1: cmp    0xc(%r9),%r13d
  0x00000001031134f5: jae    0x0000000103113b56
  0x00000001031134fb: mov    %dil,0x10(%r9,%r14,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@133 (line 720)

  0x0000000103113500: movabs $0x1170a6c78,%rdi  ;   {metadata(method data for {method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010311350a: incl   0x1e8(%rdi)
  0x0000000103113510: mov    %rax,%rdi
  0x0000000103113513: jmpq   0x0000000103113a46  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@134 (line 720)

  0x0000000103113518: movabs $0x1170a6c78,%rdi  ;   {metadata(method data for {method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000103113522: addq   $0x1,0x200(%rdi)
  0x000000010311352a: movabs $0x1170a7020,%rdi  ;   {metadata(method data for {method} {0x0000000116f07500} 'isSurrogate' '(C)Z' in 'java/lang/Character')}
  0x0000000103113534: mov    0xdc(%rdi),%r13d
  0x000000010311353b: add    $0x8,%r13d
  0x000000010311353f: mov    %r13d,0xdc(%rdi)
  0x0000000103113546: movabs $0x116f07500,%rdi  ;   {metadata({method} {0x0000000116f07500} 'isSurrogate' '(C)Z' in 'java/lang/Character')}
  0x0000000103113550: and    $0x7ffff8,%r13d
  0x0000000103113557: cmp    $0x0,%r13d
  0x000000010311355b: je     0x0000000103113b5f
  0x0000000103113561: cmp    $0xd800,%ecx
  0x0000000103113567: movabs $0x1170a7020,%rdi  ;   {metadata(method data for {method} {0x0000000116f07500} 'isSurrogate' '(C)Z' in 'java/lang/Character')}
  0x0000000103113571: movabs $0x108,%r13
  0x000000010311357b: jl     0x000000010311358b
  0x0000000103113581: movabs $0x118,%r13
  0x000000010311358b: mov    (%rdi,%r13,1),%r14
  0x000000010311358f: lea    0x1(%r14),%r14
  0x0000000103113593: mov    %r14,(%rdi,%r13,1)
  0x0000000103113597: jl     0x00000001031135d9  ;*if_icmplt
                                                ; - java.lang.Character::isSurrogate@3 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x000000010311359d: cmp    $0xe000,%ecx
  0x00000001031135a3: movabs $0x1170a7020,%rdi  ;   {metadata(method data for {method} {0x0000000116f07500} 'isSurrogate' '(C)Z' in 'java/lang/Character')}
  0x00000001031135ad: movabs $0x128,%r13
  0x00000001031135b7: jge    0x00000001031135c7
  0x00000001031135bd: movabs $0x138,%r13
  0x00000001031135c7: mov    (%rdi,%r13,1),%r14
  0x00000001031135cb: lea    0x1(%r14),%r14
  0x00000001031135cf: mov    %r14,(%rdi,%r13,1)
  0x00000001031135d3: jl     0x00000001031135e3  ;*if_icmpge
                                                ; - java.lang.Character::isSurrogate@9 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x00000001031135d9: mov    $0x0,%edi
  0x00000001031135de: jmpq   0x00000001031135f8  ;*ireturn
                                                ; - java.lang.Character::isSurrogate@17 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x00000001031135e3: movabs $0x1170a7020,%rdi  ;   {metadata(method data for {method} {0x0000000116f07500} 'isSurrogate' '(C)Z' in 'java/lang/Character')}
  0x00000001031135ed: incl   0x148(%rdi)
  0x00000001031135f3: mov    $0x1,%edi          ;*goto
                                                ; - java.lang.Character::isSurrogate@13 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)

  0x00000001031135f8: and    $0x1,%edi
  0x00000001031135fb: cmp    $0x0,%edi
  0x00000001031135fe: movabs $0x1170a6c78,%rdi  ;   {metadata(method data for {method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000103113608: movabs $0x210,%r13
  0x0000000103113612: je     0x0000000103113622
  0x0000000103113618: movabs $0x220,%r13
  0x0000000103113622: mov    (%rdi,%r13,1),%r14
  0x0000000103113626: lea    0x1(%r14),%r14
  0x000000010311362a: mov    %r14,(%rdi,%r13,1)
  0x000000010311362e: je     0x00000001031139c9  ;*ifeq
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@142 (line 721)

  0x0000000103113634: mov    0x30(%rsi),%edi
  0x0000000103113637: shl    $0x3,%rdi          ;*getfield sgp
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@146 (line 722)

  0x000000010311363b: cmp    $0x0,%rdi
  0x000000010311363f: movabs $0x1170a6c78,%rdi  ;   {metadata(method data for {method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000103113649: movabs $0x230,%r13
  0x0000000103113653: jne    0x0000000103113663
  0x0000000103113659: movabs $0x240,%r13
  0x0000000103113663: mov    (%rdi,%r13,1),%r14
  0x0000000103113667: lea    0x1(%r14),%r14
  0x000000010311366b: mov    %r14,(%rdi,%r13,1)
  0x000000010311366f: mov    %ecx,0x64(%rsp)
  0x0000000103113673: mov    %r11d,0x60(%rsp)
  0x0000000103113678: mov    %eax,0x70(%rsp)
  0x000000010311367c: jne    0x00000001031136e6  ;*ifnonnull
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@149 (line 722)

  0x0000000103113682: nopw   0x0(%rax,%rax,1)
  0x0000000103113688: jmpq   0x0000000103113b85  ;   {no_reloc}
  0x000000010311368d: add    %al,(%rax)
  0x000000010311368f: add    %al,(%rax)
  0x0000000103113691: add    %ch,%cl
  0x0000000103113693: clc
  0x0000000103113694: add    $0x0,%al
  0x0000000103113696: add    %cl,-0x75(%rax)    ;*new  ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)

  0x0000000103113699: rorb   -0x41(%rax)        ;   {metadata(method data for {method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x000000010311369c: js     0x000000010311370a
  0x000000010311369e: or     (%rdi),%dl
  0x00000001031136a0: add    %eax,(%rax)
  0x00000001031136a2: add    %al,(%rax)
  0x00000001031136a4: addq   $0x1,0x250(%rdi)
  0x00000001031136ac: mov    %rax,%rsi          ;*invokespecial <init>
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@157 (line 723)

  0x00000001031136af: mov    %rax,0x58(%rsp)
  0x00000001031136b4: nop
  0x00000001031136b5: nop
  0x00000001031136b6: nop
  0x00000001031136b7: callq  0x0000000103046020  ; OopMap{[72]=Oop [88]=Oop [104]=Oop [120]=Oop off=1340}
                                                ;*invokespecial <init>
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@157 (line 723)
                                                ;   {optimized virtual_call}
  0x00000001031136bc: mov    0x48(%rsp),%rsi
  0x00000001031136c1: mov    0x58(%rsp),%rax
  0x00000001031136c6: mov    %rax,%r10
  0x00000001031136c9: shr    $0x3,%r10
  0x00000001031136cd: mov    %r10d,0x30(%rsi)
  0x00000001031136d1: mov    %rsi,%rdx
  0x00000001031136d4: shr    $0x9,%rdx
  0x00000001031136d8: movabs $0x10e9c0000,%rcx
  0x00000001031136e2: movb   $0x0,(%rdx,%rcx,1)  ;*putfield sgp
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@160 (line 723)

  0x00000001031136e6: mov    0x30(%rsi),%edi
  0x00000001031136e9: shl    $0x3,%rdi          ;*getfield sgp
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@164 (line 724)

  0x00000001031136ed: cmp    (%rdi),%rax        ; implicit exception: dispatches to 0x0000000103113b9c
  0x00000001031136f0: mov    %rdi,%rdx
  0x00000001031136f3: movabs $0x1170a6c78,%rcx  ;   {metadata(method data for {method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x00000001031136fd: mov    0x8(%rdx),%edx
  0x0000000103113700: shl    $0x3,%rdx
  0x0000000103113704: cmp    0x268(%rcx),%rdx
  0x000000010311370b: jne    0x000000010311371a
  0x000000010311370d: addq   $0x1,0x270(%rcx)
  0x0000000103113715: jmpq   0x0000000103113780
  0x000000010311371a: cmp    0x278(%rcx),%rdx
  0x0000000103113721: jne    0x0000000103113730
  0x0000000103113723: addq   $0x1,0x280(%rcx)
  0x000000010311372b: jmpq   0x0000000103113780
  0x0000000103113730: cmpq   $0x0,0x268(%rcx)
  0x000000010311373b: jne    0x0000000103113754
  0x000000010311373d: mov    %rdx,0x268(%rcx)
  0x0000000103113744: movq   $0x1,0x270(%rcx)
  0x000000010311374f: jmpq   0x0000000103113780
  0x0000000103113754: cmpq   $0x0,0x278(%rcx)
  0x000000010311375f: jne    0x0000000103113778
  0x0000000103113761: mov    %rdx,0x278(%rcx)
  0x0000000103113768: movq   $0x1,0x280(%rcx)
  0x0000000103113773: jmpq   0x0000000103113780
  0x0000000103113778: addq   $0x1,0x260(%rcx)
  0x0000000103113780: mov    0x60(%rsp),%r11d
  0x0000000103113785: dec    %r11d
  0x0000000103113788: mov    0x64(%rsp),%edx
  0x000000010311378c: mov    0x68(%rsp),%rcx
  0x0000000103113791: mov    %r11,%r8
  0x0000000103113794: mov    0x50(%rsp),%r9d
  0x0000000103113799: mov    %rdi,%rsi          ;*invokevirtual parse
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)

  0x000000010311379c: nop
  0x000000010311379d: movabs $0xffffffffffffffff,%rax
  0x00000001031137a7: callq  0x0000000103046220  ; OopMap{[104]=Oop [120]=Oop [72]=Oop off=1580}
                                                ;*invokevirtual parse
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)
                                                ;   {virtual_call}
  0x00000001031137ac: cmp    $0x0,%eax
  0x00000001031137af: movabs $0x1170a6c78,%rsi  ;   {metadata(method data for {method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x00000001031137b9: movabs $0x290,%rdi
  0x00000001031137c3: jge    0x00000001031137d3
  0x00000001031137c9: movabs $0x2a0,%rdi
  0x00000001031137d3: mov    (%rsi,%rdi,1),%rbx
  0x00000001031137d7: lea    0x1(%rbx),%rbx
  0x00000001031137db: mov    %rbx,(%rsi,%rdi,1)
  0x00000001031137df: jge    0x0000000103113902  ;*ifge
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@182 (line 725)

  0x00000001031137e5: mov    0x48(%rsp),%rsi
  0x00000001031137ea: mov    %rsi,%rdi
  0x00000001031137ed: movabs $0x1170a6c78,%rbx  ;   {metadata(method data for {method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x00000001031137f7: mov    0x8(%rdi),%edi
  0x00000001031137fa: shl    $0x3,%rdi
  0x00000001031137fe: cmp    0x2b8(%rbx),%rdi
  0x0000000103113805: jne    0x0000000103113814
  0x0000000103113807: addq   $0x1,0x2c0(%rbx)
  0x000000010311380f: jmpq   0x000000010311387a
  0x0000000103113814: cmp    0x2c8(%rbx),%rdi
  0x000000010311381b: jne    0x000000010311382a
  0x000000010311381d: addq   $0x1,0x2d0(%rbx)
  0x0000000103113825: jmpq   0x000000010311387a
  0x000000010311382a: cmpq   $0x0,0x2b8(%rbx)
  0x0000000103113835: jne    0x000000010311384e
  0x0000000103113837: mov    %rdi,0x2b8(%rbx)
  0x000000010311383e: movq   $0x1,0x2c0(%rbx)
  0x0000000103113849: jmpq   0x000000010311387a
  0x000000010311384e: cmpq   $0x0,0x2c8(%rbx)
  0x0000000103113859: jne    0x0000000103113872
  0x000000010311385b: mov    %rdi,0x2c8(%rbx)
  0x0000000103113862: movq   $0x1,0x2d0(%rbx)
  0x000000010311386d: jmpq   0x000000010311387a
  0x0000000103113872: addq   $0x1,0x2b0(%rbx)
  0x000000010311387a: mov    0x20(%rsi),%edi
  0x000000010311387d: shl    $0x3,%rdi          ;*getfield malformedInputAction
                                                ; - java.nio.charset.CharsetEncoder::malformedInputAction@1 (line 365)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@186 (line 726)

  0x0000000103113881: movabs $0x795596980,%r10  ;   {oop(a 'java/nio/charset/CodingErrorAction')}
  0x000000010311388b: cmp    %r10,%rdi
  0x000000010311388e: movabs $0x1170a6c78,%rdi  ;   {metadata(method data for {method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000103113898: movabs $0x2e0,%rbx
  0x00000001031138a2: je     0x00000001031138b2
  0x00000001031138a8: movabs $0x2f0,%rbx
  0x00000001031138b2: mov    (%rdi,%rbx,1),%rdx
  0x00000001031138b6: lea    0x1(%rdx),%rdx
  0x00000001031138ba: mov    %rdx,(%rdi,%rbx,1)
  0x00000001031138be: jne    0x0000000103113aa2  ;*if_acmpeq
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@192 (line 726)

  0x00000001031138c4: mov    0x70(%rsp),%edi
  0x00000001031138c8: mov    0x78(%rsp),%r9
  0x00000001031138cd: mov    %rdi,%rbx
  0x00000001031138d0: inc    %ebx
  0x00000001031138d2: movsbl 0x2c(%rsi),%edx    ;*getfield repl
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@205 (line 728)

  0x00000001031138d6: movslq %edi,%rcx
  0x00000001031138d9: cmp    0xc(%r9),%edi
  0x00000001031138dd: jae    0x0000000103113ba1
  0x00000001031138e3: mov    %dl,0x10(%r9,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@208 (line 728)

  0x00000001031138e8: movabs $0x1170a6c78,%rax  ;   {metadata(method data for {method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x00000001031138f2: incl   0x300(%rax)
  0x00000001031138f8: mov    0x60(%rsp),%r11d
  0x00000001031138fd: jmpq   0x00000001031139ad  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@209 (line 728)

  0x0000000103113902: mov    0x70(%rsp),%edi
  0x0000000103113906: mov    0x78(%rsp),%r9
  0x000000010311390b: mov    0x48(%rsp),%rsi
  0x0000000103113910: mov    %rax,%rbx
  0x0000000103113913: sar    $0x12,%ebx
  0x0000000103113916: or     $0xf0,%ebx
  0x000000010311391c: mov    %rdi,%rdx
  0x000000010311391f: inc    %edx
  0x0000000103113921: movslq %edi,%rcx
  0x0000000103113924: cmp    0xc(%r9),%edi
  0x0000000103113928: jae    0x0000000103113baa
  0x000000010311392e: mov    %bl,0x10(%r9,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@229 (line 730)

  0x0000000103113933: mov    %rax,%rdi
  0x0000000103113936: sar    $0xc,%edi
  0x0000000103113939: and    $0x3f,%edi
  0x000000010311393c: or     $0x80,%edi
  0x0000000103113942: mov    %rdx,%rbx
  0x0000000103113945: inc    %ebx
  0x0000000103113947: movslq %edx,%rcx
  0x000000010311394a: cmp    0xc(%r9),%edx
  0x000000010311394e: jae    0x0000000103113bb3
  0x0000000103113954: mov    %dil,0x10(%r9,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@250 (line 731)

  0x0000000103113959: mov    %rax,%rdi
  0x000000010311395c: sar    $0x6,%edi
  0x000000010311395f: and    $0x3f,%edi
  0x0000000103113962: or     $0x80,%edi
  0x0000000103113968: mov    %rbx,%rdx
  0x000000010311396b: inc    %edx
  0x000000010311396d: movslq %ebx,%rcx
  0x0000000103113970: cmp    0xc(%r9),%ebx
  0x0000000103113974: jae    0x0000000103113bbc
  0x000000010311397a: mov    %dil,0x10(%r9,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@271 (line 732)

  0x000000010311397f: mov    %rdx,%rdi
  0x0000000103113982: inc    %edi
  0x0000000103113984: mov    %rax,%rbx
  0x0000000103113987: and    $0x3f,%ebx
  0x000000010311398a: or     $0x80,%ebx
  0x0000000103113990: movslq %edx,%rcx
  0x0000000103113993: cmp    0xc(%r9),%edx
  0x0000000103113997: jae    0x0000000103113bc5
  0x000000010311399d: mov    %bl,0x10(%r9,%rcx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@289 (line 733)

  0x00000001031139a2: mov    0x60(%rsp),%r11d
  0x00000001031139a7: inc    %r11d
  0x00000001031139aa: mov    %rdi,%rbx
  0x00000001031139ad: movabs $0x1170a6c78,%rax  ;   {metadata(method data for {method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x00000001031139b7: incl   0x318(%rax)
  0x00000001031139bd: mov    %rbx,%rdi
  0x00000001031139c0: mov    0x64(%rsp),%ecx
  0x00000001031139c4: jmpq   0x0000000103113a46  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@293 (line 736)

  0x00000001031139c9: mov    %ecx,0x64(%rsp)
  0x00000001031139cd: mov    %rax,%rdi
  0x00000001031139d0: mov    0x64(%rsp),%ecx
  0x00000001031139d4: sar    $0xc,%ecx
  0x00000001031139d7: or     $0xe0,%ecx
  0x00000001031139dd: mov    %rdi,%rax
  0x00000001031139e0: inc    %eax
  0x00000001031139e2: movslq %edi,%rbx
  0x00000001031139e5: cmp    0xc(%r9),%edi
  0x00000001031139e9: jae    0x0000000103113bce
  0x00000001031139ef: mov    %cl,0x10(%r9,%rbx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@313 (line 738)

  0x00000001031139f4: mov    0x64(%rsp),%ecx
  0x00000001031139f8: sar    $0x6,%ecx
  0x00000001031139fb: and    $0x3f,%ecx
  0x00000001031139fe: or     $0x80,%ecx
  0x0000000103113a04: mov    %rax,%rdi
  0x0000000103113a07: inc    %edi
  0x0000000103113a09: movslq %eax,%rbx
  0x0000000103113a0c: cmp    0xc(%r9),%eax
  0x0000000103113a10: jae    0x0000000103113bd7
  0x0000000103113a16: mov    %cl,0x10(%r9,%rbx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@334 (line 739)

  0x0000000103113a1b: mov    %rdi,%rax
  0x0000000103113a1e: inc    %eax
  0x0000000103113a20: mov    0x64(%rsp),%ecx
  0x0000000103113a24: and    $0x3f,%ecx
  0x0000000103113a27: or     $0x80,%ecx
  0x0000000103113a2d: movslq %edi,%rbx
  0x0000000103113a30: cmp    0xc(%r9),%edi
  0x0000000103113a34: jae    0x0000000103113be0
  0x0000000103113a3a: mov    %cl,0x10(%r9,%rbx,1)  ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@352 (line 740)

  0x0000000103113a3f: mov    %rax,%rdi          ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x0000000103113a42: mov    0x64(%rsp),%ecx
  0x0000000103113a46: movabs $0x1170a6c78,%rax  ;   {metadata(method data for {method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000103113a50: mov    0xe0(%rax),%ebx
  0x0000000103113a56: add    $0x8,%ebx
  0x0000000103113a59: mov    %ebx,0xe0(%rax)
  0x0000000103113a5f: movabs $0x116fbf470,%rax  ;   {metadata({method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000103113a69: and    $0xfff8,%ebx
  0x0000000103113a6f: cmp    $0x0,%ebx
  0x0000000103113a72: je     0x0000000103113be9  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2296}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x0000000103113a78: test   %eax,-0xa1e97e(%rip)        # 0x00000001026f5100
                                                ;   {poll}
  0x0000000103113a7e: movabs $0x1170a6c78,%rax  ;   {metadata(method data for {method} {0x0000000116fbf470} 'encode' '([CII[B)I' in 'sun/nio/cs/UTF_8$Encoder')}
  0x0000000103113a88: incl   0x330(%rax)
  0x0000000103113a8e: mov    %r11,%rcx
  0x0000000103113a91: mov    %rdi,%rax
  0x0000000103113a94: mov    0x50(%rsp),%edi
  0x0000000103113a98: mov    0x68(%rsp),%rdx
  0x0000000103113a9d: jmpq   0x00000001031133c0  ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)

  0x0000000103113aa2: mov    $0xffffffff,%eax
  0x0000000103113aa7: add    $0x90,%rsp
  0x0000000103113aae: pop    %rbp
  0x0000000103113aaf: test   %eax,-0xa1e9b5(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x0000000103113ab5: retq                      ;*ireturn
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@196 (line 727)

  0x0000000103113ab6: mov    %rax,%rdi
  0x0000000103113ab9: mov    %rdi,%rax
  0x0000000103113abc: add    $0x90,%rsp
  0x0000000103113ac3: pop    %rbp
  0x0000000103113ac4: test   %eax,-0xa1e9ca(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x0000000103113aca: retq
  0x0000000103113acb: mov    %rax,0x8(%rsp)
  0x0000000103113ad0: movq   $0xffffffffffffffff,(%rsp)
  0x0000000103113ad8: callq  0x00000001030fe020  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [104]=Oop r9=Oop [120]=Oop off=2397}
                                                ;*synchronization entry
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@-1 (line 704)
                                                ;   {runtime_call}
  0x0000000103113add: jmpq   0x00000001031131f5
  0x0000000103113ae2: callq  0x000000010306db40  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [104]=Oop r9=Oop [120]=Oop off=2407}
                                                ;*arraylength
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@13 (line 706)
                                                ;   {runtime_call}
  0x0000000103113ae7: mov    %rbx,0x8(%rsp)
  0x0000000103113aec: movq   $0xffffffffffffffff,(%rsp)
  0x0000000103113af4: callq  0x00000001030fe020  ; OopMap{rsi=Oop [72]=Oop rdx=Oop [104]=Oop r9=Oop [120]=Oop off=2425}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@14 (line 706)
                                                ;   {runtime_call}
  0x0000000103113af9: jmpq   0x000000010311324c
  0x0000000103113afe: callq  0x000000010306db40  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop [72]=Oop off=2435}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x0000000103113b03: callq  0x000000010306db40  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop [72]=Oop off=2440}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x0000000103113b08: mov    %rcx,(%rsp)
  0x0000000103113b0c: callq  0x000000010306e200  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop [72]=Oop off=2449}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@29 (line 709)
                                                ;   {runtime_call}
  0x0000000103113b11: mov    %rax,(%rsp)
  0x0000000103113b15: callq  0x000000010306e200  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop [72]=Oop off=2458}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@50 (line 710)
                                                ;   {runtime_call}
  0x0000000103113b1a: mov    %rax,0x8(%rsp)
  0x0000000103113b1f: movq   $0x33,(%rsp)
  0x0000000103113b27: callq  0x00000001030fe020  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop [72]=Oop off=2476}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@51 (line 710)
                                                ;   {runtime_call}
  0x0000000103113b2c: jmpq   0x0000000103113351
  0x0000000103113b31: callq  0x000000010306db40  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop rsi=Oop [72]=Oop off=2486}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x0000000103113b36: callq  0x000000010306db40  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop rsi=Oop [72]=Oop off=2491}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x0000000103113b3b: mov    %rcx,(%rsp)
  0x0000000103113b3f: callq  0x000000010306e200  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop rsi=Oop [72]=Oop off=2500}
                                                ;*caload
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@65 (line 713)
                                                ;   {runtime_call}
  0x0000000103113b44: mov    %rax,(%rsp)
  0x0000000103113b48: callq  0x000000010306e200  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop rsi=Oop [72]=Oop off=2509}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@86 (line 716)
                                                ;   {runtime_call}
  0x0000000103113b4d: mov    %rax,(%rsp)
  0x0000000103113b51: callq  0x000000010306e200  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop rsi=Oop [72]=Oop off=2518}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@115 (line 719)
                                                ;   {runtime_call}
  0x0000000103113b56: mov    %r13,(%rsp)
  0x0000000103113b5a: callq  0x000000010306e200  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop rsi=Oop [72]=Oop off=2527}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@133 (line 720)
                                                ;   {runtime_call}
  0x0000000103113b5f: mov    %rdi,0x8(%rsp)
  0x0000000103113b64: movq   $0xffffffffffffffff,(%rsp)
  0x0000000103113b6c: callq  0x00000001030fe020  ; OopMap{rdx=Oop [104]=Oop r9=Oop [120]=Oop rsi=Oop [72]=Oop off=2545}
                                                ;*synchronization entry
                                                ; - java.lang.Character::isSurrogate@-1 (line 4776)
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@139 (line 721)
                                                ;   {runtime_call}
  0x0000000103113b71: jmpq   0x0000000103113561
  0x0000000103113b76: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x0000000103113b80: mov    $0xa050f00,%eax
  0x0000000103113b85: callq  0x00000001030fd020  ; OopMap{[120]=Oop [72]=Oop [104]=Oop off=2570}
                                                ;*new  ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)
                                                ;   {runtime_call}
  0x0000000103113b8a: jmpq   0x0000000103113688
  0x0000000103113b8f: mov    %rdx,%rdx
  0x0000000103113b92: callq  0x000000010306d620  ; OopMap{[120]=Oop [72]=Oop [104]=Oop off=2583}
                                                ;*new  ; - sun.nio.cs.UTF_8$Encoder::encode@153 (line 723)
                                                ;   {runtime_call}
  0x0000000103113b97: jmpq   0x0000000103113697
  0x0000000103113b9c: callq  0x000000010306db40  ; OopMap{[104]=Oop [120]=Oop rsi=Oop [72]=Oop rdi=Oop off=2593}
                                                ;*invokevirtual parse
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@175 (line 724)
                                                ;   {runtime_call}
  0x0000000103113ba1: mov    %rdi,(%rsp)
  0x0000000103113ba5: callq  0x000000010306e200  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2602}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@208 (line 728)
                                                ;   {runtime_call}
  0x0000000103113baa: mov    %rdi,(%rsp)
  0x0000000103113bae: callq  0x000000010306e200  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2611}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@229 (line 730)
                                                ;   {runtime_call}
  0x0000000103113bb3: mov    %rdx,(%rsp)
  0x0000000103113bb7: callq  0x000000010306e200  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2620}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@250 (line 731)
                                                ;   {runtime_call}
  0x0000000103113bbc: mov    %rbx,(%rsp)
  0x0000000103113bc0: callq  0x000000010306e200  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2629}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@271 (line 732)
                                                ;   {runtime_call}
  0x0000000103113bc5: mov    %rdx,(%rsp)
  0x0000000103113bc9: callq  0x000000010306e200  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2638}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@289 (line 733)
                                                ;   {runtime_call}
  0x0000000103113bce: mov    %rdi,(%rsp)
  0x0000000103113bd2: callq  0x000000010306e200  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2647}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@313 (line 738)
                                                ;   {runtime_call}
  0x0000000103113bd7: mov    %rax,(%rsp)
  0x0000000103113bdb: callq  0x000000010306e200  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2656}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@334 (line 739)
                                                ;   {runtime_call}
  0x0000000103113be0: mov    %rdi,(%rsp)
  0x0000000103113be4: callq  0x000000010306e200  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2665}
                                                ;*bastore
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@352 (line 740)
                                                ;   {runtime_call}
  0x0000000103113be9: mov    %rax,0x8(%rsp)
  0x0000000103113bee: movq   $0x161,(%rsp)
  0x0000000103113bf6: callq  0x00000001030fe020  ; OopMap{[104]=Oop rsi=Oop [72]=Oop r9=Oop [120]=Oop off=2683}
                                                ;*goto
                                                ; - sun.nio.cs.UTF_8$Encoder::encode@353 (line 742)
                                                ;   {runtime_call}
  0x0000000103113bfb: jmpq   0x0000000103113a78
  0x0000000103113c00: nop
  0x0000000103113c01: nop
  0x0000000103113c02: mov    0x2a8(%r15),%rax
  0x0000000103113c09: movabs $0x0,%r10
  0x0000000103113c13: mov    %r10,0x2a8(%r15)
  0x0000000103113c1a: movabs $0x0,%r10
  0x0000000103113c24: mov    %r10,0x2b0(%r15)
  0x0000000103113c2b: add    $0x90,%rsp
  0x0000000103113c32: pop    %rbp
  0x0000000103113c33: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x0000000103113c38: hlt
  0x0000000103113c39: hlt
  0x0000000103113c3a: hlt
  0x0000000103113c3b: hlt
  0x0000000103113c3c: hlt
  0x0000000103113c3d: hlt
  0x0000000103113c3e: hlt
  0x0000000103113c3f: hlt
[Stub Code]
  0x0000000103113c40: nop                       ;   {no_reloc}
  0x0000000103113c41: nop
  0x0000000103113c42: nop
  0x0000000103113c43: nop
  0x0000000103113c44: nop
  0x0000000103113c45: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000103113c4f: jmpq   0x0000000103113c4f  ;   {runtime_call}
  0x0000000103113c54: nop
  0x0000000103113c55: movabs $0x0,%rbx          ;   {static_stub}
  0x0000000103113c5f: jmpq   0x0000000103113c5f  ;   {runtime_call}
[Exception Handler]
  0x0000000103113c64: callq  0x00000001030fb9a0  ;   {runtime_call}
  0x0000000103113c69: mov    %rsp,-0x28(%rsp)
  0x0000000103113c6e: sub    $0x80,%rsp
  0x0000000103113c75: mov    %rax,0x78(%rsp)
  0x0000000103113c7a: mov    %rcx,0x70(%rsp)
  0x0000000103113c7f: mov    %rdx,0x68(%rsp)
  0x0000000103113c84: mov    %rbx,0x60(%rsp)
  0x0000000103113c89: mov    %rbp,0x50(%rsp)
  0x0000000103113c8e: mov    %rsi,0x48(%rsp)
  0x0000000103113c93: mov    %rdi,0x40(%rsp)
  0x0000000103113c98: mov    %r8,0x38(%rsp)
  0x0000000103113c9d: mov    %r9,0x30(%rsp)
  0x0000000103113ca2: mov    %r10,0x28(%rsp)
  0x0000000103113ca7: mov    %r11,0x20(%rsp)
  0x0000000103113cac: mov    %r12,0x18(%rsp)
  0x0000000103113cb1: mov    %r13,0x10(%rsp)
  0x0000000103113cb6: mov    %r14,0x8(%rsp)
  0x0000000103113cbb: mov    %r15,(%rsp)
  0x0000000103113cbf: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x0000000103113cc9: movabs $0x103113c69,%rsi  ;   {internal_word}
  0x0000000103113cd3: mov    %rsp,%rdx
  0x0000000103113cd6: and    $0xfffffffffffffff0,%rsp
  0x0000000103113cda: callq  0x0000000101b0f196  ;   {runtime_call}
  0x0000000103113cdf: hlt
[Deopt Handler Code]
  0x0000000103113ce0: movabs $0x103113ce0,%r10  ;   {section_word}
  0x0000000103113cea: push   %r10
  0x0000000103113cec: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x0000000103113cf1: hlt
  0x0000000103113cf2: hlt
  0x0000000103113cf3: hlt
  0x0000000103113cf4: hlt
  0x0000000103113cf5: hlt
  0x0000000103113cf6: hlt
  0x0000000103113cf7: hlt
Decoding compiled method 0x00000001031146d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x0000000117035d38} 'of' '(I)Ljava/lang/CharacterData;' in 'java/lang/CharacterData'
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x0000000103114880: mov    %eax,-0x14000(%rsp)
  0x0000000103114887: push   %rbp
  0x0000000103114888: sub    $0x30,%rsp
  0x000000010311488c: movabs $0x1170a2c90,%rax  ;   {metadata(method data for {method} {0x0000000117035d38} 'of' '(I)Ljava/lang/CharacterData;' in 'java/lang/CharacterData')}
  0x0000000103114896: mov    0xdc(%rax),%edi
  0x000000010311489c: add    $0x8,%edi
  0x000000010311489f: mov    %edi,0xdc(%rax)
  0x00000001031148a5: movabs $0x117035d38,%rax  ;   {metadata({method} {0x0000000117035d38} 'of' '(I)Ljava/lang/CharacterData;' in 'java/lang/CharacterData')}
  0x00000001031148af: and    $0x1ff8,%edi
  0x00000001031148b5: cmp    $0x0,%edi
  0x00000001031148b8: je     0x0000000103114a44  ;*iload_0
                                                ; - java.lang.CharacterData::of@0 (line 77)

  0x00000001031148be: mov    %rsi,%rax
  0x00000001031148c1: shr    $0x8,%eax
  0x00000001031148c4: cmp    $0x0,%eax
  0x00000001031148c7: movabs $0x1170a2c90,%rax  ;   {metadata(method data for {method} {0x0000000117035d38} 'of' '(I)Ljava/lang/CharacterData;' in 'java/lang/CharacterData')}
  0x00000001031148d1: movabs $0x108,%rdi
  0x00000001031148db: jne    0x00000001031148eb
  0x00000001031148e1: movabs $0x118,%rdi
  0x00000001031148eb: mov    (%rax,%rdi,1),%rbx
  0x00000001031148ef: lea    0x1(%rbx),%rbx
  0x00000001031148f3: mov    %rbx,(%rax,%rdi,1)
  0x00000001031148f7: je     0x0000000103114a2e  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x00000001031148fd: mov    %rsi,%rax
  0x0000000103114900: shr    $0x10,%eax
  0x0000000103114903: cmp    $0x0,%eax
  0x0000000103114906: je     0x0000000103114a06
  0x000000010311490c: cmp    $0x1,%eax
  0x000000010311490f: je     0x00000001031149de
  0x0000000103114915: cmp    $0x2,%eax
  0x0000000103114918: je     0x00000001031149b6
  0x000000010311491e: cmp    $0xe,%eax
  0x0000000103114921: je     0x000000010311498e
  0x0000000103114927: cmp    $0xf,%eax
  0x000000010311492a: je     0x0000000103114939
  0x0000000103114930: cmp    $0x10,%eax
  0x0000000103114933: jne    0x0000000103114966  ;*tableswitch
                                                ; - java.lang.CharacterData::of@15 (line 80)

  0x0000000103114939: nopl   0x0(%rax)
  0x0000000103114940: jmpq   0x0000000103114ab8  ;   {no_reloc}
  0x0000000103114945: add    %al,(%rax)
  0x0000000103114947: add    %al,(%rax)
  0x0000000103114949: add    %ah,0xf(%rsi)
  0x000000010311494c: (bad)
  0x000000010311494d: add    %r8b,(%rax)
  0x0000000103114950: jmpq   0x0000000103114ad2  ; implicit exception: dispatches to 0x0000000103114ac2
  0x0000000103114955: nop
  0x0000000103114956: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)

  0x000000010311495a: add    $0x30,%rsp
  0x000000010311495e: pop    %rbp
  0x000000010311495f: test   %eax,-0xa1f865(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x0000000103114965: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@115 (line 91)

  0x0000000103114966: xchg   %ax,%ax
  0x0000000103114968: jmpq   0x0000000103114b39  ;   {no_reloc}
  0x000000010311496d: add    %al,(%rax)
  0x000000010311496f: add    %al,(%rax)
  0x0000000103114971: add    %ah,0xf(%rsi)
  0x0000000103114974: (bad)
  0x0000000103114975: add    %r8b,(%rax)
  0x0000000103114978: jmpq   0x0000000103114b53  ; implicit exception: dispatches to 0x0000000103114b43
  0x000000010311497d: nop
  0x000000010311497e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)

  0x0000000103114982: add    $0x30,%rsp
  0x0000000103114986: pop    %rbp
  0x0000000103114987: test   %eax,-0xa1f88d(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010311498d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@119 (line 93)

  0x000000010311498e: xchg   %ax,%ax
  0x0000000103114990: jmpq   0x0000000103114bba  ;   {no_reloc}
  0x0000000103114995: add    %al,(%rax)
  0x0000000103114997: add    %al,(%rax)
  0x0000000103114999: add    %ah,0xf(%rsi)
  0x000000010311499c: (bad)
  0x000000010311499d: add    %r8b,(%rax)
  0x00000001031149a0: jmpq   0x0000000103114bd4  ; implicit exception: dispatches to 0x0000000103114bc4
  0x00000001031149a5: nop
  0x00000001031149a6: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)

  0x00000001031149aa: add    $0x30,%rsp
  0x00000001031149ae: pop    %rbp
  0x00000001031149af: test   %eax,-0xa1f8b5(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x00000001031149b5: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@111 (line 88)

  0x00000001031149b6: xchg   %ax,%ax
  0x00000001031149b8: jmpq   0x0000000103114c3b  ;   {no_reloc}
  0x00000001031149bd: add    %al,(%rax)
  0x00000001031149bf: add    %al,(%rax)
  0x00000001031149c1: add    %ah,0xf(%rsi)
  0x00000001031149c4: (bad)
  0x00000001031149c5: add    %r8b,(%rax)
  0x00000001031149c8: jmpq   0x0000000103114c55  ; implicit exception: dispatches to 0x0000000103114c45
  0x00000001031149cd: nop
  0x00000001031149ce: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)

  0x00000001031149d2: add    $0x30,%rsp
  0x00000001031149d6: pop    %rbp
  0x00000001031149d7: test   %eax,-0xa1f8dd(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x00000001031149dd: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@107 (line 86)

  0x00000001031149de: xchg   %ax,%ax
  0x00000001031149e0: jmpq   0x0000000103114cbc  ;   {no_reloc}
  0x00000001031149e5: add    %al,(%rax)
  0x00000001031149e7: add    %al,(%rax)
  0x00000001031149e9: add    %ah,0xf(%rsi)
  0x00000001031149ec: (bad)
  0x00000001031149ed: add    %r8b,(%rax)
  0x00000001031149f0: jmpq   0x0000000103114cd6  ; implicit exception: dispatches to 0x0000000103114cc6
  0x00000001031149f5: nop
  0x00000001031149f6: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)

  0x00000001031149fa: add    $0x30,%rsp
  0x00000001031149fe: pop    %rbp
  0x00000001031149ff: test   %eax,-0xa1f905(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x0000000103114a05: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@103 (line 84)

  0x0000000103114a06: xchg   %ax,%ax
  0x0000000103114a08: jmpq   0x0000000103114d3d  ;   {no_reloc}
  0x0000000103114a0d: add    %al,(%rax)
  0x0000000103114a0f: add    %al,(%rax)
  0x0000000103114a11: add    %ah,0xf(%rsi)
  0x0000000103114a14: (bad)
  0x0000000103114a15: add    %r8b,(%rax)
  0x0000000103114a18: jmpq   0x0000000103114d57  ; implicit exception: dispatches to 0x0000000103114d47
  0x0000000103114a1d: nop
  0x0000000103114a1e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)

  0x0000000103114a22: add    $0x30,%rsp
  0x0000000103114a26: pop    %rbp
  0x0000000103114a27: test   %eax,-0xa1f92d(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x0000000103114a2d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@99 (line 82)

  0x0000000103114a2e: movabs $0x7955c8eb0,%rax  ;   {oop(a 'java/lang/CharacterDataLatin1')}
  0x0000000103114a38: add    $0x30,%rsp
  0x0000000103114a3c: pop    %rbp
  0x0000000103114a3d: test   %eax,-0xa1f943(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x0000000103114a43: retq
  0x0000000103114a44: mov    %rax,0x8(%rsp)
  0x0000000103114a49: movq   $0xffffffffffffffff,(%rsp)
  0x0000000103114a51: callq  0x00000001030fe020  ; OopMap{off=470}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 77)
                                                ;   {runtime_call}
  0x0000000103114a56: jmpq   0x00000001031148be
  0x0000000103114a5b: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000103114a65: push   %rax
  0x0000000103114a66: push   %rbx
  0x0000000103114a67: mov    0x48(%rax),%rbx
  0x0000000103114a6b: push   %rdi
  0x0000000103114a6c: push   %rsi
  0x0000000103114a6d: push   %rdx
  0x0000000103114a6e: push   %rcx
  0x0000000103114a6f: push   %r8
  0x0000000103114a71: push   %r9
  0x0000000103114a73: push   %r10
  0x0000000103114a75: mov    %rsp,%r10
  0x0000000103114a78: and    $0xfffffffffffffff0,%rsp
  0x0000000103114a7c: push   %r10
  0x0000000103114a7e: push   %r11
  0x0000000103114a80: mov    $0x102,%edi
  0x0000000103114a85: movabs $0x7fff8e9d3aa2,%r10  ;   {runtime_call}
  0x0000000103114a8f: callq  *%r10
  0x0000000103114a92: pop    %r11
  0x0000000103114a94: pop    %rsp
  0x0000000103114a95: pop    %r10
  0x0000000103114a97: pop    %r9
  0x0000000103114a99: pop    %r8
  0x0000000103114a9b: pop    %rcx
  0x0000000103114a9c: pop    %rdx
  0x0000000103114a9d: pop    %rsi
  0x0000000103114a9e: pop    %rdi
  0x0000000103114a9f: cmp    0x118(%rbx),%rax
  0x0000000103114aa6: pop    %rbx
  0x0000000103114aa7: pop    %rax
  0x0000000103114aa8: jne    0x0000000103114ab8
  0x0000000103114aae: jmpq   0x000000010311494a
  0x0000000103114ab3: mov    $0xa535d00,%eax
  0x0000000103114ab8: callq  0x00000001030fd420  ; OopMap{off=573}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000103114abd: jmpq   0x0000000103114940
  0x0000000103114ac2: callq  0x000000010306db40  ; OopMap{rax=Oop off=583}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000103114ac7: mov    0x0(%rax),%eax
  0x0000000103114acd: mov    $0x6050b00,%eax
  0x0000000103114ad2: callq  0x00000001030fcc20  ; OopMap{rax=Oop off=599}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x0000000103114ad7: jmpq   0x0000000103114950
  0x0000000103114adc: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000103114ae6: push   %rax
  0x0000000103114ae7: push   %rbx
  0x0000000103114ae8: mov    0x48(%rax),%rbx
  0x0000000103114aec: push   %rdi
  0x0000000103114aed: push   %rsi
  0x0000000103114aee: push   %rdx
  0x0000000103114aef: push   %rcx
  0x0000000103114af0: push   %r8
  0x0000000103114af2: push   %r9
  0x0000000103114af4: push   %r10
  0x0000000103114af6: mov    %rsp,%r10
  0x0000000103114af9: and    $0xfffffffffffffff0,%rsp
  0x0000000103114afd: push   %r10
  0x0000000103114aff: push   %r11
  0x0000000103114b01: mov    $0x102,%edi
  0x0000000103114b06: movabs $0x7fff8e9d3aa2,%r10  ;   {runtime_call}
  0x0000000103114b10: callq  *%r10
  0x0000000103114b13: pop    %r11
  0x0000000103114b15: pop    %rsp
  0x0000000103114b16: pop    %r10
  0x0000000103114b18: pop    %r9
  0x0000000103114b1a: pop    %r8
  0x0000000103114b1c: pop    %rcx
  0x0000000103114b1d: pop    %rdx
  0x0000000103114b1e: pop    %rsi
  0x0000000103114b1f: pop    %rdi
  0x0000000103114b20: cmp    0x118(%rbx),%rax
  0x0000000103114b27: pop    %rbx
  0x0000000103114b28: pop    %rax
  0x0000000103114b29: jne    0x0000000103114b39
  0x0000000103114b2f: jmpq   0x0000000103114972
  0x0000000103114b34: mov    $0xa535d00,%eax
  0x0000000103114b39: callq  0x00000001030fd420  ; OopMap{off=702}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000103114b3e: jmpq   0x0000000103114968
  0x0000000103114b43: callq  0x000000010306db40  ; OopMap{rax=Oop off=712}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000103114b48: mov    0x0(%rax),%eax
  0x0000000103114b4e: mov    $0x6050b00,%eax
  0x0000000103114b53: callq  0x00000001030fcc20  ; OopMap{rax=Oop off=728}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x0000000103114b58: jmpq   0x0000000103114978
  0x0000000103114b5d: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000103114b67: push   %rax
  0x0000000103114b68: push   %rbx
  0x0000000103114b69: mov    0x48(%rax),%rbx
  0x0000000103114b6d: push   %rdi
  0x0000000103114b6e: push   %rsi
  0x0000000103114b6f: push   %rdx
  0x0000000103114b70: push   %rcx
  0x0000000103114b71: push   %r8
  0x0000000103114b73: push   %r9
  0x0000000103114b75: push   %r10
  0x0000000103114b77: mov    %rsp,%r10
  0x0000000103114b7a: and    $0xfffffffffffffff0,%rsp
  0x0000000103114b7e: push   %r10
  0x0000000103114b80: push   %r11
  0x0000000103114b82: mov    $0x102,%edi
  0x0000000103114b87: movabs $0x7fff8e9d3aa2,%r10  ;   {runtime_call}
  0x0000000103114b91: callq  *%r10
  0x0000000103114b94: pop    %r11
  0x0000000103114b96: pop    %rsp
  0x0000000103114b97: pop    %r10
  0x0000000103114b99: pop    %r9
  0x0000000103114b9b: pop    %r8
  0x0000000103114b9d: pop    %rcx
  0x0000000103114b9e: pop    %rdx
  0x0000000103114b9f: pop    %rsi
  0x0000000103114ba0: pop    %rdi
  0x0000000103114ba1: cmp    0x118(%rbx),%rax
  0x0000000103114ba8: pop    %rbx
  0x0000000103114ba9: pop    %rax
  0x0000000103114baa: jne    0x0000000103114bba
  0x0000000103114bb0: jmpq   0x000000010311499a
  0x0000000103114bb5: mov    $0xa535d00,%eax
  0x0000000103114bba: callq  0x00000001030fd420  ; OopMap{off=831}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000103114bbf: jmpq   0x0000000103114990
  0x0000000103114bc4: callq  0x000000010306db40  ; OopMap{rax=Oop off=841}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000103114bc9: mov    0x0(%rax),%eax
  0x0000000103114bcf: mov    $0x6050b00,%eax
  0x0000000103114bd4: callq  0x00000001030fcc20  ; OopMap{rax=Oop off=857}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x0000000103114bd9: jmpq   0x00000001031149a0
  0x0000000103114bde: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000103114be8: push   %rax
  0x0000000103114be9: push   %rbx
  0x0000000103114bea: mov    0x48(%rax),%rbx
  0x0000000103114bee: push   %rdi
  0x0000000103114bef: push   %rsi
  0x0000000103114bf0: push   %rdx
  0x0000000103114bf1: push   %rcx
  0x0000000103114bf2: push   %r8
  0x0000000103114bf4: push   %r9
  0x0000000103114bf6: push   %r10
  0x0000000103114bf8: mov    %rsp,%r10
  0x0000000103114bfb: and    $0xfffffffffffffff0,%rsp
  0x0000000103114bff: push   %r10
  0x0000000103114c01: push   %r11
  0x0000000103114c03: mov    $0x102,%edi
  0x0000000103114c08: movabs $0x7fff8e9d3aa2,%r10  ;   {runtime_call}
  0x0000000103114c12: callq  *%r10
  0x0000000103114c15: pop    %r11
  0x0000000103114c17: pop    %rsp
  0x0000000103114c18: pop    %r10
  0x0000000103114c1a: pop    %r9
  0x0000000103114c1c: pop    %r8
  0x0000000103114c1e: pop    %rcx
  0x0000000103114c1f: pop    %rdx
  0x0000000103114c20: pop    %rsi
  0x0000000103114c21: pop    %rdi
  0x0000000103114c22: cmp    0x118(%rbx),%rax
  0x0000000103114c29: pop    %rbx
  0x0000000103114c2a: pop    %rax
  0x0000000103114c2b: jne    0x0000000103114c3b
  0x0000000103114c31: jmpq   0x00000001031149c2
  0x0000000103114c36: mov    $0xa535d00,%eax
  0x0000000103114c3b: callq  0x00000001030fd420  ; OopMap{off=960}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000103114c40: jmpq   0x00000001031149b8
  0x0000000103114c45: callq  0x000000010306db40  ; OopMap{rax=Oop off=970}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000103114c4a: mov    0x0(%rax),%eax
  0x0000000103114c50: mov    $0x6050b00,%eax
  0x0000000103114c55: callq  0x00000001030fcc20  ; OopMap{rax=Oop off=986}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x0000000103114c5a: jmpq   0x00000001031149c8
  0x0000000103114c5f: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000103114c69: push   %rax
  0x0000000103114c6a: push   %rbx
  0x0000000103114c6b: mov    0x48(%rax),%rbx
  0x0000000103114c6f: push   %rdi
  0x0000000103114c70: push   %rsi
  0x0000000103114c71: push   %rdx
  0x0000000103114c72: push   %rcx
  0x0000000103114c73: push   %r8
  0x0000000103114c75: push   %r9
  0x0000000103114c77: push   %r10
  0x0000000103114c79: mov    %rsp,%r10
  0x0000000103114c7c: and    $0xfffffffffffffff0,%rsp
  0x0000000103114c80: push   %r10
  0x0000000103114c82: push   %r11
  0x0000000103114c84: mov    $0x102,%edi
  0x0000000103114c89: movabs $0x7fff8e9d3aa2,%r10  ;   {runtime_call}
  0x0000000103114c93: callq  *%r10
  0x0000000103114c96: pop    %r11
  0x0000000103114c98: pop    %rsp
  0x0000000103114c99: pop    %r10
  0x0000000103114c9b: pop    %r9
  0x0000000103114c9d: pop    %r8
  0x0000000103114c9f: pop    %rcx
  0x0000000103114ca0: pop    %rdx
  0x0000000103114ca1: pop    %rsi
  0x0000000103114ca2: pop    %rdi
  0x0000000103114ca3: cmp    0x118(%rbx),%rax
  0x0000000103114caa: pop    %rbx
  0x0000000103114cab: pop    %rax
  0x0000000103114cac: jne    0x0000000103114cbc
  0x0000000103114cb2: jmpq   0x00000001031149ea
  0x0000000103114cb7: mov    $0xa535d00,%eax
  0x0000000103114cbc: callq  0x00000001030fd420  ; OopMap{off=1089}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000103114cc1: jmpq   0x00000001031149e0
  0x0000000103114cc6: callq  0x000000010306db40  ; OopMap{rax=Oop off=1099}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000103114ccb: mov    0x0(%rax),%eax
  0x0000000103114cd1: mov    $0x6050b00,%eax
  0x0000000103114cd6: callq  0x00000001030fcc20  ; OopMap{rax=Oop off=1115}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x0000000103114cdb: jmpq   0x00000001031149f0
  0x0000000103114ce0: movabs $0x0,%rax          ;   {oop(NULL)}
  0x0000000103114cea: push   %rax
  0x0000000103114ceb: push   %rbx
  0x0000000103114cec: mov    0x48(%rax),%rbx
  0x0000000103114cf0: push   %rdi
  0x0000000103114cf1: push   %rsi
  0x0000000103114cf2: push   %rdx
  0x0000000103114cf3: push   %rcx
  0x0000000103114cf4: push   %r8
  0x0000000103114cf6: push   %r9
  0x0000000103114cf8: push   %r10
  0x0000000103114cfa: mov    %rsp,%r10
  0x0000000103114cfd: and    $0xfffffffffffffff0,%rsp
  0x0000000103114d01: push   %r10
  0x0000000103114d03: push   %r11
  0x0000000103114d05: mov    $0x102,%edi
  0x0000000103114d0a: movabs $0x7fff8e9d3aa2,%r10  ;   {runtime_call}
  0x0000000103114d14: callq  *%r10
  0x0000000103114d17: pop    %r11
  0x0000000103114d19: pop    %rsp
  0x0000000103114d1a: pop    %r10
  0x0000000103114d1c: pop    %r9
  0x0000000103114d1e: pop    %r8
  0x0000000103114d20: pop    %rcx
  0x0000000103114d21: pop    %rdx
  0x0000000103114d22: pop    %rsi
  0x0000000103114d23: pop    %rdi
  0x0000000103114d24: cmp    0x118(%rbx),%rax
  0x0000000103114d2b: pop    %rbx
  0x0000000103114d2c: pop    %rax
  0x0000000103114d2d: jne    0x0000000103114d3d
  0x0000000103114d33: jmpq   0x0000000103114a12
  0x0000000103114d38: mov    $0xa535d00,%eax
  0x0000000103114d3d: callq  0x00000001030fd420  ; OopMap{off=1218}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000103114d42: jmpq   0x0000000103114a08
  0x0000000103114d47: callq  0x000000010306db40  ; OopMap{rax=Oop off=1228}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000103114d4c: mov    0x0(%rax),%eax
  0x0000000103114d52: mov    $0x6050b00,%eax
  0x0000000103114d57: callq  0x00000001030fcc20  ; OopMap{rax=Oop off=1244}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x0000000103114d5c: jmpq   0x0000000103114a18
  0x0000000103114d61: nop
  0x0000000103114d62: nop
  0x0000000103114d63: mov    0x2a8(%r15),%rax
  0x0000000103114d6a: movabs $0x0,%r10
  0x0000000103114d74: mov    %r10,0x2a8(%r15)
  0x0000000103114d7b: movabs $0x0,%r10
  0x0000000103114d85: mov    %r10,0x2b0(%r15)
  0x0000000103114d8c: add    $0x30,%rsp
  0x0000000103114d90: pop    %rbp
  0x0000000103114d91: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x0000000103114d96: hlt
  0x0000000103114d97: hlt
  0x0000000103114d98: hlt
  0x0000000103114d99: hlt
  0x0000000103114d9a: hlt
  0x0000000103114d9b: hlt
  0x0000000103114d9c: hlt
  0x0000000103114d9d: hlt
  0x0000000103114d9e: hlt
  0x0000000103114d9f: hlt
[Exception Handler]
[Stub Code]
  0x0000000103114da0: callq  0x00000001030fb9a0  ;   {no_reloc}
  0x0000000103114da5: mov    %rsp,-0x28(%rsp)
  0x0000000103114daa: sub    $0x80,%rsp
  0x0000000103114db1: mov    %rax,0x78(%rsp)
  0x0000000103114db6: mov    %rcx,0x70(%rsp)
  0x0000000103114dbb: mov    %rdx,0x68(%rsp)
  0x0000000103114dc0: mov    %rbx,0x60(%rsp)
  0x0000000103114dc5: mov    %rbp,0x50(%rsp)
  0x0000000103114dca: mov    %rsi,0x48(%rsp)
  0x0000000103114dcf: mov    %rdi,0x40(%rsp)
  0x0000000103114dd4: mov    %r8,0x38(%rsp)
  0x0000000103114dd9: mov    %r9,0x30(%rsp)
  0x0000000103114dde: mov    %r10,0x28(%rsp)
  0x0000000103114de3: mov    %r11,0x20(%rsp)
  0x0000000103114de8: mov    %r12,0x18(%rsp)
  0x0000000103114ded: mov    %r13,0x10(%rsp)
  0x0000000103114df2: mov    %r14,0x8(%rsp)
  0x0000000103114df7: mov    %r15,(%rsp)
  0x0000000103114dfb: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x0000000103114e05: movabs $0x103114da5,%rsi  ;   {internal_word}
  0x0000000103114e0f: mov    %rsp,%rdx
  0x0000000103114e12: and    $0xfffffffffffffff0,%rsp
  0x0000000103114e16: callq  0x0000000101b0f196  ;   {runtime_call}
  0x0000000103114e1b: hlt
[Deopt Handler Code]
  0x0000000103114e1c: movabs $0x103114e1c,%r10  ;   {section_word}
  0x0000000103114e26: push   %r10
  0x0000000103114e28: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x0000000103114e2d: hlt
  0x0000000103114e2e: hlt
  0x0000000103114e2f: hlt
Decoding compiled method 0x0000000103115190:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000117036c40} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1'
  # this:     rsi:rsi   = 'java/lang/CharacterDataLatin1'
  # parm0:    rdx       = int
  #           [sp+0x50]  (sp of caller)
  0x0000000103115300: mov    0x8(%rsi),%r10d
  0x0000000103115304: shl    $0x3,%r10
  0x0000000103115308: cmp    %rax,%r10
  0x000000010311530b: jne    0x0000000103045e20  ;   {runtime_call}
  0x0000000103115311: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010311531c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000103115320: mov    %eax,-0x14000(%rsp)
  0x0000000103115327: push   %rbp
  0x0000000103115328: sub    $0x40,%rsp
  0x000000010311532c: movabs $0x1170a7198,%rax  ;   {metadata(method data for {method} {0x0000000117036c40} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x0000000103115336: mov    0xdc(%rax),%edi
  0x000000010311533c: add    $0x8,%edi
  0x000000010311533f: mov    %edi,0xdc(%rax)
  0x0000000103115345: movabs $0x117036c40,%rax  ;   {metadata({method} {0x0000000117036c40} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010311534f: and    $0x1ff8,%edi
  0x0000000103115355: cmp    $0x0,%edi
  0x0000000103115358: je     0x000000010311547a  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@0 (line 133)

  0x000000010311535e: mov    %rsi,%rax
  0x0000000103115361: movabs $0x1170a7198,%rdi  ;   {metadata(method data for {method} {0x0000000117036c40} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010311536b: movabs $0x7c0037468,%r10  ;   {metadata('java/lang/CharacterDataLatin1')}
  0x0000000103115375: mov    %r10,0x110(%rdi)
  0x000000010311537c: addq   $0x1,0x118(%rdi)
  0x0000000103115384: movabs $0x1170a67f0,%rax  ;   {metadata(method data for {method} {0x0000000117036470} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x000000010311538e: mov    0xdc(%rax),%edi
  0x0000000103115394: add    $0x8,%edi
  0x0000000103115397: mov    %edi,0xdc(%rax)
  0x000000010311539d: movabs $0x117036470,%rax  ;   {metadata({method} {0x0000000117036470} 'getProperties' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x00000001031153a7: and    $0x7ffff8,%edi
  0x00000001031153ad: cmp    $0x0,%edi
  0x00000001031153b0: je     0x0000000103115491
  0x00000001031153b6: mov    %rdx,%rax
  0x00000001031153b9: and    $0xffff,%eax
  0x00000001031153bf: movabs $0x7955c8ec0,%rdi  ;   {oop([I)}
  0x00000001031153c9: movslq %eax,%rbx
  0x00000001031153cc: cmp    0xc(%rdi),%eax     ; implicit exception: dispatches to 0x00000001031154a8
  0x00000001031153cf: jae    0x00000001031154b2
  0x00000001031153d5: mov    0x10(%rdi,%rbx,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)

  0x00000001031153d9: mov    %rax,%rsi
  0x00000001031153dc: and    $0x20000,%esi
  0x00000001031153e2: cmp    $0x0,%esi
  0x00000001031153e5: movabs $0x1170a7198,%rsi  ;   {metadata(method data for {method} {0x0000000117036c40} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x00000001031153ef: movabs $0x138,%rdi
  0x00000001031153f9: je     0x0000000103115409
  0x00000001031153ff: movabs $0x148,%rdi
  0x0000000103115409: mov    (%rsi,%rdi,1),%rbx
  0x000000010311540d: lea    0x1(%rbx),%rbx
  0x0000000103115411: mov    %rbx,(%rsi,%rdi,1)
  0x0000000103115415: je     0x000000010311546b  ;*ifeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@12 (line 136)

  0x000000010311541b: mov    %rax,%rsi
  0x000000010311541e: and    $0x7fc0000,%esi
  0x0000000103115424: cmp    $0x7fc0000,%esi
  0x000000010311542a: movabs $0x1170a7198,%rsi  ;   {metadata(method data for {method} {0x0000000117036c40} 'toLowerCase' '(I)I' in 'java/lang/CharacterDataLatin1')}
  0x0000000103115434: movabs $0x158,%rdi
  0x000000010311543e: je     0x000000010311544e
  0x0000000103115444: movabs $0x168,%rdi
  0x000000010311544e: mov    (%rsi,%rdi,1),%rbx
  0x0000000103115452: lea    0x1(%rbx),%rbx
  0x0000000103115456: mov    %rbx,(%rsi,%rdi,1)
  0x000000010311545a: je     0x000000010311546b  ;*if_icmpeq
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@21 (line 136)

  0x0000000103115460: shl    $0x5,%eax
  0x0000000103115463: sar    $0x17,%eax
  0x0000000103115466: add    %edx,%eax
  0x0000000103115468: mov    %rax,%rdx          ;*iload_2
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@37 (line 141)

  0x000000010311546b: mov    %rdx,%rax
  0x000000010311546e: add    $0x40,%rsp
  0x0000000103115472: pop    %rbp
  0x0000000103115473: test   %eax,-0xa20379(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x0000000103115479: retq
  0x000000010311547a: mov    %rax,0x8(%rsp)
  0x000000010311547f: movq   $0xffffffffffffffff,(%rsp)
  0x0000000103115487: callq  0x00000001030fe020  ; OopMap{rsi=Oop off=396}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@-1 (line 133)
                                                ;   {runtime_call}
  0x000000010311548c: jmpq   0x000000010311535e
  0x0000000103115491: mov    %rax,0x8(%rsp)
  0x0000000103115496: movq   $0xffffffffffffffff,(%rsp)
  0x000000010311549e: callq  0x00000001030fe020  ; OopMap{rsi=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x00000001031154a3: jmpq   0x00000001031153b6
  0x00000001031154a8: callq  0x000000010306db40  ; OopMap{rsi=Oop rdi=Oop off=429}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x00000001031154ad: callq  0x000000010306db40  ; OopMap{rsi=Oop rdi=Oop off=434}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x00000001031154b2: mov    %rax,(%rsp)
  0x00000001031154b6: callq  0x000000010306e200  ; OopMap{rsi=Oop rdi=Oop off=443}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ; - java.lang.CharacterDataLatin1::toLowerCase@4 (line 134)
                                                ;   {runtime_call}
  0x00000001031154bb: nop
  0x00000001031154bc: nop
  0x00000001031154bd: mov    0x2a8(%r15),%rax
  0x00000001031154c4: movabs $0x0,%r10
  0x00000001031154ce: mov    %r10,0x2a8(%r15)
  0x00000001031154d5: movabs $0x0,%r10
  0x00000001031154df: mov    %r10,0x2b0(%r15)
  0x00000001031154e6: add    $0x40,%rsp
  0x00000001031154ea: pop    %rbp
  0x00000001031154eb: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x00000001031154f0: hlt
  0x00000001031154f1: hlt
  0x00000001031154f2: hlt
  0x00000001031154f3: hlt
  0x00000001031154f4: hlt
  0x00000001031154f5: hlt
  0x00000001031154f6: hlt
  0x00000001031154f7: hlt
  0x00000001031154f8: hlt
  0x00000001031154f9: hlt
  0x00000001031154fa: hlt
  0x00000001031154fb: hlt
  0x00000001031154fc: hlt
  0x00000001031154fd: hlt
  0x00000001031154fe: hlt
  0x00000001031154ff: hlt
[Exception Handler]
[Stub Code]
  0x0000000103115500: callq  0x00000001030fb9a0  ;   {no_reloc}
  0x0000000103115505: mov    %rsp,-0x28(%rsp)
  0x000000010311550a: sub    $0x80,%rsp
  0x0000000103115511: mov    %rax,0x78(%rsp)
  0x0000000103115516: mov    %rcx,0x70(%rsp)
  0x000000010311551b: mov    %rdx,0x68(%rsp)
  0x0000000103115520: mov    %rbx,0x60(%rsp)
  0x0000000103115525: mov    %rbp,0x50(%rsp)
  0x000000010311552a: mov    %rsi,0x48(%rsp)
  0x000000010311552f: mov    %rdi,0x40(%rsp)
  0x0000000103115534: mov    %r8,0x38(%rsp)
  0x0000000103115539: mov    %r9,0x30(%rsp)
  0x000000010311553e: mov    %r10,0x28(%rsp)
  0x0000000103115543: mov    %r11,0x20(%rsp)
  0x0000000103115548: mov    %r12,0x18(%rsp)
  0x000000010311554d: mov    %r13,0x10(%rsp)
  0x0000000103115552: mov    %r14,0x8(%rsp)
  0x0000000103115557: mov    %r15,(%rsp)
  0x000000010311555b: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x0000000103115565: movabs $0x103115505,%rsi  ;   {internal_word}
  0x000000010311556f: mov    %rsp,%rdx
  0x0000000103115572: and    $0xfffffffffffffff0,%rsp
  0x0000000103115576: callq  0x0000000101b0f196  ;   {runtime_call}
  0x000000010311557b: hlt
[Deopt Handler Code]
  0x000000010311557c: movabs $0x10311557c,%r10  ;   {section_word}
  0x0000000103115586: push   %r10
  0x0000000103115588: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x000000010311558d: hlt
  0x000000010311558e: hlt
  0x000000010311558f: hlt
Decoding compiled method 0x0000000103115710:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000116efa6e0} 'getProtocol' '()Ljava/lang/String;' in 'java/net/URL'
  #           [sp+0x40]  (sp of caller)
  0x0000000103115860: mov    0x8(%rsi),%r10d
  0x0000000103115864: shl    $0x3,%r10
  0x0000000103115868: cmp    %rax,%r10
  0x000000010311586b: jne    0x0000000103045e20  ;   {runtime_call}
  0x0000000103115871: data32 data32 nopw 0x0(%rax,%rax,1)
  0x000000010311587c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000103115880: mov    %eax,-0x14000(%rsp)
  0x0000000103115887: push   %rbp
  0x0000000103115888: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.URL::getProtocol@0 (line 799)

  0x000000010311588c: mov    0x14(%rsi),%eax
  0x000000010311588f: shl    $0x3,%rax          ;*getfield protocol
                                                ; - java.net.URL::getProtocol@1 (line 799)

  0x0000000103115893: add    $0x30,%rsp
  0x0000000103115897: pop    %rbp
  0x0000000103115898: test   %eax,-0xa2079e(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010311589e: retq
  0x000000010311589f: nop
  0x00000001031158a0: nop
  0x00000001031158a1: mov    0x2a8(%r15),%rax
  0x00000001031158a8: movabs $0x0,%r10
  0x00000001031158b2: mov    %r10,0x2a8(%r15)
  0x00000001031158b9: movabs $0x0,%r10
  0x00000001031158c3: mov    %r10,0x2b0(%r15)
  0x00000001031158ca: add    $0x30,%rsp
  0x00000001031158ce: pop    %rbp
  0x00000001031158cf: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x00000001031158d4: hlt
  0x00000001031158d5: hlt
  0x00000001031158d6: hlt
  0x00000001031158d7: hlt
  0x00000001031158d8: hlt
  0x00000001031158d9: hlt
  0x00000001031158da: hlt
  0x00000001031158db: hlt
  0x00000001031158dc: hlt
  0x00000001031158dd: hlt
  0x00000001031158de: hlt
  0x00000001031158df: hlt
[Exception Handler]
[Stub Code]
  0x00000001031158e0: callq  0x00000001030fb9a0  ;   {no_reloc}
  0x00000001031158e5: mov    %rsp,-0x28(%rsp)
  0x00000001031158ea: sub    $0x80,%rsp
  0x00000001031158f1: mov    %rax,0x78(%rsp)
  0x00000001031158f6: mov    %rcx,0x70(%rsp)
  0x00000001031158fb: mov    %rdx,0x68(%rsp)
  0x0000000103115900: mov    %rbx,0x60(%rsp)
  0x0000000103115905: mov    %rbp,0x50(%rsp)
  0x000000010311590a: mov    %rsi,0x48(%rsp)
  0x000000010311590f: mov    %rdi,0x40(%rsp)
  0x0000000103115914: mov    %r8,0x38(%rsp)
  0x0000000103115919: mov    %r9,0x30(%rsp)
  0x000000010311591e: mov    %r10,0x28(%rsp)
  0x0000000103115923: mov    %r11,0x20(%rsp)
  0x0000000103115928: mov    %r12,0x18(%rsp)
  0x000000010311592d: mov    %r13,0x10(%rsp)
  0x0000000103115932: mov    %r14,0x8(%rsp)
  0x0000000103115937: mov    %r15,(%rsp)
  0x000000010311593b: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x0000000103115945: movabs $0x1031158e5,%rsi  ;   {internal_word}
  0x000000010311594f: mov    %rsp,%rdx
  0x0000000103115952: and    $0xfffffffffffffff0,%rsp
  0x0000000103115956: callq  0x0000000101b0f196  ;   {runtime_call}
  0x000000010311595b: hlt
[Deopt Handler Code]
  0x000000010311595c: movabs $0x10311595c,%r10  ;   {section_word}
  0x0000000103115966: push   %r10
  0x0000000103115968: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x000000010311596d: hlt
  0x000000010311596e: hlt
  0x000000010311596f: hlt
Decoding compiled method 0x0000000103115a10:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000116f32398} 'size' '()I' in 'java/util/Vector'
  #           [sp+0x50]  (sp of caller)
  0x0000000103115b60: mov    0x8(%rsi),%r10d
  0x0000000103115b64: shl    $0x3,%r10
  0x0000000103115b68: cmp    %rax,%r10
  0x0000000103115b6b: jne    0x0000000103045e20  ;   {runtime_call}
  0x0000000103115b71: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000103115b7c: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000103115b80: mov    %eax,-0x14000(%rsp)
  0x0000000103115b87: push   %rbp
  0x0000000103115b88: sub    $0x40,%rsp
  0x0000000103115b8c: lea    0x20(%rsp),%rdi
  0x0000000103115b91: mov    %rsi,0x8(%rdi)
  0x0000000103115b95: mov    (%rsi),%rax
  0x0000000103115b98: mov    %rax,%rbx
  0x0000000103115b9b: and    $0x7,%rbx
  0x0000000103115b9f: cmp    $0x5,%rbx
  0x0000000103115ba3: jne    0x0000000103115c2a
  0x0000000103115ba9: mov    0x8(%rsi),%ebx
  0x0000000103115bac: shl    $0x3,%rbx
  0x0000000103115bb0: mov    0xa8(%rbx),%rbx
  0x0000000103115bb7: or     %r15,%rbx
  0x0000000103115bba: xor    %rax,%rbx
  0x0000000103115bbd: and    $0xffffffffffffff87,%rbx
  0x0000000103115bc1: je     0x0000000103115c52
  0x0000000103115bc7: test   $0x7,%rbx
  0x0000000103115bce: jne    0x0000000103115c17
  0x0000000103115bd0: test   $0x300,%rbx
  0x0000000103115bd7: jne    0x0000000103115bf6
  0x0000000103115bd9: and    $0x37f,%rax
  0x0000000103115be0: mov    %rax,%rbx
  0x0000000103115be3: or     %r15,%rbx
  0x0000000103115be6: lock cmpxchg %rbx,(%rsi)
  0x0000000103115beb: jne    0x0000000103115c95
  0x0000000103115bf1: jmpq   0x0000000103115c52
  0x0000000103115bf6: mov    0x8(%rsi),%ebx
  0x0000000103115bf9: shl    $0x3,%rbx
  0x0000000103115bfd: mov    0xa8(%rbx),%rbx
  0x0000000103115c04: or     %r15,%rbx
  0x0000000103115c07: lock cmpxchg %rbx,(%rsi)
  0x0000000103115c0c: jne    0x0000000103115c95
  0x0000000103115c12: jmpq   0x0000000103115c52
  0x0000000103115c17: mov    0x8(%rsi),%ebx
  0x0000000103115c1a: shl    $0x3,%rbx
  0x0000000103115c1e: mov    0xa8(%rbx),%rbx
  0x0000000103115c25: lock cmpxchg %rbx,(%rsi)
  0x0000000103115c2a: mov    (%rsi),%rax
  0x0000000103115c2d: or     $0x1,%rax
  0x0000000103115c31: mov    %rax,(%rdi)
  0x0000000103115c34: lock cmpxchg %rdi,(%rsi)
  0x0000000103115c39: je     0x0000000103115c52
  0x0000000103115c3f: sub    %rsp,%rax
  0x0000000103115c42: and    $0xfffffffffffff007,%rax
  0x0000000103115c49: mov    %rax,(%rdi)
  0x0000000103115c4c: jne    0x0000000103115c95  ;*aload_0
                                                ; - java.util.Vector::size@0 (line 315)

  0x0000000103115c52: mov    0x10(%rsi),%esi    ;*getfield elementCount
                                                ; - java.util.Vector::size@1 (line 315)

  0x0000000103115c55: lea    0x20(%rsp),%rax
  0x0000000103115c5a: mov    0x8(%rax),%rbx
  0x0000000103115c5e: mov    (%rbx),%rdi
  0x0000000103115c61: and    $0x7,%rdi
  0x0000000103115c65: cmp    $0x5,%rdi
  0x0000000103115c69: je     0x0000000103115c86
  0x0000000103115c6f: mov    (%rax),%rdi
  0x0000000103115c72: test   %rdi,%rdi
  0x0000000103115c75: je     0x0000000103115c86
  0x0000000103115c7b: lock cmpxchg %rdi,(%rbx)
  0x0000000103115c80: jne    0x0000000103115ca5  ;*ireturn
                                                ; - java.util.Vector::size@4 (line 315)

  0x0000000103115c86: mov    %rsi,%rax
  0x0000000103115c89: add    $0x40,%rsp
  0x0000000103115c8d: pop    %rbp
  0x0000000103115c8e: test   %eax,-0xa20b94(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x0000000103115c94: retq
  0x0000000103115c95: mov    %rsi,0x8(%rsp)
  0x0000000103115c9a: mov    %rdi,(%rsp)
  0x0000000103115c9e: callq  0x00000001030fc4a0  ; OopMap{rsi=Oop [40]=Oop off=323}
                                                ;*synchronization entry
                                                ; - java.util.Vector::size@-1 (line 315)
                                                ;   {runtime_call}
  0x0000000103115ca3: jmp    0x0000000103115c52
  0x0000000103115ca5: lea    0x20(%rsp),%rax
  0x0000000103115caa: mov    %rax,(%rsp)
  0x0000000103115cae: callq  0x00000001030fc860  ;   {runtime_call}
  0x0000000103115cb3: jmp    0x0000000103115c86
  0x0000000103115cb5: nop
  0x0000000103115cb6: nop
  0x0000000103115cb7: mov    0x2a8(%r15),%rax
  0x0000000103115cbe: movabs $0x0,%r10
  0x0000000103115cc8: mov    %r10,0x2a8(%r15)
  0x0000000103115ccf: movabs $0x0,%r10
  0x0000000103115cd9: mov    %r10,0x2b0(%r15)
  0x0000000103115ce0: mov    %rax,%rbx
  0x0000000103115ce3: lea    0x20(%rsp),%rax
  0x0000000103115ce8: mov    0x8(%rax),%rsi
  0x0000000103115cec: mov    (%rsi),%rdi
  0x0000000103115cef: and    $0x7,%rdi
  0x0000000103115cf3: cmp    $0x5,%rdi
  0x0000000103115cf7: je     0x0000000103115d14
  0x0000000103115cfd: mov    (%rax),%rdi
  0x0000000103115d00: test   %rdi,%rdi
  0x0000000103115d03: je     0x0000000103115d14
  0x0000000103115d09: lock cmpxchg %rdi,(%rsi)
  0x0000000103115d0e: jne    0x0000000103115d21
  0x0000000103115d14: mov    %rbx,%rax
  0x0000000103115d17: add    $0x40,%rsp
  0x0000000103115d1b: pop    %rbp
  0x0000000103115d1c: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x0000000103115d21: lea    0x20(%rsp),%rax
  0x0000000103115d26: mov    %rax,(%rsp)
  0x0000000103115d2a: callq  0x00000001030fc860  ;   {runtime_call}
  0x0000000103115d2f: jmp    0x0000000103115d14
  0x0000000103115d31: hlt
  0x0000000103115d32: hlt
  0x0000000103115d33: hlt
  0x0000000103115d34: hlt
  0x0000000103115d35: hlt
  0x0000000103115d36: hlt
  0x0000000103115d37: hlt
  0x0000000103115d38: hlt
  0x0000000103115d39: hlt
  0x0000000103115d3a: hlt
  0x0000000103115d3b: hlt
  0x0000000103115d3c: hlt
  0x0000000103115d3d: hlt
  0x0000000103115d3e: hlt
  0x0000000103115d3f: hlt
[Exception Handler]
[Stub Code]
  0x0000000103115d40: callq  0x00000001030fb9a0  ;   {no_reloc}
  0x0000000103115d45: mov    %rsp,-0x28(%rsp)
  0x0000000103115d4a: sub    $0x80,%rsp
  0x0000000103115d51: mov    %rax,0x78(%rsp)
  0x0000000103115d56: mov    %rcx,0x70(%rsp)
  0x0000000103115d5b: mov    %rdx,0x68(%rsp)
  0x0000000103115d60: mov    %rbx,0x60(%rsp)
  0x0000000103115d65: mov    %rbp,0x50(%rsp)
  0x0000000103115d6a: mov    %rsi,0x48(%rsp)
  0x0000000103115d6f: mov    %rdi,0x40(%rsp)
  0x0000000103115d74: mov    %r8,0x38(%rsp)
  0x0000000103115d79: mov    %r9,0x30(%rsp)
  0x0000000103115d7e: mov    %r10,0x28(%rsp)
  0x0000000103115d83: mov    %r11,0x20(%rsp)
  0x0000000103115d88: mov    %r12,0x18(%rsp)
  0x0000000103115d8d: mov    %r13,0x10(%rsp)
  0x0000000103115d92: mov    %r14,0x8(%rsp)
  0x0000000103115d97: mov    %r15,(%rsp)
  0x0000000103115d9b: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x0000000103115da5: movabs $0x103115d45,%rsi  ;   {internal_word}
  0x0000000103115daf: mov    %rsp,%rdx
  0x0000000103115db2: and    $0xfffffffffffffff0,%rsp
  0x0000000103115db6: callq  0x0000000101b0f196  ;   {runtime_call}
  0x0000000103115dbb: hlt
[Deopt Handler Code]
  0x0000000103115dbc: movabs $0x103115dbc,%r10  ;   {section_word}
  0x0000000103115dc6: push   %r10
  0x0000000103115dc8: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x0000000103115dcd: hlt
  0x0000000103115dce: hlt
  0x0000000103115dcf: hlt
Decoding compiled method 0x0000000103115e90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000116efa518} 'getAuthority' '()Ljava/lang/String;' in 'java/net/URL'
  #           [sp+0x40]  (sp of caller)
  0x0000000103115fe0: mov    0x8(%rsi),%r10d
  0x0000000103115fe4: shl    $0x3,%r10
  0x0000000103115fe8: cmp    %rax,%r10
  0x0000000103115feb: jne    0x0000000103045e20  ;   {runtime_call}
  0x0000000103115ff1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000103115ffc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000103116000: mov    %eax,-0x14000(%rsp)
  0x0000000103116007: push   %rbp
  0x0000000103116008: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.URL::getAuthority@0 (line 768)

  0x000000010311600c: mov    0x24(%rsi),%eax
  0x000000010311600f: shl    $0x3,%rax          ;*getfield authority
                                                ; - java.net.URL::getAuthority@1 (line 768)

  0x0000000103116013: add    $0x30,%rsp
  0x0000000103116017: pop    %rbp
  0x0000000103116018: test   %eax,-0xa20f1e(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010311601e: retq
  0x000000010311601f: nop
  0x0000000103116020: nop
  0x0000000103116021: mov    0x2a8(%r15),%rax
  0x0000000103116028: movabs $0x0,%r10
  0x0000000103116032: mov    %r10,0x2a8(%r15)
  0x0000000103116039: movabs $0x0,%r10
  0x0000000103116043: mov    %r10,0x2b0(%r15)
  0x000000010311604a: add    $0x30,%rsp
  0x000000010311604e: pop    %rbp
  0x000000010311604f: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x0000000103116054: hlt
  0x0000000103116055: hlt
  0x0000000103116056: hlt
  0x0000000103116057: hlt
  0x0000000103116058: hlt
  0x0000000103116059: hlt
  0x000000010311605a: hlt
  0x000000010311605b: hlt
  0x000000010311605c: hlt
  0x000000010311605d: hlt
  0x000000010311605e: hlt
  0x000000010311605f: hlt
[Exception Handler]
[Stub Code]
  0x0000000103116060: callq  0x00000001030fb9a0  ;   {no_reloc}
  0x0000000103116065: mov    %rsp,-0x28(%rsp)
  0x000000010311606a: sub    $0x80,%rsp
  0x0000000103116071: mov    %rax,0x78(%rsp)
  0x0000000103116076: mov    %rcx,0x70(%rsp)
  0x000000010311607b: mov    %rdx,0x68(%rsp)
  0x0000000103116080: mov    %rbx,0x60(%rsp)
  0x0000000103116085: mov    %rbp,0x50(%rsp)
  0x000000010311608a: mov    %rsi,0x48(%rsp)
  0x000000010311608f: mov    %rdi,0x40(%rsp)
  0x0000000103116094: mov    %r8,0x38(%rsp)
  0x0000000103116099: mov    %r9,0x30(%rsp)
  0x000000010311609e: mov    %r10,0x28(%rsp)
  0x00000001031160a3: mov    %r11,0x20(%rsp)
  0x00000001031160a8: mov    %r12,0x18(%rsp)
  0x00000001031160ad: mov    %r13,0x10(%rsp)
  0x00000001031160b2: mov    %r14,0x8(%rsp)
  0x00000001031160b7: mov    %r15,(%rsp)
  0x00000001031160bb: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x00000001031160c5: movabs $0x103116065,%rsi  ;   {internal_word}
  0x00000001031160cf: mov    %rsp,%rdx
  0x00000001031160d2: and    $0xfffffffffffffff0,%rsp
  0x00000001031160d6: callq  0x0000000101b0f196  ;   {runtime_call}
  0x00000001031160db: hlt
[Deopt Handler Code]
  0x00000001031160dc: movabs $0x1031160dc,%r10  ;   {section_word}
  0x00000001031160e6: push   %r10
  0x00000001031160e8: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x00000001031160ed: hlt
  0x00000001031160ee: hlt
  0x00000001031160ef: hlt
Decoding compiled method 0x0000000103116190:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000116efa3e8} 'getPath' '()Ljava/lang/String;' in 'java/net/URL'
  #           [sp+0x40]  (sp of caller)
  0x00000001031162e0: mov    0x8(%rsi),%r10d
  0x00000001031162e4: shl    $0x3,%r10
  0x00000001031162e8: cmp    %rax,%r10
  0x00000001031162eb: jne    0x0000000103045e20  ;   {runtime_call}
  0x00000001031162f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x00000001031162fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000103116300: mov    %eax,-0x14000(%rsp)
  0x0000000103116307: push   %rbp
  0x0000000103116308: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.URL::getPath@0 (line 747)

  0x000000010311630c: mov    0x28(%rsi),%eax
  0x000000010311630f: shl    $0x3,%rax          ;*getfield path
                                                ; - java.net.URL::getPath@1 (line 747)

  0x0000000103116313: add    $0x30,%rsp
  0x0000000103116317: pop    %rbp
  0x0000000103116318: test   %eax,-0xa2121e(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010311631e: retq
  0x000000010311631f: nop
  0x0000000103116320: nop
  0x0000000103116321: mov    0x2a8(%r15),%rax
  0x0000000103116328: movabs $0x0,%r10
  0x0000000103116332: mov    %r10,0x2a8(%r15)
  0x0000000103116339: movabs $0x0,%r10
  0x0000000103116343: mov    %r10,0x2b0(%r15)
  0x000000010311634a: add    $0x30,%rsp
  0x000000010311634e: pop    %rbp
  0x000000010311634f: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x0000000103116354: hlt
  0x0000000103116355: hlt
  0x0000000103116356: hlt
  0x0000000103116357: hlt
  0x0000000103116358: hlt
  0x0000000103116359: hlt
  0x000000010311635a: hlt
  0x000000010311635b: hlt
  0x000000010311635c: hlt
  0x000000010311635d: hlt
  0x000000010311635e: hlt
  0x000000010311635f: hlt
[Exception Handler]
[Stub Code]
  0x0000000103116360: callq  0x00000001030fb9a0  ;   {no_reloc}
  0x0000000103116365: mov    %rsp,-0x28(%rsp)
  0x000000010311636a: sub    $0x80,%rsp
  0x0000000103116371: mov    %rax,0x78(%rsp)
  0x0000000103116376: mov    %rcx,0x70(%rsp)
  0x000000010311637b: mov    %rdx,0x68(%rsp)
  0x0000000103116380: mov    %rbx,0x60(%rsp)
  0x0000000103116385: mov    %rbp,0x50(%rsp)
  0x000000010311638a: mov    %rsi,0x48(%rsp)
  0x000000010311638f: mov    %rdi,0x40(%rsp)
  0x0000000103116394: mov    %r8,0x38(%rsp)
  0x0000000103116399: mov    %r9,0x30(%rsp)
  0x000000010311639e: mov    %r10,0x28(%rsp)
  0x00000001031163a3: mov    %r11,0x20(%rsp)
  0x00000001031163a8: mov    %r12,0x18(%rsp)
  0x00000001031163ad: mov    %r13,0x10(%rsp)
  0x00000001031163b2: mov    %r14,0x8(%rsp)
  0x00000001031163b7: mov    %r15,(%rsp)
  0x00000001031163bb: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x00000001031163c5: movabs $0x103116365,%rsi  ;   {internal_word}
  0x00000001031163cf: mov    %rsp,%rdx
  0x00000001031163d2: and    $0xfffffffffffffff0,%rsp
  0x00000001031163d6: callq  0x0000000101b0f196  ;   {runtime_call}
  0x00000001031163db: hlt
[Deopt Handler Code]
  0x00000001031163dc: movabs $0x1031163dc,%r10  ;   {section_word}
  0x00000001031163e6: push   %r10
  0x00000001031163e8: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x00000001031163ed: hlt
  0x00000001031163ee: hlt
  0x00000001031163ef: hlt
Decoding compiled method 0x0000000103116490:
Code:
[Entry Point]
[Constants]
[Loaded sun.misc.URLClassPath$FileLoader from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
  # {method} {0x0000000116fe1548} 'requestedCharsetName' '()Ljava/lang/String;' in 'java/lang/StringCoding$StringEncoder'
  #           [sp+0x40]  (sp of caller)
  0x00000001031165e0: mov    0x8(%rsi),%r10d
  0x00000001031165e4: shl    $0x3,%r10
  0x00000001031165e8: cmp    %rax,%r10
  0x00000001031165eb: jne    0x0000000103045e20  ;   {runtime_call}
  0x00000001031165f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x00000001031165fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000103116600: mov    %eax,-0x14000(%rsp)
  0x0000000103116607: push   %rbp
  0x0000000103116608: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.StringCoding$StringEncoder::requestedCharsetName@0 (line 295)

  0x000000010311660c: mov    0x18(%rsi),%eax
  0x000000010311660f: shl    $0x3,%rax          ;*getfield requestedCharsetName
                                                ; - java.lang.StringCoding$StringEncoder::requestedCharsetName@1 (line 295)

  0x0000000103116613: add    $0x30,%rsp
  0x0000000103116617: pop    %rbp
  0x0000000103116618: test   %eax,-0xa2151e(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010311661e: retq
  0x000000010311661f: nop
  0x0000000103116620: nop
  0x0000000103116621: mov    0x2a8(%r15),%rax
  0x0000000103116628: movabs $0x0,%r10
  0x0000000103116632: mov    %r10,0x2a8(%r15)
  0x0000000103116639: movabs $0x0,%r10
  0x0000000103116643: mov    %r10,0x2b0(%r15)
  0x000000010311664a: add    $0x30,%rsp
  0x000000010311664e: pop    %rbp
  0x000000010311664f: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x0000000103116654: hlt
  0x0000000103116655: hlt
  0x0000000103116656: hlt
  0x0000000103116657: hlt
  0x0000000103116658: hlt
  0x0000000103116659: hlt
  0x000000010311665a: hlt
  0x000000010311665b: hlt
  0x000000010311665c: hlt
  0x000000010311665d: hlt
  0x000000010311665e: hlt
  0x000000010311665f: hlt
[Exception Handler]
[Stub Code]
  0x0000000103116660: callq  0x00000001030fb9a0  ;   {no_reloc}
  0x0000000103116665: mov    %rsp,-0x28(%rsp)
  0x000000010311666a: sub    $0x80,%rsp
  0x0000000103116671: mov    %rax,0x78(%rsp)
  0x0000000103116676: mov    %rcx,0x70(%rsp)
  0x000000010311667b: mov    %rdx,0x68(%rsp)
  0x0000000103116680: mov    %rbx,0x60(%rsp)
  0x0000000103116685: mov    %rbp,0x50(%rsp)
  0x000000010311668a: mov    %rsi,0x48(%rsp)
  0x000000010311668f: mov    %rdi,0x40(%rsp)
  0x0000000103116694: mov    %r8,0x38(%rsp)
  0x0000000103116699: mov    %r9,0x30(%rsp)
  0x000000010311669e: mov    %r10,0x28(%rsp)
  0x00000001031166a3: mov    %r11,0x20(%rsp)
  0x00000001031166a8: mov    %r12,0x18(%rsp)
  0x00000001031166ad: mov    %r13,0x10(%rsp)
  0x00000001031166b2: mov    %r14,0x8(%rsp)
  0x00000001031166b7: mov    %r15,(%rsp)
  0x00000001031166bb: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x00000001031166c5: movabs $0x103116665,%rsi  ;   {internal_word}
  0x00000001031166cf: mov    %rsp,%rdx
  0x00000001031166d2: and    $0xfffffffffffffff0,%rsp
  0x00000001031166d6: callq  0x0000000101b0f196  ;   {runtime_call}
  0x00000001031166db: hlt
[Deopt Handler Code]
  0x00000001031166dc: movabs $0x1031166dc,%r10  ;   {section_word}
  0x00000001031166e6: push   %r10
  0x00000001031166e8: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x00000001031166ed: hlt
  0x00000001031166ee: hlt
  0x00000001031166ef: hlt
Decoding compiled method 0x0000000103116790:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000116efa810} 'getFile' '()Ljava/lang/String;' in 'java/net/URL'
  #           [sp+0x40]  (sp of caller)
  0x00000001031168e0: mov    0x8(%rsi),%r10d
  0x00000001031168e4: shl    $0x3,%r10
  0x00000001031168e8: cmp    %rax,%r10
  0x00000001031168eb: jne    0x0000000103045e20  ;   {runtime_call}
  0x00000001031168f1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x00000001031168fc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000103116900: mov    %eax,-0x14000(%rsp)
  0x0000000103116907: push   %rbp
  0x0000000103116908: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.net.URL::getFile@0 (line 826)

  0x000000010311690c: mov    0x1c(%rsi),%eax
  0x000000010311690f: shl    $0x3,%rax          ;*getfield file
                                                ; - java.net.URL::getFile@1 (line 826)

  0x0000000103116913: add    $0x30,%rsp
[Loaded sun.misc.Resource from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
  0x0000000103116917: pop    %rbp
  0x0000000103116918: test   %eax,-0xa2181e(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x000000010311691e: retq
  0x000000010311691f: nop
  0x0000000103116920: nop
  0x0000000103116921: mov    0x2a8(%r15),%rax
  0x0000000103116928: movabs $0x0,%r10
  0x0000000103116932: mov    %r10,0x2a8(%r15)
  0x0000000103116939: movabs $0x0,%r10
  0x0000000103116943: mov    %r10,0x2b0(%r15)
  0x000000010311694a: add    $0x30,%rsp
  0x000000010311694e: pop    %rbp
  0x000000010311694f: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x0000000103116954: hlt
  0x0000000103116955: hlt
  0x0000000103116956: hlt
  0x0000000103116957: hlt
  0x0000000103116958: hlt
  0x0000000103116959: hlt
  0x000000010311695a: hlt
  0x000000010311695b: hlt
  0x000000010311695c: hlt
  0x000000010311695d: hlt
  0x000000010311695e: hlt
  0x000000010311695f: hlt
[Exception Handler]
[Stub Code]
  0x0000000103116960: callq  0x00000001030fb9a0  ;   {no_reloc}
  0x0000000103116965: mov    %rsp,-0x28(%rsp)
  0x000000010311696a: sub    $0x80,%rsp
  0x0000000103116971: mov    %rax,0x78(%rsp)
  0x0000000103116976: mov    %rcx,0x70(%rsp)
  0x000000010311697b: mov    %rdx,0x68(%rsp)
  0x0000000103116980: mov    %rbx,0x60(%rsp)
  0x0000000103116985: mov    %rbp,0x50(%rsp)
  0x000000010311698a: mov    %rsi,0x48(%rsp)
  0x000000010311698f: mov    %rdi,0x40(%rsp)
  0x0000000103116994: mov    %r8,0x38(%rsp)
  0x0000000103116999: mov    %r9,0x30(%rsp)
  0x000000010311699e: mov    %r10,0x28(%rsp)
  0x00000001031169a3: mov    %r11,0x20(%rsp)
  0x00000001031169a8: mov    %r12,0x18(%rsp)
  0x00000001031169ad: mov    %r13,0x10(%rsp)
  0x00000001031169b2: mov    %r14,0x8(%rsp)
  0x00000001031169b7: mov    %r15,(%rsp)
  0x00000001031169bb: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x00000001031169c5: movabs $0x103116965,%rsi  ;   {internal_word}
  0x00000001031169cf: mov    %rsp,%rdx
  0x00000001031169d2: and    $0xfffffffffffffff0,%rsp
  0x00000001031169d6: callq  0x0000000101b0f196  ;   {runtime_call}
  0x00000001031169db: hlt
[Deopt Handler Code]
  0x00000001031169dc: movabs $0x1031169dc,%r10  ;   {section_word}
  0x00000001031169e6: push   %r10
  0x00000001031169e8: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x00000001031169ed: hlt
  0x00000001031169ee: hlt
  0x00000001031169ef: hlt
[Loaded sun.misc.URLClassPath$FileLoader$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Decoding compiled method 0x0000000103116a90:
Code:
[Entry Point]
[Constants]
  # {method} {0x0000000116f3ecd8} 'size' '()I' in 'java/util/ArrayList'
  #           [sp+0x40]  (sp of caller)
  0x0000000103116be0: mov    0x8(%rsi),%r10d
  0x0000000103116be4: shl    $0x3,%r10
  0x0000000103116be8: cmp    %rax,%r10
  0x0000000103116beb: jne    0x0000000103045e20  ;   {runtime_call}
  0x0000000103116bf1: data32 data32 nopw 0x0(%rax,%rax,1)
  0x0000000103116bfc: data32 data32 xchg %ax,%ax
[Verified Entry Point]
  0x0000000103116c00: mov    %eax,-0x14000(%rsp)
  0x0000000103116c07: push   %rbp
  0x0000000103116c08: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.ArrayList::size@0 (line 278)

  0x0000000103116c0c: mov    0x10(%rsi),%eax    ;*getfield size
                                                ; - java.util.ArrayList::size@1 (line 278)

  0x0000000103116c0f: add    $0x30,%rsp
  0x0000000103116c13: pop    %rbp
  0x0000000103116c14: test   %eax,-0xa21b1a(%rip)        # 0x00000001026f5100
                                                ;   {poll_return}
  0x0000000103116c1a: retq
  0x0000000103116c1b: nop
  0x0000000103116c1c: nop
  0x0000000103116c1d: mov    0x2a8(%r15),%rax
  0x0000000103116c24: movabs $0x0,%r10
  0x0000000103116c2e: mov    %r10,0x2a8(%r15)
  0x0000000103116c35: movabs $0x0,%r10
  0x0000000103116c3f: mov    %r10,0x2b0(%r15)
[Loaded java.lang.Package from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
  0x0000000103116c46: add    $0x30,%rsp
  0x0000000103116c4a: pop    %rbp
  0x0000000103116c4b: jmpq   0x000000010306e6a0  ;   {runtime_call}
  0x0000000103116c50: hlt
  0x0000000103116c51: hlt
  0x0000000103116c52: hlt
  0x0000000103116c53: hlt
  0x0000000103116c54: hlt
  0x0000000103116c55: hlt
  0x0000000103116c56: hlt
  0x0000000103116c57: hlt
  0x0000000103116c58: hlt
  0x0000000103116c59: hlt
  0x0000000103116c5a: hlt
  0x0000000103116c5b: hlt
  0x0000000103116c5c: hlt
  0x0000000103116c5d: hlt
  0x0000000103116c5e: hlt
  0x0000000103116c5f: hlt
[Exception Handler]
[Stub Code]
  0x0000000103116c60: callq  0x00000001030fb9a0  ;   {no_reloc}
  0x0000000103116c65: mov    %rsp,-0x28(%rsp)
  0x0000000103116c6a: sub    $0x80,%rsp
  0x0000000103116c71: mov    %rax,0x78(%rsp)
  0x0000000103116c76: mov    %rcx,0x70(%rsp)
  0x0000000103116c7b: mov    %rdx,0x68(%rsp)
  0x0000000103116c80: mov    %rbx,0x60(%rsp)
  0x0000000103116c85: mov    %rbp,0x50(%rsp)
  0x0000000103116c8a: mov    %rsi,0x48(%rsp)
  0x0000000103116c8f: mov    %rdi,0x40(%rsp)
  0x0000000103116c94: mov    %r8,0x38(%rsp)
  0x0000000103116c99: mov    %r9,0x30(%rsp)
  0x0000000103116c9e: mov    %r10,0x28(%rsp)
  0x0000000103116ca3: mov    %r11,0x20(%rsp)
  0x0000000103116ca8: mov    %r12,0x18(%rsp)
  0x0000000103116cad: mov    %r13,0x10(%rsp)
  0x0000000103116cb2: mov    %r14,0x8(%rsp)
  0x0000000103116cb7: mov    %r15,(%rsp)
  0x0000000103116cbb: movabs $0x101ce3e90,%rdi  ;   {external_word}
  0x0000000103116cc5: movabs $0x103116c65,%rsi  ;   {internal_word}
  0x0000000103116ccf: mov    %rsp,%rdx
  0x0000000103116cd2: and    $0xfffffffffffffff0,%rsp
  0x0000000103116cd6: callq  0x0000000101b0f196  ;   {runtime_call}
  0x0000000103116cdb: hlt
[Deopt Handler Code]
  0x0000000103116cdc: movabs $0x103116cdc,%r10  ;   {section_word}
  0x0000000103116ce6: push   %r10
  0x0000000103116ce8: jmpq   0x00000001030473c0  ;   {runtime_call}
  0x0000000103116ced: hlt
  0x0000000103116cee: hlt
  0x0000000103116cef: hlt
[Loaded sun.nio.ByteBuffered from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.PermissionCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.Permissions from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.net.URLConnection from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.URLConnection from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.protocol.file.FileURLConnection from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded sun.net.www.MessageHeader from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilePermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilePermission$1 from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.io.FilePermissionCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.AllPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.UnresolvedPermission from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.security.BasicPermissionCollection from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded main.java.Bar from file:/Users/M/work/mine/collection/target/classes/]
[Loaded sun.launcher.LauncherHelper$FXHelper from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Class$MethodArray from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Void from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
Disconnected from the target VM, address: '127.0.0.1:62431', transport: 'socket'
[Loaded java.lang.Shutdown from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]
[Loaded java.lang.Shutdown$Lock from /Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/rt.jar]

Process finished with exit code 0
